Nonterminals useless in grammar

   PARAMETER_TYPE_LIST
   PARAMETER_LIST
   PARAMETER_DECLARATION
   IDENTIFIER_LIST
   TYPE_NAME
   ABSTRACT_DECLARATOR
   DIRECT_ABSTRACT_DECLARATOR
   ENUMERATOR_LIST
   ENUMERATOR


Terminals unused in grammar

   SIZEOF
   ENUM
   ELLIPSIS


Rules useless in grammar

  177 PARAMETER_TYPE_LIST: PARAMETER_LIST
  178                    | PARAMETER_LIST ',' ELLIPSIS

  179 PARAMETER_LIST: PARAMETER_DECLARATION
  180               | PARAMETER_LIST ',' PARAMETER_DECLARATION

  181 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR
  182                      | DECLARATION_SPECIFIERS ABSTRACT_DECLARATOR
  183                      | DECLARATION_SPECIFIERS

  184 IDENTIFIER_LIST: IDENTIFIER
  185                | IDENTIFIER_LIST ',' IDENTIFIER

  186 TYPE_NAME: SPECIFIER_QUALIFIER_LIST
  187          | SPECIFIER_QUALIFIER_LIST ABSTRACT_DECLARATOR

  188 ABSTRACT_DECLARATOR: POINTER
  189                    | DIRECT_ABSTRACT_DECLARATOR
  190                    | POINTER DIRECT_ABSTRACT_DECLARATOR

  191 DIRECT_ABSTRACT_DECLARATOR: '(' ABSTRACT_DECLARATOR ')'
  192                           | '[' ']'
  193                           | '[' CONSTANT_EXPRESSION ']'
  194                           | DIRECT_ABSTRACT_DECLARATOR '[' ']'
  195                           | DIRECT_ABSTRACT_DECLARATOR '[' CONSTANT_EXPRESSION ']'
  196                           | '(' ')'
  197                           | '(' PARAMETER_TYPE_LIST ')'
  198                           | DIRECT_ABSTRACT_DECLARATOR '(' ')'
  199                           | DIRECT_ABSTRACT_DECLARATOR '(' PARAMETER_TYPE_LIST ')'

  200 ENUMERATOR_LIST: ENUMERATOR
  201                | ENUMERATOR_LIST ',' ENUMERATOR

  202 ENUMERATOR: IDENTIFIER
  203           | IDENTIFIER '=' CONSTANT_EXPRESSION


Rules useless in parser due to conflicts

  169 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER
  171                         | TYPE_QUALIFIER


State 0 conflicts: 21 shift/reduce
State 22 conflicts: 21 shift/reduce
State 26 conflicts: 22 shift/reduce
State 30 conflicts: 18 shift/reduce
State 31 conflicts: 1 shift/reduce
State 48 conflicts: 18 shift/reduce, 1 reduce/reduce
State 49 conflicts: 21 shift/reduce
State 51 conflicts: 22 shift/reduce
State 53 conflicts: 18 shift/reduce
State 56 conflicts: 1 shift/reduce
State 58 conflicts: 13 shift/reduce
State 66 conflicts: 18 shift/reduce
State 113 conflicts: 21 shift/reduce
State 128 conflicts: 13 shift/reduce
State 129 conflicts: 13 shift/reduce, 4 reduce/reduce
State 130 conflicts: 13 shift/reduce, 4 reduce/reduce
State 131 conflicts: 13 shift/reduce
State 200 conflicts: 13 shift/reduce
State 271 conflicts: 1 shift/reduce


Grammar

    0 $accept: TRANSLATION_UNIT $end

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    2                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION
    4                     | DECLARATION

    5 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
    6                    | DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT
    7                    | DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
    8                    | DECLARATOR COMPOUND_STATEMENT

    9 DECLARATION: DECLARATION_SPECIFIERS ';'
   10            | DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST ';'

   11 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIERS
   12                       | DECLARATION_SPECIFIERS STORAGE_CLASS_SPECIFIERS
   13                       | TYPE_SPECIFIER
   14                       | DECLARATION_SPECIFIERS TYPE_SPECIFIER
   15                       | TYPE_QUALIFIER
   16                       | DECLARATION_SPECIFIERS TYPE_QUALIFIER

   17 STORAGE_CLASS_SPECIFIERS: TYPEDEF
   18                         | EXTERN
   19                         | STATIC
   20                         | AUTO
   21                         | REGISTER

   22 TYPE_SPECIFIER: VOID
   23               | CHAR
   24               | SHORT
   25               | INT
   26               | LONG
   27               | FLOAT
   28               | DOUBLE
   29               | SIGNED
   30               | UNSIGNED
   31               | STRUCT_OR_UNION_SPECIFIER
   32               | ENUM_SPECIFIER

   33 TYPE_QUALIFIER: CONST
   34               | VOLATILE

   35 INIT_DECLARATOR_LIST: INIT_DECLARATOR
   36                     | INIT_DECLARATOR_LIST ',' INIT_DECLARATOR

   37 INIT_DECLARATOR: DECLARATOR
   38                | DECLARATOR '=' INITIALIZER

   39 DECLARATOR: POINTER DIRECT_DECLARATOR
   40           | DIRECT_DECLARATOR
   41           | '(' DECLARATOR ')'

   42 DIRECT_DECLARATOR: IDENTIFIER
   43                  | DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION ']'
   44                  | DIRECT_DECLARATOR '[' ']'
   45                  | DIRECT_DECLARATOR '(' ')'

   46 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION

   47 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
   48                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

   49 EXPRESSION: ASSIGNMENT_EXPRESSION
   50           | EXPRESSION ',' ASSIGNMENT_EXPRESSION

   51 ASSIGNMENT_OPERATOR: '='
   52                    | MUL_ASSIGN
   53                    | DIV_ASSIGN
   54                    | MOD_ASSIGN
   55                    | ADD_ASSIGN
   56                    | SUB_ASSIGN
   57                    | LEFT_ASSIGN
   58                    | RIGHT_ASSIGN
   59                    | AND_ASSIGN
   60                    | XOR_ASSIGN
   61                    | OR_ASSIGN

   62 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION
   63                       | LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' CONDITIONAL_EXPRESSION

   64 POINTER: '*'
   65        | '*' TYPE_QUALIFIER_LIST
   66        | '*' POINTER
   67        | '*' TYPE_QUALIFIER_LIST POINTER

   68 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER
   69                    | TYPE_QUALIFIER_LIST TYPE_QUALIFIER

   70 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION
   71                      | LOGICAL_OR_EXPRESSION OR_OP LOGICAL_AND_EXPRESSION

   72 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION
   73                       | LOGICAL_AND_EXPRESSION AND_OP INCLUSIVE_OR_EXPRESSION

   74 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
   75                        | INCLUSIVE_OR_EXPRESSION '|' EXCLUSIVE_OR_EXPRESSION

   76 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
   77                        | EXCLUSIVE_OR_EXPRESSION '^' AND_EXPRESSION

   78 AND_EXPRESSION: EQUALITY_EXPRESSION
   79               | AND_EXPRESSION '&' EQUALITY_EXPRESSION

   80 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
   81                    | EQUALITY_EXPRESSION EQ_OP RELATIONAL_EXPRESSION
   82                    | EQUALITY_EXPRESSION NE_OP RELATIONAL_EXPRESSION

   83 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
   84                      | RELATIONAL_EXPRESSION LT SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION GT SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION LE_OP SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION GE_OP SHIFT_EXPRESSION

   88 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
   89                 | SHIFT_EXPRESSION LEFT_OP ADDITIVE_EXPRESSION
   90                 | SHIFT_EXPRESSION RIGHT_OP ADDITIVE_EXPRESSION

   91 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   92                    | ADDITIVE_EXPRESSION PLUS MULTIPLICATIVE_EXPRESSION
   93                    | ADDITIVE_EXPRESSION MINUS MULTIPLICATIVE_EXPRESSION

   94 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   95                          | MULTIPLICATIVE_EXPRESSION MULTIPLY CAST_EXPRESSION
   96                          | MULTIPLICATIVE_EXPRESSION DIVIDE CAST_EXPRESSION
   97                          | MULTIPLICATIVE_EXPRESSION MODULO CAST_EXPRESSION

   98 CAST_EXPRESSION: UNARY_EXPRESSION

   99 UNARY_EXPRESSION: POSTFIX_EXPRESSION
  100                 | INC_OP UNARY_EXPRESSION
  101                 | DEC_OP UNARY_EXPRESSION
  102                 | UNARY_OPERATOR CAST_EXPRESSION

  103 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
  104                   | POSTFIX_EXPRESSION '[' EXPRESSION ']'
  105                   | POSTFIX_EXPRESSION '(' ')'
  106                   | POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')'
  107                   | POSTFIX_EXPRESSION '.' IDENTIFIER
  108                   | POSTFIX_EXPRESSION PTR_OP IDENTIFIER
  109                   | POSTFIX_EXPRESSION INC_OP
  110                   | POSTFIX_EXPRESSION DEC_OP

  111 PRIMARY_EXPRESSION: IDENTIFIER
  112                   | CONSTANT
  113                   | STRING_LITERAL
  114                   | '(' EXPRESSION ')'

  115 UNARY_OPERATOR: '&'
  116               | MULTIPLY
  117               | PLUS
  118               | MINUS
  119               | '~'
  120               | '!'

  121 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
  122                         | ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION

  123 INITIALIZER: ASSIGNMENT_EXPRESSION
  124            | '{' INITIALIZER_LIST '}'
  125            | '{' INITIALIZER_LIST ',' '}'

  126 INITIALIZER_LIST: INITIALIZER
  127                 | INITIALIZER_LIST ',' INITIALIZER

  128 STATEMENT: LABELED_STATEMENT
  129          | COMPOUND_STATEMENT
  130          | EXPRESSION_STATEMENT
  131          | SELECTION_STATEMENT
  132          | ITERATION_STATEMENT
  133          | JUMP_STATEMENT

  134 LABELED_STATEMENT: IDENTIFIER ':' STATEMENT
  135                  | CASE CONSTANT_EXPRESSION ':' STATEMENT
  136                  | DEFAULT ':' STATEMENT

  137 COMPOUND_STATEMENT: '{' '}'
  138                   | '{' STATEMENT_LIST '}'
  139                   | '{' DECLARATION_LIST '}'
  140                   | '{' DECLARATION_LIST STATEMENT_LIST '}'

  141 DECLARATION_LIST: DECLARATION
  142                 | DECLARATION_LIST DECLARATION

  143 STATEMENT_LIST: STATEMENT
  144               | STATEMENT_LIST STATEMENT

  145 EXPRESSION_STATEMENT: ';'
  146                     | EXPRESSION ';'

  147 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT
  148                    | IF '(' EXPRESSION ')' STATEMENT ELSE STATEMENT
  149                    | SWITCH '(' EXPRESSION ')' STATEMENT

  150 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' STATEMENT
  151                    | DO STATEMENT WHILE '(' EXPRESSION ')' ';'
  152                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  153                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

  154 JUMP_STATEMENT: GOTO IDENTIFIER ';'
  155               | CONTINUE ';'
  156               | BREAK ';'
  157               | RETURN ';'
  158               | RETURN EXPRESSION ';'

  159 ENUM_SPECIFIER: %empty

  160 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST '}'
  161                          | STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST '}'
  162                          | STRUCT_OR_UNION IDENTIFIER

  163 STRUCT_OR_UNION: STRUCT
  164                | UNION

  165 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION
  166                        | STRUCT_DECLARATION_LIST STRUCT_DECLARATION

  167 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST ';'

  168 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST
  169                         | TYPE_SPECIFIER
  170                         | TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST
  171                         | TYPE_QUALIFIER

  172 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR
  173                       | STRUCT_DECLARATOR_LIST ',' STRUCT_DECLARATOR

  174 STRUCT_DECLARATOR: DECLARATOR
  175                  | ':' CONSTANT_EXPRESSION
  176                  | DECLARATOR ':' CONSTANT_EXPRESSION


Terminals, with rules where they appear

$end (0) 0
'!' (33) 120
'&' (38) 79 115
'(' (40) 41 45 105 106 114 147 148 149 150 151 152 153
')' (41) 41 45 105 106 114 147 148 149 150 151 152 153
'*' (42) 64 65 66 67
',' (44) 36 50 122 125 127 173
'.' (46) 107
':' (58) 63 134 135 136 175 176
';' (59) 9 10 145 146 151 154 155 156 157 158 167
'=' (61) 38 51
'?' (63) 63
'[' (91) 43 44 104
']' (93) 43 44 104
'^' (94) 77
'{' (123) 124 125 137 138 139 140 160 161
'|' (124) 75
'}' (125) 124 125 137 138 139 140 160 161
'~' (126) 119
error (256)
IDENTIFIER (258) 42 107 108 111 134 154 160 162
CONSTANT (259) 112
STRING_LITERAL (260) 113
SIZEOF (261)
PTR_OP (262) 108
INC_OP (263) 100 109
DEC_OP (264) 101 110
LEFT_OP (265) 89
RIGHT_OP (266) 90
LE_OP (267) 86
GE_OP (268) 87
EQ_OP (269) 81
NE_OP (270) 82
AND_OP (271) 73
OR_OP (272) 71
MUL_ASSIGN (273) 52
DIV_ASSIGN (274) 53
MOD_ASSIGN (275) 54
ADD_ASSIGN (276) 55
SUB_ASSIGN (277) 56
LEFT_ASSIGN (278) 57
RIGHT_ASSIGN (279) 58
AND_ASSIGN (280) 59
XOR_ASSIGN (281) 60
OR_ASSIGN (282) 61
GT (283) 85
LT (284) 84
PLUS (285) 92 117
MINUS (286) 93 118
MULTIPLY (287) 95 116
MODULO (288) 97
DIVIDE (289) 96
TYPEDEF (290) 17
EXTERN (291) 18
STATIC (292) 19
AUTO (293) 20
REGISTER (294) 21
CHAR (295) 23
SHORT (296) 24
INT (297) 25
LONG (298) 26
SIGNED (299) 29
UNSIGNED (300) 30
FLOAT (301) 27
DOUBLE (302) 28
CONST (303) 33
VOLATILE (304) 34
VOID (305) 22
STRUCT (306) 163
UNION (307) 164
ENUM (308)
ELLIPSIS (309)
CASE (310) 135
DEFAULT (311) 136
IF (312) 147 148
ELSE (313) 148
SWITCH (314) 149
WHILE (315) 150 151
DO (316) 151
FOR (317) 152 153
GOTO (318) 154
CONTINUE (319) 155
BREAK (320) 156
RETURN (321) 157 158


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
TRANSLATION_UNIT (86)
    on left: 1 2, on right: 0 2
EXTERNAL_DECLARATION (87)
    on left: 3 4, on right: 1 2
FUNCTION_DEFINITION (88)
    on left: 5 6 7 8, on right: 3
DECLARATION (89)
    on left: 9 10, on right: 4 141 142
DECLARATION_SPECIFIERS (90)
    on left: 11 12 13 14 15 16, on right: 5 6 9 10 12 14 16
STORAGE_CLASS_SPECIFIERS (91)
    on left: 17 18 19 20 21, on right: 11 12
TYPE_SPECIFIER (92)
    on left: 22 23 24 25 26 27 28 29 30 31 32, on right: 13 14 168
    169
TYPE_QUALIFIER (93)
    on left: 33 34, on right: 15 16 68 69 170 171
INIT_DECLARATOR_LIST (94)
    on left: 35 36, on right: 10 36
INIT_DECLARATOR (95)
    on left: 37 38, on right: 35 36
DECLARATOR (96)
    on left: 39 40 41, on right: 5 6 7 8 37 38 41 174 176
DIRECT_DECLARATOR (97)
    on left: 42 43 44 45, on right: 39 40 43 44 45
CONSTANT_EXPRESSION (98)
    on left: 46, on right: 43 135 175 176
ASSIGNMENT_EXPRESSION (99)
    on left: 47 48, on right: 48 49 50 121 122 123
EXPRESSION (100)
    on left: 49 50, on right: 50 63 104 114 146 147 148 149 150 151
    153 158
ASSIGNMENT_OPERATOR (101)
    on left: 51 52 53 54 55 56 57 58 59 60 61, on right: 48
CONDITIONAL_EXPRESSION (102)
    on left: 62 63, on right: 46 47 63
POINTER (103)
    on left: 64 65 66 67, on right: 39 66 67
TYPE_QUALIFIER_LIST (104)
    on left: 68 69, on right: 65 67 69
LOGICAL_OR_EXPRESSION (105)
    on left: 70 71, on right: 62 63 71
LOGICAL_AND_EXPRESSION (106)
    on left: 72 73, on right: 70 71 73
INCLUSIVE_OR_EXPRESSION (107)
    on left: 74 75, on right: 72 73 75
EXCLUSIVE_OR_EXPRESSION (108)
    on left: 76 77, on right: 74 75 77
AND_EXPRESSION (109)
    on left: 78 79, on right: 76 77 79
EQUALITY_EXPRESSION (110)
    on left: 80 81 82, on right: 78 79 81 82
RELATIONAL_EXPRESSION (111)
    on left: 83 84 85 86 87, on right: 80 81 82 84 85 86 87
SHIFT_EXPRESSION (112)
    on left: 88 89 90, on right: 83 84 85 86 87 89 90
ADDITIVE_EXPRESSION (113)
    on left: 91 92 93, on right: 88 89 90 92 93
MULTIPLICATIVE_EXPRESSION (114)
    on left: 94 95 96 97, on right: 91 92 93 95 96 97
CAST_EXPRESSION (115)
    on left: 98, on right: 94 95 96 97 102
UNARY_EXPRESSION (116)
    on left: 99 100 101 102, on right: 48 98 100 101
POSTFIX_EXPRESSION (117)
    on left: 103 104 105 106 107 108 109 110, on right: 99 104 105
    106 107 108 109 110
PRIMARY_EXPRESSION (118)
    on left: 111 112 113 114, on right: 103
UNARY_OPERATOR (119)
    on left: 115 116 117 118 119 120, on right: 102
ARGUMENT_EXPRESSION_LIST (120)
    on left: 121 122, on right: 106 122
INITIALIZER (121)
    on left: 123 124 125, on right: 38 126 127
INITIALIZER_LIST (122)
    on left: 126 127, on right: 124 125 127
STATEMENT (123)
    on left: 128 129 130 131 132 133, on right: 134 135 136 143 144
    147 148 149 150 151 152 153
LABELED_STATEMENT (124)
    on left: 134 135 136, on right: 128
COMPOUND_STATEMENT (125)
    on left: 137 138 139 140, on right: 5 6 7 8 129
DECLARATION_LIST (126)
    on left: 141 142, on right: 5 7 139 140 142
STATEMENT_LIST (127)
    on left: 143 144, on right: 138 140 144
EXPRESSION_STATEMENT (128)
    on left: 145 146, on right: 130 152 153
SELECTION_STATEMENT (129)
    on left: 147 148 149, on right: 131
ITERATION_STATEMENT (130)
    on left: 150 151 152 153, on right: 132
JUMP_STATEMENT (131)
    on left: 154 155 156 157 158, on right: 133
ENUM_SPECIFIER (132)
    on left: 159, on right: 32
STRUCT_OR_UNION_SPECIFIER (133)
    on left: 160 161 162, on right: 31
STRUCT_OR_UNION (134)
    on left: 163 164, on right: 160 161 162
STRUCT_DECLARATION_LIST (135)
    on left: 165 166, on right: 160 161 166
STRUCT_DECLARATION (136)
    on left: 167, on right: 165 166
SPECIFIER_QUALIFIER_LIST (137)
    on left: 168 169 170 171, on right: 167 168 170
STRUCT_DECLARATOR_LIST (138)
    on left: 172 173, on right: 167 173
STRUCT_DECLARATOR (139)
    on left: 174 175 176, on right: 172 173


State 0

    0 $accept: . TRANSLATION_UNIT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 159 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    '('         [reduce using rule 159 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 159 (ENUM_SPECIFIER)]
    $default    reduce using rule 159 (ENUM_SPECIFIER)

    TRANSLATION_UNIT           go to state 22
    EXTERNAL_DECLARATION       go to state 23
    FUNCTION_DEFINITION        go to state 24
    DECLARATION                go to state 25
    DECLARATION_SPECIFIERS     go to state 26
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 1

   42 DIRECT_DECLARATOR: IDENTIFIER .

    $default  reduce using rule 42 (DIRECT_DECLARATOR)


State 2

   17 STORAGE_CLASS_SPECIFIERS: TYPEDEF .

    $default  reduce using rule 17 (STORAGE_CLASS_SPECIFIERS)


State 3

   18 STORAGE_CLASS_SPECIFIERS: EXTERN .

    $default  reduce using rule 18 (STORAGE_CLASS_SPECIFIERS)


State 4

   19 STORAGE_CLASS_SPECIFIERS: STATIC .

    $default  reduce using rule 19 (STORAGE_CLASS_SPECIFIERS)


State 5

   20 STORAGE_CLASS_SPECIFIERS: AUTO .

    $default  reduce using rule 20 (STORAGE_CLASS_SPECIFIERS)


State 6

   21 STORAGE_CLASS_SPECIFIERS: REGISTER .

    $default  reduce using rule 21 (STORAGE_CLASS_SPECIFIERS)


State 7

   23 TYPE_SPECIFIER: CHAR .

    $default  reduce using rule 23 (TYPE_SPECIFIER)


State 8

   24 TYPE_SPECIFIER: SHORT .

    $default  reduce using rule 24 (TYPE_SPECIFIER)


State 9

   25 TYPE_SPECIFIER: INT .

    $default  reduce using rule 25 (TYPE_SPECIFIER)


State 10

   26 TYPE_SPECIFIER: LONG .

    $default  reduce using rule 26 (TYPE_SPECIFIER)


State 11

   29 TYPE_SPECIFIER: SIGNED .

    $default  reduce using rule 29 (TYPE_SPECIFIER)


State 12

   30 TYPE_SPECIFIER: UNSIGNED .

    $default  reduce using rule 30 (TYPE_SPECIFIER)


State 13

   27 TYPE_SPECIFIER: FLOAT .

    $default  reduce using rule 27 (TYPE_SPECIFIER)


State 14

   28 TYPE_SPECIFIER: DOUBLE .

    $default  reduce using rule 28 (TYPE_SPECIFIER)


State 15

   33 TYPE_QUALIFIER: CONST .

    $default  reduce using rule 33 (TYPE_QUALIFIER)


State 16

   34 TYPE_QUALIFIER: VOLATILE .

    $default  reduce using rule 34 (TYPE_QUALIFIER)


State 17

   22 TYPE_SPECIFIER: VOID .

    $default  reduce using rule 22 (TYPE_SPECIFIER)


State 18

  163 STRUCT_OR_UNION: STRUCT .

    $default  reduce using rule 163 (STRUCT_OR_UNION)


State 19

  164 STRUCT_OR_UNION: UNION .

    $default  reduce using rule 164 (STRUCT_OR_UNION)


State 20

   41 DECLARATOR: '(' . DECLARATOR ')'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR         go to state 36
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 21

   64 POINTER: '*' .
   65        | '*' . TYPE_QUALIFIER_LIST
   66        | '*' . POINTER
   67        | '*' . TYPE_QUALIFIER_LIST POINTER

    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    '*'       shift, and go to state 21

    $default  reduce using rule 64 (POINTER)

    TYPE_QUALIFIER       go to state 37
    POINTER              go to state 38
    TYPE_QUALIFIER_LIST  go to state 39


State 22

    0 $accept: TRANSLATION_UNIT . $end
    2 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    $end        shift, and go to state 40
    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 159 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    '('         [reduce using rule 159 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 159 (ENUM_SPECIFIER)]
    $default    reduce using rule 159 (ENUM_SPECIFIER)

    EXTERNAL_DECLARATION       go to state 41
    FUNCTION_DEFINITION        go to state 24
    DECLARATION                go to state 25
    DECLARATION_SPECIFIERS     go to state 26
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 23

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 1 (TRANSLATION_UNIT)


State 24

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION .

    $default  reduce using rule 3 (EXTERNAL_DECLARATION)


State 25

    4 EXTERNAL_DECLARATION: DECLARATION .

    $default  reduce using rule 4 (EXTERNAL_DECLARATION)


State 26

    5 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
    6                    | DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT
    9 DECLARATION: DECLARATION_SPECIFIERS . ';'
   10            | DECLARATION_SPECIFIERS . INIT_DECLARATOR_LIST ';'
   12 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS . STORAGE_CLASS_SPECIFIERS
   14                       | DECLARATION_SPECIFIERS . TYPE_SPECIFIER
   16                       | DECLARATION_SPECIFIERS . TYPE_QUALIFIER

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    ';'         shift, and go to state 42
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 159 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 159 (ENUM_SPECIFIER)]
    '('         [reduce using rule 159 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 159 (ENUM_SPECIFIER)]

    STORAGE_CLASS_SPECIFIERS   go to state 43
    TYPE_SPECIFIER             go to state 44
    TYPE_QUALIFIER             go to state 45
    INIT_DECLARATOR_LIST       go to state 46
    INIT_DECLARATOR            go to state 47
    DECLARATOR                 go to state 48
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 27

   11 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIERS .

    $default  reduce using rule 11 (DECLARATION_SPECIFIERS)


State 28

   13 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .

    $default  reduce using rule 13 (DECLARATION_SPECIFIERS)


State 29

   15 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .

    $default  reduce using rule 15 (DECLARATION_SPECIFIERS)


State 30

    7 FUNCTION_DEFINITION: DECLARATOR . DECLARATION_LIST COMPOUND_STATEMENT
    8                    | DECLARATOR . COMPOUND_STATEMENT

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    DECLARATION                go to state 50
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 52
    DECLARATION_LIST           go to state 53
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 31

   40 DECLARATOR: DIRECT_DECLARATOR .
   43 DIRECT_DECLARATOR: DIRECT_DECLARATOR . '[' CONSTANT_EXPRESSION ']'
   44                  | DIRECT_DECLARATOR . '[' ']'
   45                  | DIRECT_DECLARATOR . '(' ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    '('       [reduce using rule 40 (DECLARATOR)]
    $default  reduce using rule 40 (DECLARATOR)


State 32

   39 DECLARATOR: POINTER . DIRECT_DECLARATOR

    IDENTIFIER  shift, and go to state 1

    DIRECT_DECLARATOR  go to state 56


State 33

   32 TYPE_SPECIFIER: ENUM_SPECIFIER .

    $default  reduce using rule 32 (TYPE_SPECIFIER)


State 34

   31 TYPE_SPECIFIER: STRUCT_OR_UNION_SPECIFIER .

    $default  reduce using rule 31 (TYPE_SPECIFIER)


State 35

  160 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION . IDENTIFIER '{' STRUCT_DECLARATION_LIST '}'
  161                          | STRUCT_OR_UNION . '{' STRUCT_DECLARATION_LIST '}'
  162                          | STRUCT_OR_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 57
    '{'         shift, and go to state 58


State 36

   41 DECLARATOR: '(' DECLARATOR . ')'

    ')'  shift, and go to state 59


State 37

   68 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER .

    $default  reduce using rule 68 (TYPE_QUALIFIER_LIST)


State 38

   66 POINTER: '*' POINTER .

    $default  reduce using rule 66 (POINTER)


State 39

   65 POINTER: '*' TYPE_QUALIFIER_LIST .
   67        | '*' TYPE_QUALIFIER_LIST . POINTER
   69 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST . TYPE_QUALIFIER

    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    '*'       shift, and go to state 21

    $default  reduce using rule 65 (POINTER)

    TYPE_QUALIFIER  go to state 60
    POINTER         go to state 61


State 40

    0 $accept: TRANSLATION_UNIT $end .

    $default  accept


State 41

    2 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 2 (TRANSLATION_UNIT)


State 42

    9 DECLARATION: DECLARATION_SPECIFIERS ';' .

    $default  reduce using rule 9 (DECLARATION)


State 43

   12 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS STORAGE_CLASS_SPECIFIERS .

    $default  reduce using rule 12 (DECLARATION_SPECIFIERS)


State 44

   14 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS TYPE_SPECIFIER .

    $default  reduce using rule 14 (DECLARATION_SPECIFIERS)


State 45

   16 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS TYPE_QUALIFIER .

    $default  reduce using rule 16 (DECLARATION_SPECIFIERS)


State 46

   10 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST . ';'
   36 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST . ',' INIT_DECLARATOR

    ','  shift, and go to state 62
    ';'  shift, and go to state 63


State 47

   35 INIT_DECLARATOR_LIST: INIT_DECLARATOR .

    $default  reduce using rule 35 (INIT_DECLARATOR_LIST)


State 48

    5 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . DECLARATION_LIST COMPOUND_STATEMENT
    6                    | DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT
   37 INIT_DECLARATOR: DECLARATOR .
   38                | DECLARATOR . '=' INITIALIZER

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '='       shift, and go to state 64
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    ','       reduce using rule 37 (INIT_DECLARATOR)
    ';'       reduce using rule 37 (INIT_DECLARATOR)
    ';'       [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    DECLARATION                go to state 50
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 65
    DECLARATION_LIST           go to state 66
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 49

  137 COMPOUND_STATEMENT: '{' . '}'
  138                   | '{' . STATEMENT_LIST '}'
  139                   | '{' . DECLARATION_LIST '}'
  140                   | '{' . DECLARATION_LIST STATEMENT_LIST '}'

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TYPEDEF         shift, and go to state 2
    EXTERN          shift, and go to state 3
    STATIC          shift, and go to state 4
    AUTO            shift, and go to state 5
    REGISTER        shift, and go to state 6
    CHAR            shift, and go to state 7
    SHORT           shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    CONST           shift, and go to state 15
    VOLATILE        shift, and go to state 16
    VOID            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    '}'             shift, and go to state 89
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    IDENTIFIER  [reduce using rule 159 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 159 (ENUM_SPECIFIER)]
    '('         [reduce using rule 159 (ENUM_SPECIFIER)]
    $default    reduce using rule 159 (ENUM_SPECIFIER)

    DECLARATION                go to state 50
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 110
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    DECLARATION_LIST           go to state 113
    STATEMENT_LIST             go to state 114
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 50

  141 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 141 (DECLARATION_LIST)


State 51

    9 DECLARATION: DECLARATION_SPECIFIERS . ';'
   10            | DECLARATION_SPECIFIERS . INIT_DECLARATOR_LIST ';'
   12 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS . STORAGE_CLASS_SPECIFIERS
   14                       | DECLARATION_SPECIFIERS . TYPE_SPECIFIER
   16                       | DECLARATION_SPECIFIERS . TYPE_QUALIFIER

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    ';'         shift, and go to state 42
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 159 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 159 (ENUM_SPECIFIER)]
    '('         [reduce using rule 159 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 159 (ENUM_SPECIFIER)]

    STORAGE_CLASS_SPECIFIERS   go to state 43
    TYPE_SPECIFIER             go to state 44
    TYPE_QUALIFIER             go to state 45
    INIT_DECLARATOR_LIST       go to state 46
    INIT_DECLARATOR            go to state 47
    DECLARATOR                 go to state 119
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 52

    8 FUNCTION_DEFINITION: DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 8 (FUNCTION_DEFINITION)


State 53

    7 FUNCTION_DEFINITION: DECLARATOR DECLARATION_LIST . COMPOUND_STATEMENT
  142 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    DECLARATION                go to state 120
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 121
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 54

   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR '(' . ')'

    ')'  shift, and go to state 122


State 55

   43 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' . CONSTANT_EXPRESSION ']'
   44                  | DIRECT_DECLARATOR '[' . ']'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91
    ']'             shift, and go to state 124

    CONSTANT_EXPRESSION        go to state 125
    CONDITIONAL_EXPRESSION     go to state 126
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 56

   39 DECLARATOR: POINTER DIRECT_DECLARATOR .
   43 DIRECT_DECLARATOR: DIRECT_DECLARATOR . '[' CONSTANT_EXPRESSION ']'
   44                  | DIRECT_DECLARATOR . '[' ']'
   45                  | DIRECT_DECLARATOR . '(' ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    '('       [reduce using rule 39 (DECLARATOR)]
    $default  reduce using rule 39 (DECLARATOR)


State 57

  160 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER . '{' STRUCT_DECLARATION_LIST '}'
  162                          | STRUCT_OR_UNION IDENTIFIER .

    '{'  shift, and go to state 128

    $default  reduce using rule 162 (STRUCT_OR_UNION_SPECIFIER)


State 58

  161 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' . STRUCT_DECLARATION_LIST '}'

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 129
    TYPE_QUALIFIER             go to state 130
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION_LIST    go to state 131
    STRUCT_DECLARATION         go to state 132
    SPECIFIER_QUALIFIER_LIST   go to state 133


State 59

   41 DECLARATOR: '(' DECLARATOR ')' .

    $default  reduce using rule 41 (DECLARATOR)


State 60

   69 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST TYPE_QUALIFIER .

    $default  reduce using rule 69 (TYPE_QUALIFIER_LIST)


State 61

   67 POINTER: '*' TYPE_QUALIFIER_LIST POINTER .

    $default  reduce using rule 67 (POINTER)


State 62

   36 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST ',' . INIT_DECLARATOR

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    INIT_DECLARATOR    go to state 134
    DECLARATOR         go to state 119
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 63

   10 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST ';' .

    $default  reduce using rule 10 (DECLARATION)


State 64

   38 INIT_DECLARATOR: DECLARATOR '=' . INITIALIZER

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 135
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 136
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    INITIALIZER                go to state 137


State 65

    6 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 6 (FUNCTION_DEFINITION)


State 66

    5 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST . COMPOUND_STATEMENT
  142 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    DECLARATION                go to state 120
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 138
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 67

  111 PRIMARY_EXPRESSION: IDENTIFIER .
  134 LABELED_STATEMENT: IDENTIFIER . ':' STATEMENT

    ':'  shift, and go to state 139

    $default  reduce using rule 111 (PRIMARY_EXPRESSION)


State 68

  112 PRIMARY_EXPRESSION: CONSTANT .

    $default  reduce using rule 112 (PRIMARY_EXPRESSION)


State 69

  113 PRIMARY_EXPRESSION: STRING_LITERAL .

    $default  reduce using rule 113 (PRIMARY_EXPRESSION)


State 70

  100 UNARY_EXPRESSION: INC_OP . UNARY_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    UNARY_EXPRESSION    go to state 140
    POSTFIX_EXPRESSION  go to state 107
    PRIMARY_EXPRESSION  go to state 108
    UNARY_OPERATOR      go to state 109


State 71

  101 UNARY_EXPRESSION: DEC_OP . UNARY_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    UNARY_EXPRESSION    go to state 141
    POSTFIX_EXPRESSION  go to state 107
    PRIMARY_EXPRESSION  go to state 108
    UNARY_OPERATOR      go to state 109


State 72

  117 UNARY_OPERATOR: PLUS .

    $default  reduce using rule 117 (UNARY_OPERATOR)


State 73

  118 UNARY_OPERATOR: MINUS .

    $default  reduce using rule 118 (UNARY_OPERATOR)


State 74

  116 UNARY_OPERATOR: MULTIPLY .

    $default  reduce using rule 116 (UNARY_OPERATOR)


State 75

  135 LABELED_STATEMENT: CASE . CONSTANT_EXPRESSION ':' STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CONSTANT_EXPRESSION        go to state 142
    CONDITIONAL_EXPRESSION     go to state 126
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 76

  136 LABELED_STATEMENT: DEFAULT . ':' STATEMENT

    ':'  shift, and go to state 143


State 77

  147 SELECTION_STATEMENT: IF . '(' EXPRESSION ')' STATEMENT
  148                    | IF . '(' EXPRESSION ')' STATEMENT ELSE STATEMENT

    '('  shift, and go to state 144


State 78

  149 SELECTION_STATEMENT: SWITCH . '(' EXPRESSION ')' STATEMENT

    '('  shift, and go to state 145


State 79

  150 ITERATION_STATEMENT: WHILE . '(' EXPRESSION ')' STATEMENT

    '('  shift, and go to state 146


State 80

  151 ITERATION_STATEMENT: DO . STATEMENT WHILE '(' EXPRESSION ')' ';'

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 147
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 81

  152 ITERATION_STATEMENT: FOR . '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  153                    | FOR . '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    '('  shift, and go to state 148


State 82

  154 JUMP_STATEMENT: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 149


State 83

  155 JUMP_STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 150


State 84

  156 JUMP_STATEMENT: BREAK . ';'

    ';'  shift, and go to state 151


State 85

  157 JUMP_STATEMENT: RETURN . ';'
  158               | RETURN . EXPRESSION ';'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    ';'             shift, and go to state 152
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 153
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 86

  115 UNARY_OPERATOR: '&' .

    $default  reduce using rule 115 (UNARY_OPERATOR)


State 87

  119 UNARY_OPERATOR: '~' .

    $default  reduce using rule 119 (UNARY_OPERATOR)


State 88

  120 UNARY_OPERATOR: '!' .

    $default  reduce using rule 120 (UNARY_OPERATOR)


State 89

  137 COMPOUND_STATEMENT: '{' '}' .

    $default  reduce using rule 137 (COMPOUND_STATEMENT)


State 90

  145 EXPRESSION_STATEMENT: ';' .

    $default  reduce using rule 145 (EXPRESSION_STATEMENT)


State 91

  114 PRIMARY_EXPRESSION: '(' . EXPRESSION ')'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 154
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 92

   49 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 49 (EXPRESSION)


State 93

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  146 EXPRESSION_STATEMENT: EXPRESSION . ';'

    ','  shift, and go to state 155
    ';'  shift, and go to state 156


State 94

   47 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 47 (ASSIGNMENT_EXPRESSION)


State 95

   62 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION .
   63                       | LOGICAL_OR_EXPRESSION . '?' EXPRESSION ':' CONDITIONAL_EXPRESSION
   71 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION . OR_OP LOGICAL_AND_EXPRESSION

    OR_OP  shift, and go to state 157
    '?'    shift, and go to state 158

    $default  reduce using rule 62 (CONDITIONAL_EXPRESSION)


State 96

   70 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION .
   73 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . AND_OP INCLUSIVE_OR_EXPRESSION

    AND_OP  shift, and go to state 159

    $default  reduce using rule 70 (LOGICAL_OR_EXPRESSION)


State 97

   72 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .
   75 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . '|' EXCLUSIVE_OR_EXPRESSION

    '|'  shift, and go to state 160

    $default  reduce using rule 72 (LOGICAL_AND_EXPRESSION)


State 98

   74 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .
   77 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . '^' AND_EXPRESSION

    '^'  shift, and go to state 161

    $default  reduce using rule 74 (INCLUSIVE_OR_EXPRESSION)


State 99

   76 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .
   79 AND_EXPRESSION: AND_EXPRESSION . '&' EQUALITY_EXPRESSION

    '&'  shift, and go to state 162

    $default  reduce using rule 76 (EXCLUSIVE_OR_EXPRESSION)


State 100

   78 AND_EXPRESSION: EQUALITY_EXPRESSION .
   81 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQ_OP RELATIONAL_EXPRESSION
   82                    | EQUALITY_EXPRESSION . NE_OP RELATIONAL_EXPRESSION

    EQ_OP  shift, and go to state 163
    NE_OP  shift, and go to state 164

    $default  reduce using rule 78 (AND_EXPRESSION)


State 101

   80 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .
   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION

    LE_OP  shift, and go to state 165
    GE_OP  shift, and go to state 166
    GT     shift, and go to state 167
    LT     shift, and go to state 168

    $default  reduce using rule 80 (EQUALITY_EXPRESSION)


State 102

   83 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .
   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   90                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 169
    RIGHT_OP  shift, and go to state 170

    $default  reduce using rule 83 (RELATIONAL_EXPRESSION)


State 103

   88 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .
   92 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   93                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172

    $default  reduce using rule 88 (SHIFT_EXPRESSION)


State 104

   91 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .
   95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   96                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   97                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION

    MULTIPLY  shift, and go to state 173
    MODULO    shift, and go to state 174
    DIVIDE    shift, and go to state 175

    $default  reduce using rule 91 (ADDITIVE_EXPRESSION)


State 105

   94 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 94 (MULTIPLICATIVE_EXPRESSION)


State 106

   48 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION
   98 CAST_EXPRESSION: UNARY_EXPRESSION .

    MUL_ASSIGN    shift, and go to state 176
    DIV_ASSIGN    shift, and go to state 177
    MOD_ASSIGN    shift, and go to state 178
    ADD_ASSIGN    shift, and go to state 179
    SUB_ASSIGN    shift, and go to state 180
    LEFT_ASSIGN   shift, and go to state 181
    RIGHT_ASSIGN  shift, and go to state 182
    AND_ASSIGN    shift, and go to state 183
    XOR_ASSIGN    shift, and go to state 184
    OR_ASSIGN     shift, and go to state 185
    '='           shift, and go to state 186

    $default  reduce using rule 98 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 187


State 107

   99 UNARY_EXPRESSION: POSTFIX_EXPRESSION .
  104 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . '[' EXPRESSION ']'
  105                   | POSTFIX_EXPRESSION . '(' ')'
  106                   | POSTFIX_EXPRESSION . '(' ARGUMENT_EXPRESSION_LIST ')'
  107                   | POSTFIX_EXPRESSION . '.' IDENTIFIER
  108                   | POSTFIX_EXPRESSION . PTR_OP IDENTIFIER
  109                   | POSTFIX_EXPRESSION . INC_OP
  110                   | POSTFIX_EXPRESSION . DEC_OP

    PTR_OP  shift, and go to state 188
    INC_OP  shift, and go to state 189
    DEC_OP  shift, and go to state 190
    '.'     shift, and go to state 191
    '('     shift, and go to state 192
    '['     shift, and go to state 193

    $default  reduce using rule 99 (UNARY_EXPRESSION)


State 108

  103 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 103 (POSTFIX_EXPRESSION)


State 109

  102 UNARY_EXPRESSION: UNARY_OPERATOR . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CAST_EXPRESSION     go to state 194
    UNARY_EXPRESSION    go to state 127
    POSTFIX_EXPRESSION  go to state 107
    PRIMARY_EXPRESSION  go to state 108
    UNARY_OPERATOR      go to state 109


State 110

  143 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 143 (STATEMENT_LIST)


State 111

  128 STATEMENT: LABELED_STATEMENT .

    $default  reduce using rule 128 (STATEMENT)


State 112

  129 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 129 (STATEMENT)


State 113

  139 COMPOUND_STATEMENT: '{' DECLARATION_LIST . '}'
  140                   | '{' DECLARATION_LIST . STATEMENT_LIST '}'
  142 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    TYPEDEF         shift, and go to state 2
    EXTERN          shift, and go to state 3
    STATIC          shift, and go to state 4
    AUTO            shift, and go to state 5
    REGISTER        shift, and go to state 6
    CHAR            shift, and go to state 7
    SHORT           shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    CONST           shift, and go to state 15
    VOLATILE        shift, and go to state 16
    VOID            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    '}'             shift, and go to state 195
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    IDENTIFIER  [reduce using rule 159 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 159 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 159 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 159 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 159 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 159 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 159 (ENUM_SPECIFIER)]
    '('         [reduce using rule 159 (ENUM_SPECIFIER)]
    $default    reduce using rule 159 (ENUM_SPECIFIER)

    DECLARATION                go to state 120
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 110
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    STATEMENT_LIST             go to state 196
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 114

  138 COMPOUND_STATEMENT: '{' STATEMENT_LIST . '}'
  144 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    '}'             shift, and go to state 197
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 198
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 115

  130 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 130 (STATEMENT)


State 116

  131 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 131 (STATEMENT)


State 117

  132 STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 132 (STATEMENT)


State 118

  133 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 133 (STATEMENT)


State 119

   37 INIT_DECLARATOR: DECLARATOR .
   38                | DECLARATOR . '=' INITIALIZER

    '='  shift, and go to state 64

    $default  reduce using rule 37 (INIT_DECLARATOR)


State 120

  142 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 142 (DECLARATION_LIST)


State 121

    7 FUNCTION_DEFINITION: DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT .

    $default  reduce using rule 7 (FUNCTION_DEFINITION)


State 122

   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR '(' ')' .

    $default  reduce using rule 45 (DIRECT_DECLARATOR)


State 123

  111 PRIMARY_EXPRESSION: IDENTIFIER .

    $default  reduce using rule 111 (PRIMARY_EXPRESSION)


State 124

   44 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' ']' .

    $default  reduce using rule 44 (DIRECT_DECLARATOR)


State 125

   43 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION . ']'

    ']'  shift, and go to state 199


State 126

   46 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 46 (CONSTANT_EXPRESSION)


State 127

   98 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 98 (CAST_EXPRESSION)


State 128

  160 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' . STRUCT_DECLARATION_LIST '}'

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 129
    TYPE_QUALIFIER             go to state 130
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION_LIST    go to state 200
    STRUCT_DECLARATION         go to state 132
    SPECIFIER_QUALIFIER_LIST   go to state 133


State 129

  168 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER . SPECIFIER_QUALIFIER_LIST
  169                         | TYPE_SPECIFIER .

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    IDENTIFIER  reduce using rule 159 (ENUM_SPECIFIER)
    IDENTIFIER  [reduce using rule 169 (SPECIFIER_QUALIFIER_LIST)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    ':'         reduce using rule 159 (ENUM_SPECIFIER)
    ':'         [reduce using rule 169 (SPECIFIER_QUALIFIER_LIST)]
    '('         reduce using rule 159 (ENUM_SPECIFIER)
    '('         [reduce using rule 169 (SPECIFIER_QUALIFIER_LIST)]
    '*'         reduce using rule 159 (ENUM_SPECIFIER)
    '*'         [reduce using rule 169 (SPECIFIER_QUALIFIER_LIST)]
    $default    reduce using rule 159 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 129
    TYPE_QUALIFIER             go to state 130
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    SPECIFIER_QUALIFIER_LIST   go to state 201


State 130

  170 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER . SPECIFIER_QUALIFIER_LIST
  171                         | TYPE_QUALIFIER .

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    IDENTIFIER  reduce using rule 159 (ENUM_SPECIFIER)
    IDENTIFIER  [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    CHAR        [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 159 (ENUM_SPECIFIER)]
    INT         [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 159 (ENUM_SPECIFIER)]
    ':'         reduce using rule 159 (ENUM_SPECIFIER)
    ':'         [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    '('         reduce using rule 159 (ENUM_SPECIFIER)
    '('         [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    '*'         reduce using rule 159 (ENUM_SPECIFIER)
    '*'         [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    $default    reduce using rule 159 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 129
    TYPE_QUALIFIER             go to state 130
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    SPECIFIER_QUALIFIER_LIST   go to state 202


State 131

  161 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST . '}'
  166 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST . STRUCT_DECLARATION

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '}'       shift, and go to state 203

    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 129
    TYPE_QUALIFIER             go to state 130
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION         go to state 204
    SPECIFIER_QUALIFIER_LIST   go to state 133


State 132

  165 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION .

    $default  reduce using rule 165 (STRUCT_DECLARATION_LIST)


State 133

  167 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST . STRUCT_DECLARATOR_LIST ';'

    IDENTIFIER  shift, and go to state 1
    ':'         shift, and go to state 205
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR              go to state 206
    DIRECT_DECLARATOR       go to state 31
    POINTER                 go to state 32
    STRUCT_DECLARATOR_LIST  go to state 207
    STRUCT_DECLARATOR       go to state 208


State 134

   36 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST ',' INIT_DECLARATOR .

    $default  reduce using rule 36 (INIT_DECLARATOR_LIST)


State 135

  124 INITIALIZER: '{' . INITIALIZER_LIST '}'
  125            | '{' . INITIALIZER_LIST ',' '}'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 135
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 136
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    INITIALIZER                go to state 209
    INITIALIZER_LIST           go to state 210


State 136

  123 INITIALIZER: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 123 (INITIALIZER)


State 137

   38 INIT_DECLARATOR: DECLARATOR '=' INITIALIZER .

    $default  reduce using rule 38 (INIT_DECLARATOR)


State 138

    5 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT .

    $default  reduce using rule 5 (FUNCTION_DEFINITION)


State 139

  134 LABELED_STATEMENT: IDENTIFIER ':' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 211
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 140

  100 UNARY_EXPRESSION: INC_OP UNARY_EXPRESSION .

    $default  reduce using rule 100 (UNARY_EXPRESSION)


State 141

  101 UNARY_EXPRESSION: DEC_OP UNARY_EXPRESSION .

    $default  reduce using rule 101 (UNARY_EXPRESSION)


State 142

  135 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION . ':' STATEMENT

    ':'  shift, and go to state 212


State 143

  136 LABELED_STATEMENT: DEFAULT ':' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 213
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 144

  147 SELECTION_STATEMENT: IF '(' . EXPRESSION ')' STATEMENT
  148                    | IF '(' . EXPRESSION ')' STATEMENT ELSE STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 214
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 145

  149 SELECTION_STATEMENT: SWITCH '(' . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 215
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 146

  150 ITERATION_STATEMENT: WHILE '(' . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 216
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 147

  151 ITERATION_STATEMENT: DO STATEMENT . WHILE '(' EXPRESSION ')' ';'

    WHILE  shift, and go to state 217


State 148

  152 ITERATION_STATEMENT: FOR '(' . EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  153                    | FOR '(' . EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    EXPRESSION_STATEMENT       go to state 218


State 149

  154 JUMP_STATEMENT: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 219


State 150

  155 JUMP_STATEMENT: CONTINUE ';' .

    $default  reduce using rule 155 (JUMP_STATEMENT)


State 151

  156 JUMP_STATEMENT: BREAK ';' .

    $default  reduce using rule 156 (JUMP_STATEMENT)


State 152

  157 JUMP_STATEMENT: RETURN ';' .

    $default  reduce using rule 157 (JUMP_STATEMENT)


State 153

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  158 JUMP_STATEMENT: RETURN EXPRESSION . ';'

    ','  shift, and go to state 155
    ';'  shift, and go to state 220


State 154

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  114 PRIMARY_EXPRESSION: '(' EXPRESSION . ')'

    ','  shift, and go to state 155
    ')'  shift, and go to state 221


State 155

   50 EXPRESSION: EXPRESSION ',' . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 222
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 156

  146 EXPRESSION_STATEMENT: EXPRESSION ';' .

    $default  reduce using rule 146 (EXPRESSION_STATEMENT)


State 157

   71 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION OR_OP . LOGICAL_AND_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    LOGICAL_AND_EXPRESSION     go to state 223
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 158

   63 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' . EXPRESSION ':' CONDITIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 224
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 159

   73 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION AND_OP . INCLUSIVE_OR_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    INCLUSIVE_OR_EXPRESSION    go to state 225
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 160

   75 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION '|' . EXCLUSIVE_OR_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    EXCLUSIVE_OR_EXPRESSION    go to state 226
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 161

   77 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION '^' . AND_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    AND_EXPRESSION             go to state 227
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 162

   79 AND_EXPRESSION: AND_EXPRESSION '&' . EQUALITY_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    EQUALITY_EXPRESSION        go to state 228
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 163

   81 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQ_OP . RELATIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    RELATIONAL_EXPRESSION      go to state 229
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 164

   82 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NE_OP . RELATIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    RELATIONAL_EXPRESSION      go to state 230
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 165

   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LE_OP . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    SHIFT_EXPRESSION           go to state 231
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 166

   87 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GE_OP . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    SHIFT_EXPRESSION           go to state 232
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 167

   85 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GT . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    SHIFT_EXPRESSION           go to state 233
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 168

   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LT . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    SHIFT_EXPRESSION           go to state 234
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 169

   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION LEFT_OP . ADDITIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ADDITIVE_EXPRESSION        go to state 235
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 170

   90 SHIFT_EXPRESSION: SHIFT_EXPRESSION RIGHT_OP . ADDITIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ADDITIVE_EXPRESSION        go to state 236
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 171

   92 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS . MULTIPLICATIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    MULTIPLICATIVE_EXPRESSION  go to state 237
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 172

   93 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS . MULTIPLICATIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    MULTIPLICATIVE_EXPRESSION  go to state 238
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 173

   95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLY . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CAST_EXPRESSION     go to state 239
    UNARY_EXPRESSION    go to state 127
    POSTFIX_EXPRESSION  go to state 107
    PRIMARY_EXPRESSION  go to state 108
    UNARY_OPERATOR      go to state 109


State 174

   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MODULO . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CAST_EXPRESSION     go to state 240
    UNARY_EXPRESSION    go to state 127
    POSTFIX_EXPRESSION  go to state 107
    PRIMARY_EXPRESSION  go to state 108
    UNARY_OPERATOR      go to state 109


State 175

   96 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CAST_EXPRESSION     go to state 241
    UNARY_EXPRESSION    go to state 127
    POSTFIX_EXPRESSION  go to state 107
    PRIMARY_EXPRESSION  go to state 108
    UNARY_OPERATOR      go to state 109


State 176

   52 ASSIGNMENT_OPERATOR: MUL_ASSIGN .

    $default  reduce using rule 52 (ASSIGNMENT_OPERATOR)


State 177

   53 ASSIGNMENT_OPERATOR: DIV_ASSIGN .

    $default  reduce using rule 53 (ASSIGNMENT_OPERATOR)


State 178

   54 ASSIGNMENT_OPERATOR: MOD_ASSIGN .

    $default  reduce using rule 54 (ASSIGNMENT_OPERATOR)


State 179

   55 ASSIGNMENT_OPERATOR: ADD_ASSIGN .

    $default  reduce using rule 55 (ASSIGNMENT_OPERATOR)


State 180

   56 ASSIGNMENT_OPERATOR: SUB_ASSIGN .

    $default  reduce using rule 56 (ASSIGNMENT_OPERATOR)


State 181

   57 ASSIGNMENT_OPERATOR: LEFT_ASSIGN .

    $default  reduce using rule 57 (ASSIGNMENT_OPERATOR)


State 182

   58 ASSIGNMENT_OPERATOR: RIGHT_ASSIGN .

    $default  reduce using rule 58 (ASSIGNMENT_OPERATOR)


State 183

   59 ASSIGNMENT_OPERATOR: AND_ASSIGN .

    $default  reduce using rule 59 (ASSIGNMENT_OPERATOR)


State 184

   60 ASSIGNMENT_OPERATOR: XOR_ASSIGN .

    $default  reduce using rule 60 (ASSIGNMENT_OPERATOR)


State 185

   61 ASSIGNMENT_OPERATOR: OR_ASSIGN .

    $default  reduce using rule 61 (ASSIGNMENT_OPERATOR)


State 186

   51 ASSIGNMENT_OPERATOR: '=' .

    $default  reduce using rule 51 (ASSIGNMENT_OPERATOR)


State 187

   48 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 242
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 188

  108 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 243


State 189

  109 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION INC_OP .

    $default  reduce using rule 109 (POSTFIX_EXPRESSION)


State 190

  110 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION DEC_OP .

    $default  reduce using rule 110 (POSTFIX_EXPRESSION)


State 191

  107 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 244


State 192

  105 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' . ')'
  106                   | POSTFIX_EXPRESSION '(' . ARGUMENT_EXPRESSION_LIST ')'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91
    ')'             shift, and go to state 245

    ASSIGNMENT_EXPRESSION      go to state 246
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    ARGUMENT_EXPRESSION_LIST   go to state 247


State 193

  104 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' . EXPRESSION ']'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 248
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 194

  102 UNARY_EXPRESSION: UNARY_OPERATOR CAST_EXPRESSION .

    $default  reduce using rule 102 (UNARY_EXPRESSION)


State 195

  139 COMPOUND_STATEMENT: '{' DECLARATION_LIST '}' .

    $default  reduce using rule 139 (COMPOUND_STATEMENT)


State 196

  140 COMPOUND_STATEMENT: '{' DECLARATION_LIST STATEMENT_LIST . '}'
  144 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    '}'             shift, and go to state 249
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 198
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 197

  138 COMPOUND_STATEMENT: '{' STATEMENT_LIST '}' .

    $default  reduce using rule 138 (COMPOUND_STATEMENT)


State 198

  144 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 144 (STATEMENT_LIST)


State 199

   43 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION ']' .

    $default  reduce using rule 43 (DIRECT_DECLARATOR)


State 200

  160 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST . '}'
  166 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST . STRUCT_DECLARATION

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '}'       shift, and go to state 250

    CHAR      [reduce using rule 159 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 159 (ENUM_SPECIFIER)]
    INT       [reduce using rule 159 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 159 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 159 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 159 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 159 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 159 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 159 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 159 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 159 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 159 (ENUM_SPECIFIER)]
    $default  reduce using rule 159 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 129
    TYPE_QUALIFIER             go to state 130
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION         go to state 204
    SPECIFIER_QUALIFIER_LIST   go to state 133


State 201

  168 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST .

    $default  reduce using rule 168 (SPECIFIER_QUALIFIER_LIST)


State 202

  170 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST .

    $default  reduce using rule 170 (SPECIFIER_QUALIFIER_LIST)


State 203

  161 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST '}' .

    $default  reduce using rule 161 (STRUCT_OR_UNION_SPECIFIER)


State 204

  166 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST STRUCT_DECLARATION .

    $default  reduce using rule 166 (STRUCT_DECLARATION_LIST)


State 205

  175 STRUCT_DECLARATOR: ':' . CONSTANT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CONSTANT_EXPRESSION        go to state 251
    CONDITIONAL_EXPRESSION     go to state 126
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 206

  174 STRUCT_DECLARATOR: DECLARATOR .
  176                  | DECLARATOR . ':' CONSTANT_EXPRESSION

    ':'  shift, and go to state 252

    $default  reduce using rule 174 (STRUCT_DECLARATOR)


State 207

  167 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST . ';'
  173 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST . ',' STRUCT_DECLARATOR

    ','  shift, and go to state 253
    ';'  shift, and go to state 254


State 208

  172 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR .

    $default  reduce using rule 172 (STRUCT_DECLARATOR_LIST)


State 209

  126 INITIALIZER_LIST: INITIALIZER .

    $default  reduce using rule 126 (INITIALIZER_LIST)


State 210

  124 INITIALIZER: '{' INITIALIZER_LIST . '}'
  125            | '{' INITIALIZER_LIST . ',' '}'
  127 INITIALIZER_LIST: INITIALIZER_LIST . ',' INITIALIZER

    '}'  shift, and go to state 255
    ','  shift, and go to state 256


State 211

  134 LABELED_STATEMENT: IDENTIFIER ':' STATEMENT .

    $default  reduce using rule 134 (LABELED_STATEMENT)


State 212

  135 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION ':' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 257
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 213

  136 LABELED_STATEMENT: DEFAULT ':' STATEMENT .

    $default  reduce using rule 136 (LABELED_STATEMENT)


State 214

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  147 SELECTION_STATEMENT: IF '(' EXPRESSION . ')' STATEMENT
  148                    | IF '(' EXPRESSION . ')' STATEMENT ELSE STATEMENT

    ','  shift, and go to state 155
    ')'  shift, and go to state 258


State 215

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  149 SELECTION_STATEMENT: SWITCH '(' EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 155
    ')'  shift, and go to state 259


State 216

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  150 ITERATION_STATEMENT: WHILE '(' EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 155
    ')'  shift, and go to state 260


State 217

  151 ITERATION_STATEMENT: DO STATEMENT WHILE . '(' EXPRESSION ')' ';'

    '('  shift, and go to state 261


State 218

  152 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT . EXPRESSION_STATEMENT ')' STATEMENT
  153                    | FOR '(' EXPRESSION_STATEMENT . EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    EXPRESSION_STATEMENT       go to state 262


State 219

  154 JUMP_STATEMENT: GOTO IDENTIFIER ';' .

    $default  reduce using rule 154 (JUMP_STATEMENT)


State 220

  158 JUMP_STATEMENT: RETURN EXPRESSION ';' .

    $default  reduce using rule 158 (JUMP_STATEMENT)


State 221

  114 PRIMARY_EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 114 (PRIMARY_EXPRESSION)


State 222

   50 EXPRESSION: EXPRESSION ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 50 (EXPRESSION)


State 223

   71 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION OR_OP LOGICAL_AND_EXPRESSION .
   73 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . AND_OP INCLUSIVE_OR_EXPRESSION

    AND_OP  shift, and go to state 159

    $default  reduce using rule 71 (LOGICAL_OR_EXPRESSION)


State 224

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
   63 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION . ':' CONDITIONAL_EXPRESSION

    ':'  shift, and go to state 263
    ','  shift, and go to state 155


State 225

   73 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION AND_OP INCLUSIVE_OR_EXPRESSION .
   75 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . '|' EXCLUSIVE_OR_EXPRESSION

    '|'  shift, and go to state 160

    $default  reduce using rule 73 (LOGICAL_AND_EXPRESSION)


State 226

   75 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION '|' EXCLUSIVE_OR_EXPRESSION .
   77 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . '^' AND_EXPRESSION

    '^'  shift, and go to state 161

    $default  reduce using rule 75 (INCLUSIVE_OR_EXPRESSION)


State 227

   77 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION '^' AND_EXPRESSION .
   79 AND_EXPRESSION: AND_EXPRESSION . '&' EQUALITY_EXPRESSION

    '&'  shift, and go to state 162

    $default  reduce using rule 77 (EXCLUSIVE_OR_EXPRESSION)


State 228

   79 AND_EXPRESSION: AND_EXPRESSION '&' EQUALITY_EXPRESSION .
   81 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQ_OP RELATIONAL_EXPRESSION
   82                    | EQUALITY_EXPRESSION . NE_OP RELATIONAL_EXPRESSION

    EQ_OP  shift, and go to state 163
    NE_OP  shift, and go to state 164

    $default  reduce using rule 79 (AND_EXPRESSION)


State 229

   81 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQ_OP RELATIONAL_EXPRESSION .
   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION

    LE_OP  shift, and go to state 165
    GE_OP  shift, and go to state 166
    GT     shift, and go to state 167
    LT     shift, and go to state 168

    $default  reduce using rule 81 (EQUALITY_EXPRESSION)


State 230

   82 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NE_OP RELATIONAL_EXPRESSION .
   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   85                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION

    LE_OP  shift, and go to state 165
    GE_OP  shift, and go to state 166
    GT     shift, and go to state 167
    LT     shift, and go to state 168

    $default  reduce using rule 82 (EQUALITY_EXPRESSION)


State 231

   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LE_OP SHIFT_EXPRESSION .
   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   90                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 169
    RIGHT_OP  shift, and go to state 170

    $default  reduce using rule 86 (RELATIONAL_EXPRESSION)


State 232

   87 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GE_OP SHIFT_EXPRESSION .
   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   90                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 169
    RIGHT_OP  shift, and go to state 170

    $default  reduce using rule 87 (RELATIONAL_EXPRESSION)


State 233

   85 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GT SHIFT_EXPRESSION .
   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   90                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 169
    RIGHT_OP  shift, and go to state 170

    $default  reduce using rule 85 (RELATIONAL_EXPRESSION)


State 234

   84 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LT SHIFT_EXPRESSION .
   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   90                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 169
    RIGHT_OP  shift, and go to state 170

    $default  reduce using rule 84 (RELATIONAL_EXPRESSION)


State 235

   89 SHIFT_EXPRESSION: SHIFT_EXPRESSION LEFT_OP ADDITIVE_EXPRESSION .
   92 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   93                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172

    $default  reduce using rule 89 (SHIFT_EXPRESSION)


State 236

   90 SHIFT_EXPRESSION: SHIFT_EXPRESSION RIGHT_OP ADDITIVE_EXPRESSION .
   92 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   93                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172

    $default  reduce using rule 90 (SHIFT_EXPRESSION)


State 237

   92 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS MULTIPLICATIVE_EXPRESSION .
   95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   96                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   97                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION

    MULTIPLY  shift, and go to state 173
    MODULO    shift, and go to state 174
    DIVIDE    shift, and go to state 175

    $default  reduce using rule 92 (ADDITIVE_EXPRESSION)


State 238

   93 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS MULTIPLICATIVE_EXPRESSION .
   95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   96                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   97                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION

    MULTIPLY  shift, and go to state 173
    MODULO    shift, and go to state 174
    DIVIDE    shift, and go to state 175

    $default  reduce using rule 93 (ADDITIVE_EXPRESSION)


State 239

   95 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLY CAST_EXPRESSION .

    $default  reduce using rule 95 (MULTIPLICATIVE_EXPRESSION)


State 240

   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MODULO CAST_EXPRESSION .

    $default  reduce using rule 97 (MULTIPLICATIVE_EXPRESSION)


State 241

   96 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE CAST_EXPRESSION .

    $default  reduce using rule 96 (MULTIPLICATIVE_EXPRESSION)


State 242

   48 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 48 (ASSIGNMENT_EXPRESSION)


State 243

  108 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PTR_OP IDENTIFIER .

    $default  reduce using rule 108 (POSTFIX_EXPRESSION)


State 244

  107 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' IDENTIFIER .

    $default  reduce using rule 107 (POSTFIX_EXPRESSION)


State 245

  105 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ')' .

    $default  reduce using rule 105 (POSTFIX_EXPRESSION)


State 246

  121 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 121 (ARGUMENT_EXPRESSION_LIST)


State 247

  106 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST . ')'
  122 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST . ',' ASSIGNMENT_EXPRESSION

    ','  shift, and go to state 264
    ')'  shift, and go to state 265


State 248

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  104 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION . ']'

    ','  shift, and go to state 155
    ']'  shift, and go to state 266


State 249

  140 COMPOUND_STATEMENT: '{' DECLARATION_LIST STATEMENT_LIST '}' .

    $default  reduce using rule 140 (COMPOUND_STATEMENT)


State 250

  160 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST '}' .

    $default  reduce using rule 160 (STRUCT_OR_UNION_SPECIFIER)


State 251

  175 STRUCT_DECLARATOR: ':' CONSTANT_EXPRESSION .

    $default  reduce using rule 175 (STRUCT_DECLARATOR)


State 252

  176 STRUCT_DECLARATOR: DECLARATOR ':' . CONSTANT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CONSTANT_EXPRESSION        go to state 267
    CONDITIONAL_EXPRESSION     go to state 126
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 253

  173 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST ',' . STRUCT_DECLARATOR

    IDENTIFIER  shift, and go to state 1
    ':'         shift, and go to state 205
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR         go to state 206
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32
    STRUCT_DECLARATOR  go to state 268


State 254

  167 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST ';' .

    $default  reduce using rule 167 (STRUCT_DECLARATION)


State 255

  124 INITIALIZER: '{' INITIALIZER_LIST '}' .

    $default  reduce using rule 124 (INITIALIZER)


State 256

  125 INITIALIZER: '{' INITIALIZER_LIST ',' . '}'
  127 INITIALIZER_LIST: INITIALIZER_LIST ',' . INITIALIZER

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 135
    '}'             shift, and go to state 269
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 136
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    INITIALIZER                go to state 270


State 257

  135 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION ':' STATEMENT .

    $default  reduce using rule 135 (LABELED_STATEMENT)


State 258

  147 SELECTION_STATEMENT: IF '(' EXPRESSION ')' . STATEMENT
  148                    | IF '(' EXPRESSION ')' . STATEMENT ELSE STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 271
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 259

  149 SELECTION_STATEMENT: SWITCH '(' EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 272
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 260

  150 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 273
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 261

  151 ITERATION_STATEMENT: DO STATEMENT WHILE '(' . EXPRESSION ')' ';'

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 274
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 262

  152 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT . ')' STATEMENT
  153                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91
    ')'             shift, and go to state 275

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 276
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 263

   63 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' . CONDITIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    CONDITIONAL_EXPRESSION     go to state 277
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 127
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 264

  122 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 123
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 278
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109


State 265

  106 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')' .

    $default  reduce using rule 106 (POSTFIX_EXPRESSION)


State 266

  104 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION ']' .

    $default  reduce using rule 104 (POSTFIX_EXPRESSION)


State 267

  176 STRUCT_DECLARATOR: DECLARATOR ':' CONSTANT_EXPRESSION .

    $default  reduce using rule 176 (STRUCT_DECLARATOR)


State 268

  173 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST ',' STRUCT_DECLARATOR .

    $default  reduce using rule 173 (STRUCT_DECLARATOR_LIST)


State 269

  125 INITIALIZER: '{' INITIALIZER_LIST ',' '}' .

    $default  reduce using rule 125 (INITIALIZER)


State 270

  127 INITIALIZER_LIST: INITIALIZER_LIST ',' INITIALIZER .

    $default  reduce using rule 127 (INITIALIZER_LIST)


State 271

  147 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT .
  148                    | IF '(' EXPRESSION ')' STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 279

    ELSE      [reduce using rule 147 (SELECTION_STATEMENT)]
    $default  reduce using rule 147 (SELECTION_STATEMENT)


State 272

  149 SELECTION_STATEMENT: SWITCH '(' EXPRESSION ')' STATEMENT .

    $default  reduce using rule 149 (SELECTION_STATEMENT)


State 273

  150 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' STATEMENT .

    $default  reduce using rule 150 (ITERATION_STATEMENT)


State 274

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  151 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION . ')' ';'

    ','  shift, and go to state 155
    ')'  shift, and go to state 280


State 275

  152 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 281
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 276

   50 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  153 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 155
    ')'  shift, and go to state 282


State 277

   63 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' CONDITIONAL_EXPRESSION .

    $default  reduce using rule 63 (CONDITIONAL_EXPRESSION)


State 278

  122 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 122 (ARGUMENT_EXPRESSION_LIST)


State 279

  148 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT ELSE . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 283
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 280

  151 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION ')' . ';'

    ';'  shift, and go to state 284


State 281

  152 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT .

    $default  reduce using rule 152 (ITERATION_STATEMENT)


State 282

  153 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 67
    CONSTANT        shift, and go to state 68
    STRING_LITERAL  shift, and go to state 69
    INC_OP          shift, and go to state 70
    DEC_OP          shift, and go to state 71
    PLUS            shift, and go to state 72
    MINUS           shift, and go to state 73
    MULTIPLY        shift, and go to state 74
    CASE            shift, and go to state 75
    DEFAULT         shift, and go to state 76
    IF              shift, and go to state 77
    SWITCH          shift, and go to state 78
    WHILE           shift, and go to state 79
    DO              shift, and go to state 80
    FOR             shift, and go to state 81
    GOTO            shift, and go to state 82
    CONTINUE        shift, and go to state 83
    BREAK           shift, and go to state 84
    RETURN          shift, and go to state 85
    '&'             shift, and go to state 86
    '~'             shift, and go to state 87
    '!'             shift, and go to state 88
    '{'             shift, and go to state 49
    ';'             shift, and go to state 90
    '('             shift, and go to state 91

    ASSIGNMENT_EXPRESSION      go to state 92
    EXPRESSION                 go to state 93
    CONDITIONAL_EXPRESSION     go to state 94
    LOGICAL_OR_EXPRESSION      go to state 95
    LOGICAL_AND_EXPRESSION     go to state 96
    INCLUSIVE_OR_EXPRESSION    go to state 97
    EXCLUSIVE_OR_EXPRESSION    go to state 98
    AND_EXPRESSION             go to state 99
    EQUALITY_EXPRESSION        go to state 100
    RELATIONAL_EXPRESSION      go to state 101
    SHIFT_EXPRESSION           go to state 102
    ADDITIVE_EXPRESSION        go to state 103
    MULTIPLICATIVE_EXPRESSION  go to state 104
    CAST_EXPRESSION            go to state 105
    UNARY_EXPRESSION           go to state 106
    POSTFIX_EXPRESSION         go to state 107
    PRIMARY_EXPRESSION         go to state 108
    UNARY_OPERATOR             go to state 109
    STATEMENT                  go to state 285
    LABELED_STATEMENT          go to state 111
    COMPOUND_STATEMENT         go to state 112
    EXPRESSION_STATEMENT       go to state 115
    SELECTION_STATEMENT        go to state 116
    ITERATION_STATEMENT        go to state 117
    JUMP_STATEMENT             go to state 118


State 283

  148 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT ELSE STATEMENT .

    $default  reduce using rule 148 (SELECTION_STATEMENT)


State 284

  151 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION ')' ';' .

    $default  reduce using rule 151 (ITERATION_STATEMENT)


State 285

  153 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT .

    $default  reduce using rule 153 (ITERATION_STATEMENT)

Terminals unused in grammar

   PREPROCESSOR
   COMMA
   POINTER
   NUMBER
   HEX
   OCTAL
   FLOAT_LITERAL
   int_NUM
   DIGIT
   WHITESPACE
   NEWLINE
   BREAK
   CASE
   CONTINUE
   DEFAULT
   DO
   ELSE
   ENUM
   FOR
   GOTO
   IF
   LONG
   RETURN
   SIZEOF
   SWITCH
   WHILE
   SIGNED_CHAR
   UNSIGNED_CHAR
   UNSIGNED_SHORT
   UNSIGNED_INT
   UNSIGNED_LONG
   LONG_DOUBLE
   LONG_LONG
   UNSIGNED_LONG_LONG
   INTMAX_T
   UINTMAX_T
   LROUND
   RROUND
   LSQUARE
   RSQUARE
   LCURLY
   RCURLY
   DOT_OP
   POINTER_OP
   LOGICAL_NOT_OP
   BITWISE_NOT_OP
   PLUS_OP
   MINUS_OP
   INC_OP
   DEC_OP
   MULT
   DIV
   MODULUS_OP
   SHIFT_LEFT_OP
   SHIFT_RIGHT_OP
   LT
   GT
   LE
   GE
   EQ
   NOT_EQ
   AND
   XOR
   OR
   LOG_AND
   LOG_OR
   COND_OP
   ASSIGN_OP
   SHRT_ASSIGNPLUS
   SHRT_ASSIGNMINUS
   SHRT_ASSIGNMULT
   SHRT_ASSIGNMOD
   SHRT_ASSIGNAND
   SHRT_ASSIGNOR
   SHRT_ASSIGNXOR
   SHRT_ASSIGNLSHIFT
   SHRT_ASSIGNRSHIFT
   STRING_LITERAL
   ELLIPSIS


Grammar

    0 $accept: ROOT $end

    1 ROOT: NODE

    2 NODE: NODE GLOBAL_DECLARATION
    3     | GLOBAL_DECLARATION

    4 GLOBAL_DECLARATION: STORAGE_SPECIFIER IDENTIFIER SEMICOLON
    5                   | TYPE_SPECIFIER IDENTIFIER SEMICOLON
    6                   | TYPE_SPECIFIER SEMICOLON
    7                   | STORAGE_SPECIFIER SEMICOLON

    8 STORAGE_SPECIFIER: AUTO
    9                  | REGISTER
   10                  | EXTERN
   11                  | STATIC
   12                  | TYPEDEF

   13 TYPE_SPECIFIER: INT
   14               | CHAR
   15               | SHORT
   16               | FLOAT
   17               | DOUBLE
   18               | SIGNED
   19               | UNSIGNED
   20               | VOID
   21               | STRUCT
   22               | UNION
   23               | CONST
   24               | VOLATILE


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 4 5 6 7
PREPROCESSOR (259)
COMMA (260)
POINTER (261)
NUMBER (262)
HEX (263)
OCTAL (264)
FLOAT_LITERAL (265)
int_NUM (266)
DIGIT (267)
IDENTIFIER (268) 4 5
WHITESPACE (269)
NEWLINE (270)
AUTO (271) 8
BREAK (272)
CASE (273)
CHAR (274) 14
CONST (275) 23
CONTINUE (276)
DEFAULT (277)
DO (278)
DOUBLE (279) 17
ELSE (280)
ENUM (281)
EXTERN (282) 10
FLOAT (283) 16
FOR (284)
GOTO (285)
IF (286)
INT (287) 13
LONG (288)
REGISTER (289) 9
RETURN (290)
SHORT (291) 15
SIGNED (292) 18
SIZEOF (293)
STATIC (294) 11
STRUCT (295) 21
SWITCH (296)
TYPEDEF (297) 12
UNION (298) 22
UNSIGNED (299) 19
VOID (300) 20
VOLATILE (301) 24
WHILE (302)
SIGNED_CHAR (303)
UNSIGNED_CHAR (304)
UNSIGNED_SHORT (305)
UNSIGNED_INT (306)
UNSIGNED_LONG (307)
LONG_DOUBLE (308)
LONG_LONG (309)
UNSIGNED_LONG_LONG (310)
INTMAX_T (311)
UINTMAX_T (312)
LROUND (313)
RROUND (314)
LSQUARE (315)
RSQUARE (316)
LCURLY (317)
RCURLY (318)
DOT_OP (319)
POINTER_OP (320)
LOGICAL_NOT_OP (321)
BITWISE_NOT_OP (322)
PLUS_OP (323)
MINUS_OP (324)
INC_OP (325)
DEC_OP (326)
MULT (327)
DIV (328)
MODULUS_OP (329)
SHIFT_LEFT_OP (330)
SHIFT_RIGHT_OP (331)
LT (332)
GT (333)
LE (334)
GE (335)
EQ (336)
NOT_EQ (337)
AND (338)
XOR (339)
OR (340)
LOG_AND (341)
LOG_OR (342)
COND_OP (343)
ASSIGN_OP (344)
SHRT_ASSIGNPLUS (345)
SHRT_ASSIGNMINUS (346)
SHRT_ASSIGNMULT (347)
SHRT_ASSIGNMOD (348)
SHRT_ASSIGNAND (349)
SHRT_ASSIGNOR (350)
SHRT_ASSIGNXOR (351)
SHRT_ASSIGNLSHIFT (352)
SHRT_ASSIGNRSHIFT (353)
STRING_LITERAL (354)
ELLIPSIS (355)


Nonterminals, with rules where they appear

$accept (101)
    on left: 0
ROOT (102)
    on left: 1, on right: 0
NODE (103)
    on left: 2 3, on right: 1 2
GLOBAL_DECLARATION (104)
    on left: 4 5 6 7, on right: 2 3
STORAGE_SPECIFIER (105)
    on left: 8 9 10 11 12, on right: 4 7
TYPE_SPECIFIER (106)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24, on right: 5 6


State 0

    0 $accept: . ROOT $end

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 7
    REGISTER  shift, and go to state 8
    SHORT     shift, and go to state 9
    SIGNED    shift, and go to state 10
    STATIC    shift, and go to state 11
    STRUCT    shift, and go to state 12
    TYPEDEF   shift, and go to state 13
    UNION     shift, and go to state 14
    UNSIGNED  shift, and go to state 15
    VOID      shift, and go to state 16
    VOLATILE  shift, and go to state 17

    ROOT                go to state 18
    NODE                go to state 19
    GLOBAL_DECLARATION  go to state 20
    STORAGE_SPECIFIER   go to state 21
    TYPE_SPECIFIER      go to state 22


State 1

    8 STORAGE_SPECIFIER: AUTO .

    $default  reduce using rule 8 (STORAGE_SPECIFIER)


State 2

   14 TYPE_SPECIFIER: CHAR .

    $default  reduce using rule 14 (TYPE_SPECIFIER)


State 3

   23 TYPE_SPECIFIER: CONST .

    $default  reduce using rule 23 (TYPE_SPECIFIER)


State 4

   17 TYPE_SPECIFIER: DOUBLE .

    $default  reduce using rule 17 (TYPE_SPECIFIER)


State 5

   10 STORAGE_SPECIFIER: EXTERN .

    $default  reduce using rule 10 (STORAGE_SPECIFIER)


State 6

   16 TYPE_SPECIFIER: FLOAT .

    $default  reduce using rule 16 (TYPE_SPECIFIER)


State 7

   13 TYPE_SPECIFIER: INT .

    $default  reduce using rule 13 (TYPE_SPECIFIER)


State 8

    9 STORAGE_SPECIFIER: REGISTER .

    $default  reduce using rule 9 (STORAGE_SPECIFIER)


State 9

   15 TYPE_SPECIFIER: SHORT .

    $default  reduce using rule 15 (TYPE_SPECIFIER)


State 10

   18 TYPE_SPECIFIER: SIGNED .

    $default  reduce using rule 18 (TYPE_SPECIFIER)


State 11

   11 STORAGE_SPECIFIER: STATIC .

    $default  reduce using rule 11 (STORAGE_SPECIFIER)


State 12

   21 TYPE_SPECIFIER: STRUCT .

    $default  reduce using rule 21 (TYPE_SPECIFIER)


State 13

   12 STORAGE_SPECIFIER: TYPEDEF .

    $default  reduce using rule 12 (STORAGE_SPECIFIER)


State 14

   22 TYPE_SPECIFIER: UNION .

    $default  reduce using rule 22 (TYPE_SPECIFIER)


State 15

   19 TYPE_SPECIFIER: UNSIGNED .

    $default  reduce using rule 19 (TYPE_SPECIFIER)


State 16

   20 TYPE_SPECIFIER: VOID .

    $default  reduce using rule 20 (TYPE_SPECIFIER)


State 17

   24 TYPE_SPECIFIER: VOLATILE .

    $default  reduce using rule 24 (TYPE_SPECIFIER)


State 18

    0 $accept: ROOT . $end

    $end  shift, and go to state 23


State 19

    1 ROOT: NODE .
    2 NODE: NODE . GLOBAL_DECLARATION

    AUTO      shift, and go to state 1
    CHAR      shift, and go to state 2
    CONST     shift, and go to state 3
    DOUBLE    shift, and go to state 4
    EXTERN    shift, and go to state 5
    FLOAT     shift, and go to state 6
    INT       shift, and go to state 7
    REGISTER  shift, and go to state 8
    SHORT     shift, and go to state 9
    SIGNED    shift, and go to state 10
    STATIC    shift, and go to state 11
    STRUCT    shift, and go to state 12
    TYPEDEF   shift, and go to state 13
    UNION     shift, and go to state 14
    UNSIGNED  shift, and go to state 15
    VOID      shift, and go to state 16
    VOLATILE  shift, and go to state 17

    $default  reduce using rule 1 (ROOT)

    GLOBAL_DECLARATION  go to state 24
    STORAGE_SPECIFIER   go to state 21
    TYPE_SPECIFIER      go to state 22


State 20

    3 NODE: GLOBAL_DECLARATION .

    $default  reduce using rule 3 (NODE)


State 21

    4 GLOBAL_DECLARATION: STORAGE_SPECIFIER . IDENTIFIER SEMICOLON
    7                   | STORAGE_SPECIFIER . SEMICOLON

    SEMICOLON   shift, and go to state 25
    IDENTIFIER  shift, and go to state 26


State 22

    5 GLOBAL_DECLARATION: TYPE_SPECIFIER . IDENTIFIER SEMICOLON
    6                   | TYPE_SPECIFIER . SEMICOLON

    SEMICOLON   shift, and go to state 27
    IDENTIFIER  shift, and go to state 28


State 23

    0 $accept: ROOT $end .

    $default  accept


State 24

    2 NODE: NODE GLOBAL_DECLARATION .

    $default  reduce using rule 2 (NODE)


State 25

    7 GLOBAL_DECLARATION: STORAGE_SPECIFIER SEMICOLON .

    $default  reduce using rule 7 (GLOBAL_DECLARATION)


State 26

    4 GLOBAL_DECLARATION: STORAGE_SPECIFIER IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 29


State 27

    6 GLOBAL_DECLARATION: TYPE_SPECIFIER SEMICOLON .

    $default  reduce using rule 6 (GLOBAL_DECLARATION)


State 28

    5 GLOBAL_DECLARATION: TYPE_SPECIFIER IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 29

    4 GLOBAL_DECLARATION: STORAGE_SPECIFIER IDENTIFIER SEMICOLON .

    $default  reduce using rule 4 (GLOBAL_DECLARATION)


State 30

    5 GLOBAL_DECLARATION: TYPE_SPECIFIER IDENTIFIER SEMICOLON .

    $default  reduce using rule 5 (GLOBAL_DECLARATION)

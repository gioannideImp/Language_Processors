Nonterminals useless in grammar

   PARAMETER_TYPE_LIST
   PARAMETER_LIST
   PARAMETER_DECLARATION
   IDENTIFIER_LIST
   TYPE_NAME
   ABSTRACT_DECLARATOR
   DIRECT_ABSTRACT_DECLARATOR
   ENUMERATOR_LIST
   ENUMERATOR


Terminals unused in grammar

   SIZEOF
   ENUM
   ELLIPSIS


Rules useless in grammar

  179 PARAMETER_TYPE_LIST: PARAMETER_LIST
  180                    | PARAMETER_LIST ',' ELLIPSIS

  181 PARAMETER_LIST: PARAMETER_DECLARATION
  182               | PARAMETER_LIST ',' PARAMETER_DECLARATION

  183 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR
  184                      | DECLARATION_SPECIFIERS ABSTRACT_DECLARATOR
  185                      | DECLARATION_SPECIFIERS

  186 IDENTIFIER_LIST: IDENTIFIER
  187                | IDENTIFIER_LIST ',' IDENTIFIER

  188 TYPE_NAME: SPECIFIER_QUALIFIER_LIST
  189          | SPECIFIER_QUALIFIER_LIST ABSTRACT_DECLARATOR

  190 ABSTRACT_DECLARATOR: POINTER
  191                    | DIRECT_ABSTRACT_DECLARATOR
  192                    | POINTER DIRECT_ABSTRACT_DECLARATOR

  193 DIRECT_ABSTRACT_DECLARATOR: '(' ABSTRACT_DECLARATOR ')'
  194                           | '[' ']'
  195                           | '[' CONSTANT_EXPRESSION ']'
  196                           | DIRECT_ABSTRACT_DECLARATOR '[' ']'
  197                           | DIRECT_ABSTRACT_DECLARATOR '[' CONSTANT_EXPRESSION ']'
  198                           | '(' ')'
  199                           | '(' PARAMETER_TYPE_LIST ')'
  200                           | DIRECT_ABSTRACT_DECLARATOR '(' ')'
  201                           | DIRECT_ABSTRACT_DECLARATOR '(' PARAMETER_TYPE_LIST ')'

  202 ENUMERATOR_LIST: ENUMERATOR
  203                | ENUMERATOR_LIST ',' ENUMERATOR

  204 ENUMERATOR: IDENTIFIER
  205           | IDENTIFIER '=' CONSTANT_EXPRESSION


Rules useless in parser due to conflicts

  171 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER
  173                         | TYPE_QUALIFIER


State 0 conflicts: 21 shift/reduce
State 22 conflicts: 21 shift/reduce
State 23 conflicts: 21 shift/reduce, 22 reduce/reduce
State 26 conflicts: 22 shift/reduce
State 30 conflicts: 18 shift/reduce
State 31 conflicts: 1 shift/reduce
State 41 conflicts: 21 shift/reduce, 22 reduce/reduce
State 50 conflicts: 18 shift/reduce, 1 reduce/reduce
State 51 conflicts: 21 shift/reduce
State 53 conflicts: 22 shift/reduce
State 55 conflicts: 18 shift/reduce
State 58 conflicts: 1 shift/reduce
State 60 conflicts: 13 shift/reduce
State 68 conflicts: 18 shift/reduce
State 115 conflicts: 21 shift/reduce
State 130 conflicts: 13 shift/reduce
State 131 conflicts: 13 shift/reduce, 4 reduce/reduce
State 132 conflicts: 13 shift/reduce, 4 reduce/reduce
State 133 conflicts: 13 shift/reduce
State 202 conflicts: 13 shift/reduce
State 273 conflicts: 1 shift/reduce


Grammar

    0 $accept: TRANSLATION_UNIT $end

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION
    2                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION
    4                     | DECLARATION
    5                     | EXTERNAL_DECLARATION FUNCTION_DEFINITION
    6                     | EXTERNAL_DECLARATION DECLARATION

    7 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
    8                    | DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT
    9                    | DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
   10                    | DECLARATOR COMPOUND_STATEMENT

   11 DECLARATION: DECLARATION_SPECIFIERS ';'
   12            | DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST ';'

   13 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIERS
   14                       | DECLARATION_SPECIFIERS STORAGE_CLASS_SPECIFIERS
   15                       | TYPE_SPECIFIER
   16                       | DECLARATION_SPECIFIERS TYPE_SPECIFIER
   17                       | TYPE_QUALIFIER
   18                       | DECLARATION_SPECIFIERS TYPE_QUALIFIER

   19 STORAGE_CLASS_SPECIFIERS: TYPEDEF
   20                         | EXTERN
   21                         | STATIC
   22                         | AUTO
   23                         | REGISTER

   24 TYPE_SPECIFIER: VOID
   25               | CHAR
   26               | SHORT
   27               | INT
   28               | LONG
   29               | FLOAT
   30               | DOUBLE
   31               | SIGNED
   32               | UNSIGNED
   33               | STRUCT_OR_UNION_SPECIFIER
   34               | ENUM_SPECIFIER

   35 TYPE_QUALIFIER: CONST
   36               | VOLATILE

   37 INIT_DECLARATOR_LIST: INIT_DECLARATOR
   38                     | INIT_DECLARATOR_LIST ',' INIT_DECLARATOR

   39 INIT_DECLARATOR: DECLARATOR
   40                | DECLARATOR '=' INITIALIZER

   41 DECLARATOR: POINTER DIRECT_DECLARATOR
   42           | DIRECT_DECLARATOR
   43           | '(' DECLARATOR ')'

   44 DIRECT_DECLARATOR: IDENTIFIER
   45                  | DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION ']'
   46                  | DIRECT_DECLARATOR '[' ']'
   47                  | DIRECT_DECLARATOR '(' ')'

   48 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION

   49 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
   50                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

   51 EXPRESSION: ASSIGNMENT_EXPRESSION
   52           | EXPRESSION ',' ASSIGNMENT_EXPRESSION

   53 ASSIGNMENT_OPERATOR: '='
   54                    | MUL_ASSIGN
   55                    | DIV_ASSIGN
   56                    | MOD_ASSIGN
   57                    | ADD_ASSIGN
   58                    | SUB_ASSIGN
   59                    | LEFT_ASSIGN
   60                    | RIGHT_ASSIGN
   61                    | AND_ASSIGN
   62                    | XOR_ASSIGN
   63                    | OR_ASSIGN

   64 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION
   65                       | LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' CONDITIONAL_EXPRESSION

   66 POINTER: '*'
   67        | '*' TYPE_QUALIFIER_LIST
   68        | '*' POINTER
   69        | '*' TYPE_QUALIFIER_LIST POINTER

   70 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER
   71                    | TYPE_QUALIFIER_LIST TYPE_QUALIFIER

   72 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION
   73                      | LOGICAL_OR_EXPRESSION OR_OP LOGICAL_AND_EXPRESSION

   74 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION
   75                       | LOGICAL_AND_EXPRESSION AND_OP INCLUSIVE_OR_EXPRESSION

   76 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
   77                        | INCLUSIVE_OR_EXPRESSION '|' EXCLUSIVE_OR_EXPRESSION

   78 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
   79                        | EXCLUSIVE_OR_EXPRESSION '^' AND_EXPRESSION

   80 AND_EXPRESSION: EQUALITY_EXPRESSION
   81               | AND_EXPRESSION '&' EQUALITY_EXPRESSION

   82 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
   83                    | EQUALITY_EXPRESSION EQ_OP RELATIONAL_EXPRESSION
   84                    | EQUALITY_EXPRESSION NE_OP RELATIONAL_EXPRESSION

   85 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
   86                      | RELATIONAL_EXPRESSION LT SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION GT SHIFT_EXPRESSION
   88                      | RELATIONAL_EXPRESSION LE_OP SHIFT_EXPRESSION
   89                      | RELATIONAL_EXPRESSION GE_OP SHIFT_EXPRESSION

   90 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
   91                 | SHIFT_EXPRESSION LEFT_OP ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION RIGHT_OP ADDITIVE_EXPRESSION

   93 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   94                    | ADDITIVE_EXPRESSION PLUS MULTIPLICATIVE_EXPRESSION
   95                    | ADDITIVE_EXPRESSION MINUS MULTIPLICATIVE_EXPRESSION

   96 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   97                          | MULTIPLICATIVE_EXPRESSION MULTIPLY CAST_EXPRESSION
   98                          | MULTIPLICATIVE_EXPRESSION DIVIDE CAST_EXPRESSION
   99                          | MULTIPLICATIVE_EXPRESSION MODULO CAST_EXPRESSION

  100 CAST_EXPRESSION: UNARY_EXPRESSION

  101 UNARY_EXPRESSION: POSTFIX_EXPRESSION
  102                 | INC_OP UNARY_EXPRESSION
  103                 | DEC_OP UNARY_EXPRESSION
  104                 | UNARY_OPERATOR CAST_EXPRESSION

  105 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
  106                   | POSTFIX_EXPRESSION '[' EXPRESSION ']'
  107                   | POSTFIX_EXPRESSION '(' ')'
  108                   | POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')'
  109                   | POSTFIX_EXPRESSION '.' IDENTIFIER
  110                   | POSTFIX_EXPRESSION PTR_OP IDENTIFIER
  111                   | POSTFIX_EXPRESSION INC_OP
  112                   | POSTFIX_EXPRESSION DEC_OP

  113 PRIMARY_EXPRESSION: IDENTIFIER
  114                   | CONSTANT
  115                   | STRING_LITERAL
  116                   | '(' EXPRESSION ')'

  117 UNARY_OPERATOR: '&'
  118               | MULTIPLY
  119               | PLUS
  120               | MINUS
  121               | '~'
  122               | '!'

  123 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
  124                         | ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION

  125 INITIALIZER: ASSIGNMENT_EXPRESSION
  126            | '{' INITIALIZER_LIST '}'
  127            | '{' INITIALIZER_LIST ',' '}'

  128 INITIALIZER_LIST: INITIALIZER
  129                 | INITIALIZER_LIST ',' INITIALIZER

  130 STATEMENT: LABELED_STATEMENT
  131          | COMPOUND_STATEMENT
  132          | EXPRESSION_STATEMENT
  133          | SELECTION_STATEMENT
  134          | ITERATION_STATEMENT
  135          | JUMP_STATEMENT

  136 LABELED_STATEMENT: IDENTIFIER ':' STATEMENT
  137                  | CASE CONSTANT_EXPRESSION ':' STATEMENT
  138                  | DEFAULT ':' STATEMENT

  139 COMPOUND_STATEMENT: '{' '}'
  140                   | '{' STATEMENT_LIST '}'
  141                   | '{' DECLARATION_LIST '}'
  142                   | '{' DECLARATION_LIST STATEMENT_LIST '}'

  143 DECLARATION_LIST: DECLARATION
  144                 | DECLARATION_LIST DECLARATION

  145 STATEMENT_LIST: STATEMENT
  146               | STATEMENT_LIST STATEMENT

  147 EXPRESSION_STATEMENT: ';'
  148                     | EXPRESSION ';'

  149 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT
  150                    | IF '(' EXPRESSION ')' STATEMENT ELSE STATEMENT
  151                    | SWITCH '(' EXPRESSION ')' STATEMENT

  152 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' STATEMENT
  153                    | DO STATEMENT WHILE '(' EXPRESSION ')' ';'
  154                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  155                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

  156 JUMP_STATEMENT: GOTO IDENTIFIER ';'
  157               | CONTINUE ';'
  158               | BREAK ';'
  159               | RETURN ';'
  160               | RETURN EXPRESSION ';'

  161 ENUM_SPECIFIER: %empty

  162 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST '}'
  163                          | STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST '}'
  164                          | STRUCT_OR_UNION IDENTIFIER

  165 STRUCT_OR_UNION: STRUCT
  166                | UNION

  167 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION
  168                        | STRUCT_DECLARATION_LIST STRUCT_DECLARATION

  169 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST ';'

  170 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST
  171                         | TYPE_SPECIFIER
  172                         | TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST
  173                         | TYPE_QUALIFIER

  174 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR
  175                       | STRUCT_DECLARATOR_LIST ',' STRUCT_DECLARATOR

  176 STRUCT_DECLARATOR: DECLARATOR
  177                  | ':' CONSTANT_EXPRESSION
  178                  | DECLARATOR ':' CONSTANT_EXPRESSION


Terminals, with rules where they appear

$end (0) 0
'!' (33) 122
'&' (38) 81 117
'(' (40) 43 47 107 108 116 149 150 151 152 153 154 155
')' (41) 43 47 107 108 116 149 150 151 152 153 154 155
'*' (42) 66 67 68 69
',' (44) 38 52 124 127 129 175
'.' (46) 109
':' (58) 65 136 137 138 177 178
';' (59) 11 12 147 148 153 156 157 158 159 160 169
'=' (61) 40 53
'?' (63) 65
'[' (91) 45 46 106
']' (93) 45 46 106
'^' (94) 79
'{' (123) 126 127 139 140 141 142 162 163
'|' (124) 77
'}' (125) 126 127 139 140 141 142 162 163
'~' (126) 121
error (256)
IDENTIFIER (258) 44 109 110 113 136 156 162 164
CONSTANT (259) 114
STRING_LITERAL (260) 115
SIZEOF (261)
PTR_OP (262) 110
INC_OP (263) 102 111
DEC_OP (264) 103 112
LEFT_OP (265) 91
RIGHT_OP (266) 92
LE_OP (267) 88
GE_OP (268) 89
EQ_OP (269) 83
NE_OP (270) 84
AND_OP (271) 75
OR_OP (272) 73
MUL_ASSIGN (273) 54
DIV_ASSIGN (274) 55
MOD_ASSIGN (275) 56
ADD_ASSIGN (276) 57
SUB_ASSIGN (277) 58
LEFT_ASSIGN (278) 59
RIGHT_ASSIGN (279) 60
AND_ASSIGN (280) 61
XOR_ASSIGN (281) 62
OR_ASSIGN (282) 63
GT (283) 87
LT (284) 86
PLUS (285) 94 119
MINUS (286) 95 120
MULTIPLY (287) 97 118
MODULO (288) 99
DIVIDE (289) 98
TYPEDEF (290) 19
EXTERN (291) 20
STATIC (292) 21
AUTO (293) 22
REGISTER (294) 23
CHAR (295) 25
SHORT (296) 26
INT (297) 27
LONG (298) 28
SIGNED (299) 31
UNSIGNED (300) 32
FLOAT (301) 29
DOUBLE (302) 30
CONST (303) 35
VOLATILE (304) 36
VOID (305) 24
STRUCT (306) 165
UNION (307) 166
ENUM (308)
ELLIPSIS (309)
CASE (310) 137
DEFAULT (311) 138
IF (312) 149 150
ELSE (313) 150
SWITCH (314) 151
WHILE (315) 152 153
DO (316) 153
FOR (317) 154 155
GOTO (318) 156
CONTINUE (319) 157
BREAK (320) 158
RETURN (321) 159 160


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
TRANSLATION_UNIT (86)
    on left: 1 2, on right: 0 2
EXTERNAL_DECLARATION (87)
    on left: 3 4 5 6, on right: 1 2 5 6
FUNCTION_DEFINITION (88)
    on left: 7 8 9 10, on right: 3 5
DECLARATION (89)
    on left: 11 12, on right: 4 6 143 144
DECLARATION_SPECIFIERS (90)
    on left: 13 14 15 16 17 18, on right: 7 8 11 12 14 16 18
STORAGE_CLASS_SPECIFIERS (91)
    on left: 19 20 21 22 23, on right: 13 14
TYPE_SPECIFIER (92)
    on left: 24 25 26 27 28 29 30 31 32 33 34, on right: 15 16 170
    171
TYPE_QUALIFIER (93)
    on left: 35 36, on right: 17 18 70 71 172 173
INIT_DECLARATOR_LIST (94)
    on left: 37 38, on right: 12 38
INIT_DECLARATOR (95)
    on left: 39 40, on right: 37 38
DECLARATOR (96)
    on left: 41 42 43, on right: 7 8 9 10 39 40 43 176 178
DIRECT_DECLARATOR (97)
    on left: 44 45 46 47, on right: 41 42 45 46 47
CONSTANT_EXPRESSION (98)
    on left: 48, on right: 45 137 177 178
ASSIGNMENT_EXPRESSION (99)
    on left: 49 50, on right: 50 51 52 123 124 125
EXPRESSION (100)
    on left: 51 52, on right: 52 65 106 116 148 149 150 151 152 153
    155 160
ASSIGNMENT_OPERATOR (101)
    on left: 53 54 55 56 57 58 59 60 61 62 63, on right: 50
CONDITIONAL_EXPRESSION (102)
    on left: 64 65, on right: 48 49 65
POINTER (103)
    on left: 66 67 68 69, on right: 41 68 69
TYPE_QUALIFIER_LIST (104)
    on left: 70 71, on right: 67 69 71
LOGICAL_OR_EXPRESSION (105)
    on left: 72 73, on right: 64 65 73
LOGICAL_AND_EXPRESSION (106)
    on left: 74 75, on right: 72 73 75
INCLUSIVE_OR_EXPRESSION (107)
    on left: 76 77, on right: 74 75 77
EXCLUSIVE_OR_EXPRESSION (108)
    on left: 78 79, on right: 76 77 79
AND_EXPRESSION (109)
    on left: 80 81, on right: 78 79 81
EQUALITY_EXPRESSION (110)
    on left: 82 83 84, on right: 80 81 83 84
RELATIONAL_EXPRESSION (111)
    on left: 85 86 87 88 89, on right: 82 83 84 86 87 88 89
SHIFT_EXPRESSION (112)
    on left: 90 91 92, on right: 85 86 87 88 89 91 92
ADDITIVE_EXPRESSION (113)
    on left: 93 94 95, on right: 90 91 92 94 95
MULTIPLICATIVE_EXPRESSION (114)
    on left: 96 97 98 99, on right: 93 94 95 97 98 99
CAST_EXPRESSION (115)
    on left: 100, on right: 96 97 98 99 104
UNARY_EXPRESSION (116)
    on left: 101 102 103 104, on right: 50 100 102 103
POSTFIX_EXPRESSION (117)
    on left: 105 106 107 108 109 110 111 112, on right: 101 106 107
    108 109 110 111 112
PRIMARY_EXPRESSION (118)
    on left: 113 114 115 116, on right: 105
UNARY_OPERATOR (119)
    on left: 117 118 119 120 121 122, on right: 104
ARGUMENT_EXPRESSION_LIST (120)
    on left: 123 124, on right: 108 124
INITIALIZER (121)
    on left: 125 126 127, on right: 40 128 129
INITIALIZER_LIST (122)
    on left: 128 129, on right: 126 127 129
STATEMENT (123)
    on left: 130 131 132 133 134 135, on right: 136 137 138 145 146
    149 150 151 152 153 154 155
LABELED_STATEMENT (124)
    on left: 136 137 138, on right: 130
COMPOUND_STATEMENT (125)
    on left: 139 140 141 142, on right: 7 8 9 10 131
DECLARATION_LIST (126)
    on left: 143 144, on right: 7 9 141 142 144
STATEMENT_LIST (127)
    on left: 145 146, on right: 140 142 146
EXPRESSION_STATEMENT (128)
    on left: 147 148, on right: 132 154 155
SELECTION_STATEMENT (129)
    on left: 149 150 151, on right: 133
ITERATION_STATEMENT (130)
    on left: 152 153 154 155, on right: 134
JUMP_STATEMENT (131)
    on left: 156 157 158 159 160, on right: 135
ENUM_SPECIFIER (132)
    on left: 161, on right: 34
STRUCT_OR_UNION_SPECIFIER (133)
    on left: 162 163 164, on right: 33
STRUCT_OR_UNION (134)
    on left: 165 166, on right: 162 163 164
STRUCT_DECLARATION_LIST (135)
    on left: 167 168, on right: 162 163 168
STRUCT_DECLARATION (136)
    on left: 169, on right: 167 168
SPECIFIER_QUALIFIER_LIST (137)
    on left: 170 171 172 173, on right: 169 170 172
STRUCT_DECLARATOR_LIST (138)
    on left: 174 175, on right: 169 175
STRUCT_DECLARATOR (139)
    on left: 176 177 178, on right: 174 175


State 0

    0 $accept: . TRANSLATION_UNIT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 161 (ENUM_SPECIFIER)]
    $default    reduce using rule 161 (ENUM_SPECIFIER)

    TRANSLATION_UNIT           go to state 22
    EXTERNAL_DECLARATION       go to state 23
    FUNCTION_DEFINITION        go to state 24
    DECLARATION                go to state 25
    DECLARATION_SPECIFIERS     go to state 26
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 1

   44 DIRECT_DECLARATOR: IDENTIFIER .

    $default  reduce using rule 44 (DIRECT_DECLARATOR)


State 2

   19 STORAGE_CLASS_SPECIFIERS: TYPEDEF .

    $default  reduce using rule 19 (STORAGE_CLASS_SPECIFIERS)


State 3

   20 STORAGE_CLASS_SPECIFIERS: EXTERN .

    $default  reduce using rule 20 (STORAGE_CLASS_SPECIFIERS)


State 4

   21 STORAGE_CLASS_SPECIFIERS: STATIC .

    $default  reduce using rule 21 (STORAGE_CLASS_SPECIFIERS)


State 5

   22 STORAGE_CLASS_SPECIFIERS: AUTO .

    $default  reduce using rule 22 (STORAGE_CLASS_SPECIFIERS)


State 6

   23 STORAGE_CLASS_SPECIFIERS: REGISTER .

    $default  reduce using rule 23 (STORAGE_CLASS_SPECIFIERS)


State 7

   25 TYPE_SPECIFIER: CHAR .

    $default  reduce using rule 25 (TYPE_SPECIFIER)


State 8

   26 TYPE_SPECIFIER: SHORT .

    $default  reduce using rule 26 (TYPE_SPECIFIER)


State 9

   27 TYPE_SPECIFIER: INT .

    $default  reduce using rule 27 (TYPE_SPECIFIER)


State 10

   28 TYPE_SPECIFIER: LONG .

    $default  reduce using rule 28 (TYPE_SPECIFIER)


State 11

   31 TYPE_SPECIFIER: SIGNED .

    $default  reduce using rule 31 (TYPE_SPECIFIER)


State 12

   32 TYPE_SPECIFIER: UNSIGNED .

    $default  reduce using rule 32 (TYPE_SPECIFIER)


State 13

   29 TYPE_SPECIFIER: FLOAT .

    $default  reduce using rule 29 (TYPE_SPECIFIER)


State 14

   30 TYPE_SPECIFIER: DOUBLE .

    $default  reduce using rule 30 (TYPE_SPECIFIER)


State 15

   35 TYPE_QUALIFIER: CONST .

    $default  reduce using rule 35 (TYPE_QUALIFIER)


State 16

   36 TYPE_QUALIFIER: VOLATILE .

    $default  reduce using rule 36 (TYPE_QUALIFIER)


State 17

   24 TYPE_SPECIFIER: VOID .

    $default  reduce using rule 24 (TYPE_SPECIFIER)


State 18

  165 STRUCT_OR_UNION: STRUCT .

    $default  reduce using rule 165 (STRUCT_OR_UNION)


State 19

  166 STRUCT_OR_UNION: UNION .

    $default  reduce using rule 166 (STRUCT_OR_UNION)


State 20

   43 DECLARATOR: '(' . DECLARATOR ')'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR         go to state 36
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 21

   66 POINTER: '*' .
   67        | '*' . TYPE_QUALIFIER_LIST
   68        | '*' . POINTER
   69        | '*' . TYPE_QUALIFIER_LIST POINTER

    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    '*'       shift, and go to state 21

    $default  reduce using rule 66 (POINTER)

    TYPE_QUALIFIER       go to state 37
    POINTER              go to state 38
    TYPE_QUALIFIER_LIST  go to state 39


State 22

    0 $accept: TRANSLATION_UNIT . $end
    2 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    $end        shift, and go to state 40
    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 161 (ENUM_SPECIFIER)]
    $default    reduce using rule 161 (ENUM_SPECIFIER)

    EXTERNAL_DECLARATION       go to state 41
    FUNCTION_DEFINITION        go to state 24
    DECLARATION                go to state 25
    DECLARATION_SPECIFIERS     go to state 26
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 23

    1 TRANSLATION_UNIT: EXTERNAL_DECLARATION .
    5 EXTERNAL_DECLARATION: EXTERNAL_DECLARATION . FUNCTION_DEFINITION
    6                     | EXTERNAL_DECLARATION . DECLARATION

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 1 (TRANSLATION_UNIT)]
    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 1 (TRANSLATION_UNIT)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 1 (TRANSLATION_UNIT)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 1 (TRANSLATION_UNIT)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 1 (TRANSLATION_UNIT)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 1 (TRANSLATION_UNIT)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 1 (TRANSLATION_UNIT)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 1 (TRANSLATION_UNIT)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 1 (TRANSLATION_UNIT)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 1 (TRANSLATION_UNIT)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 1 (TRANSLATION_UNIT)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 1 (TRANSLATION_UNIT)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 1 (TRANSLATION_UNIT)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 1 (TRANSLATION_UNIT)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 1 (TRANSLATION_UNIT)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 1 (TRANSLATION_UNIT)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 1 (TRANSLATION_UNIT)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 1 (TRANSLATION_UNIT)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 1 (TRANSLATION_UNIT)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ';'         reduce using rule 1 (TRANSLATION_UNIT)
    ';'         [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 1 (TRANSLATION_UNIT)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 1 (TRANSLATION_UNIT)]
    '*'         [reduce using rule 161 (ENUM_SPECIFIER)]
    $default    reduce using rule 1 (TRANSLATION_UNIT)

    FUNCTION_DEFINITION        go to state 42
    DECLARATION                go to state 43
    DECLARATION_SPECIFIERS     go to state 26
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 24

    3 EXTERNAL_DECLARATION: FUNCTION_DEFINITION .

    $default  reduce using rule 3 (EXTERNAL_DECLARATION)


State 25

    4 EXTERNAL_DECLARATION: DECLARATION .

    $default  reduce using rule 4 (EXTERNAL_DECLARATION)


State 26

    7 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
    8                    | DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT
   11 DECLARATION: DECLARATION_SPECIFIERS . ';'
   12            | DECLARATION_SPECIFIERS . INIT_DECLARATOR_LIST ';'
   14 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS . STORAGE_CLASS_SPECIFIERS
   16                       | DECLARATION_SPECIFIERS . TYPE_SPECIFIER
   18                       | DECLARATION_SPECIFIERS . TYPE_QUALIFIER

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    ';'         shift, and go to state 44
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 161 (ENUM_SPECIFIER)]

    STORAGE_CLASS_SPECIFIERS   go to state 45
    TYPE_SPECIFIER             go to state 46
    TYPE_QUALIFIER             go to state 47
    INIT_DECLARATOR_LIST       go to state 48
    INIT_DECLARATOR            go to state 49
    DECLARATOR                 go to state 50
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 27

   13 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIERS .

    $default  reduce using rule 13 (DECLARATION_SPECIFIERS)


State 28

   15 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .

    $default  reduce using rule 15 (DECLARATION_SPECIFIERS)


State 29

   17 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .

    $default  reduce using rule 17 (DECLARATION_SPECIFIERS)


State 30

    9 FUNCTION_DEFINITION: DECLARATOR . DECLARATION_LIST COMPOUND_STATEMENT
   10                    | DECLARATOR . COMPOUND_STATEMENT

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 51

    TYPEDEF   [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    DECLARATION                go to state 52
    DECLARATION_SPECIFIERS     go to state 53
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 54
    DECLARATION_LIST           go to state 55
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 31

   42 DECLARATOR: DIRECT_DECLARATOR .
   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR . '[' CONSTANT_EXPRESSION ']'
   46                  | DIRECT_DECLARATOR . '[' ']'
   47                  | DIRECT_DECLARATOR . '(' ')'

    '('  shift, and go to state 56
    '['  shift, and go to state 57

    '('       [reduce using rule 42 (DECLARATOR)]
    $default  reduce using rule 42 (DECLARATOR)


State 32

   41 DECLARATOR: POINTER . DIRECT_DECLARATOR

    IDENTIFIER  shift, and go to state 1

    DIRECT_DECLARATOR  go to state 58


State 33

   34 TYPE_SPECIFIER: ENUM_SPECIFIER .

    $default  reduce using rule 34 (TYPE_SPECIFIER)


State 34

   33 TYPE_SPECIFIER: STRUCT_OR_UNION_SPECIFIER .

    $default  reduce using rule 33 (TYPE_SPECIFIER)


State 35

  162 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION . IDENTIFIER '{' STRUCT_DECLARATION_LIST '}'
  163                          | STRUCT_OR_UNION . '{' STRUCT_DECLARATION_LIST '}'
  164                          | STRUCT_OR_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 59
    '{'         shift, and go to state 60


State 36

   43 DECLARATOR: '(' DECLARATOR . ')'

    ')'  shift, and go to state 61


State 37

   70 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER .

    $default  reduce using rule 70 (TYPE_QUALIFIER_LIST)


State 38

   68 POINTER: '*' POINTER .

    $default  reduce using rule 68 (POINTER)


State 39

   67 POINTER: '*' TYPE_QUALIFIER_LIST .
   69        | '*' TYPE_QUALIFIER_LIST . POINTER
   71 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST . TYPE_QUALIFIER

    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    '*'       shift, and go to state 21

    $default  reduce using rule 67 (POINTER)

    TYPE_QUALIFIER  go to state 62
    POINTER         go to state 63


State 40

    0 $accept: TRANSLATION_UNIT $end .

    $default  accept


State 41

    2 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .
    5 EXTERNAL_DECLARATION: EXTERNAL_DECLARATION . FUNCTION_DEFINITION
    6                     | EXTERNAL_DECLARATION . DECLARATION

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 2 (TRANSLATION_UNIT)]
    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 2 (TRANSLATION_UNIT)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 2 (TRANSLATION_UNIT)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 2 (TRANSLATION_UNIT)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 2 (TRANSLATION_UNIT)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 2 (TRANSLATION_UNIT)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 2 (TRANSLATION_UNIT)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 2 (TRANSLATION_UNIT)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 2 (TRANSLATION_UNIT)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 2 (TRANSLATION_UNIT)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 2 (TRANSLATION_UNIT)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 2 (TRANSLATION_UNIT)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 2 (TRANSLATION_UNIT)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 2 (TRANSLATION_UNIT)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 2 (TRANSLATION_UNIT)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 2 (TRANSLATION_UNIT)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 2 (TRANSLATION_UNIT)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 2 (TRANSLATION_UNIT)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 2 (TRANSLATION_UNIT)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ';'         reduce using rule 2 (TRANSLATION_UNIT)
    ';'         [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 2 (TRANSLATION_UNIT)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 2 (TRANSLATION_UNIT)]
    '*'         [reduce using rule 161 (ENUM_SPECIFIER)]
    $default    reduce using rule 2 (TRANSLATION_UNIT)

    FUNCTION_DEFINITION        go to state 42
    DECLARATION                go to state 43
    DECLARATION_SPECIFIERS     go to state 26
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 42

    5 EXTERNAL_DECLARATION: EXTERNAL_DECLARATION FUNCTION_DEFINITION .

    $default  reduce using rule 5 (EXTERNAL_DECLARATION)


State 43

    6 EXTERNAL_DECLARATION: EXTERNAL_DECLARATION DECLARATION .

    $default  reduce using rule 6 (EXTERNAL_DECLARATION)


State 44

   11 DECLARATION: DECLARATION_SPECIFIERS ';' .

    $default  reduce using rule 11 (DECLARATION)


State 45

   14 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS STORAGE_CLASS_SPECIFIERS .

    $default  reduce using rule 14 (DECLARATION_SPECIFIERS)


State 46

   16 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS TYPE_SPECIFIER .

    $default  reduce using rule 16 (DECLARATION_SPECIFIERS)


State 47

   18 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS TYPE_QUALIFIER .

    $default  reduce using rule 18 (DECLARATION_SPECIFIERS)


State 48

   12 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST . ';'
   38 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST . ',' INIT_DECLARATOR

    ','  shift, and go to state 64
    ';'  shift, and go to state 65


State 49

   37 INIT_DECLARATOR_LIST: INIT_DECLARATOR .

    $default  reduce using rule 37 (INIT_DECLARATOR_LIST)


State 50

    7 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . DECLARATION_LIST COMPOUND_STATEMENT
    8                    | DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT
   39 INIT_DECLARATOR: DECLARATOR .
   40                | DECLARATOR . '=' INITIALIZER

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '='       shift, and go to state 66
    '{'       shift, and go to state 51

    TYPEDEF   [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    ','       reduce using rule 39 (INIT_DECLARATOR)
    ';'       reduce using rule 39 (INIT_DECLARATOR)
    ';'       [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    DECLARATION                go to state 52
    DECLARATION_SPECIFIERS     go to state 53
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 67
    DECLARATION_LIST           go to state 68
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 51

  139 COMPOUND_STATEMENT: '{' . '}'
  140                   | '{' . STATEMENT_LIST '}'
  141                   | '{' . DECLARATION_LIST '}'
  142                   | '{' . DECLARATION_LIST STATEMENT_LIST '}'

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    TYPEDEF         shift, and go to state 2
    EXTERN          shift, and go to state 3
    STATIC          shift, and go to state 4
    AUTO            shift, and go to state 5
    REGISTER        shift, and go to state 6
    CHAR            shift, and go to state 7
    SHORT           shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    CONST           shift, and go to state 15
    VOLATILE        shift, and go to state 16
    VOID            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    '}'             shift, and go to state 91
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    $default    reduce using rule 161 (ENUM_SPECIFIER)

    DECLARATION                go to state 52
    DECLARATION_SPECIFIERS     go to state 53
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 112
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    DECLARATION_LIST           go to state 115
    STATEMENT_LIST             go to state 116
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 52

  143 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 143 (DECLARATION_LIST)


State 53

   11 DECLARATION: DECLARATION_SPECIFIERS . ';'
   12            | DECLARATION_SPECIFIERS . INIT_DECLARATOR_LIST ';'
   14 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS . STORAGE_CLASS_SPECIFIERS
   16                       | DECLARATION_SPECIFIERS . TYPE_SPECIFIER
   18                       | DECLARATION_SPECIFIERS . TYPE_QUALIFIER

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    ';'         shift, and go to state 44
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 161 (ENUM_SPECIFIER)]

    STORAGE_CLASS_SPECIFIERS   go to state 45
    TYPE_SPECIFIER             go to state 46
    TYPE_QUALIFIER             go to state 47
    INIT_DECLARATOR_LIST       go to state 48
    INIT_DECLARATOR            go to state 49
    DECLARATOR                 go to state 121
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 54

   10 FUNCTION_DEFINITION: DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 10 (FUNCTION_DEFINITION)


State 55

    9 FUNCTION_DEFINITION: DECLARATOR DECLARATION_LIST . COMPOUND_STATEMENT
  144 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 51

    TYPEDEF   [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    DECLARATION                go to state 122
    DECLARATION_SPECIFIERS     go to state 53
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 123
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 56

   47 DIRECT_DECLARATOR: DIRECT_DECLARATOR '(' . ')'

    ')'  shift, and go to state 124


State 57

   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' . CONSTANT_EXPRESSION ']'
   46                  | DIRECT_DECLARATOR '[' . ']'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93
    ']'             shift, and go to state 126

    CONSTANT_EXPRESSION        go to state 127
    CONDITIONAL_EXPRESSION     go to state 128
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 58

   41 DECLARATOR: POINTER DIRECT_DECLARATOR .
   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR . '[' CONSTANT_EXPRESSION ']'
   46                  | DIRECT_DECLARATOR . '[' ']'
   47                  | DIRECT_DECLARATOR . '(' ')'

    '('  shift, and go to state 56
    '['  shift, and go to state 57

    '('       [reduce using rule 41 (DECLARATOR)]
    $default  reduce using rule 41 (DECLARATOR)


State 59

  162 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER . '{' STRUCT_DECLARATION_LIST '}'
  164                          | STRUCT_OR_UNION IDENTIFIER .

    '{'  shift, and go to state 130

    $default  reduce using rule 164 (STRUCT_OR_UNION_SPECIFIER)


State 60

  163 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' . STRUCT_DECLARATION_LIST '}'

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 131
    TYPE_QUALIFIER             go to state 132
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION_LIST    go to state 133
    STRUCT_DECLARATION         go to state 134
    SPECIFIER_QUALIFIER_LIST   go to state 135


State 61

   43 DECLARATOR: '(' DECLARATOR ')' .

    $default  reduce using rule 43 (DECLARATOR)


State 62

   71 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST TYPE_QUALIFIER .

    $default  reduce using rule 71 (TYPE_QUALIFIER_LIST)


State 63

   69 POINTER: '*' TYPE_QUALIFIER_LIST POINTER .

    $default  reduce using rule 69 (POINTER)


State 64

   38 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST ',' . INIT_DECLARATOR

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    INIT_DECLARATOR    go to state 136
    DECLARATOR         go to state 121
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 65

   12 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST ';' .

    $default  reduce using rule 12 (DECLARATION)


State 66

   40 INIT_DECLARATOR: DECLARATOR '=' . INITIALIZER

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 137
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 138
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    INITIALIZER                go to state 139


State 67

    8 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 8 (FUNCTION_DEFINITION)


State 68

    7 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST . COMPOUND_STATEMENT
  144 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 51

    TYPEDEF   [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    DECLARATION                go to state 122
    DECLARATION_SPECIFIERS     go to state 53
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 140
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 69

  113 PRIMARY_EXPRESSION: IDENTIFIER .
  136 LABELED_STATEMENT: IDENTIFIER . ':' STATEMENT

    ':'  shift, and go to state 141

    $default  reduce using rule 113 (PRIMARY_EXPRESSION)


State 70

  114 PRIMARY_EXPRESSION: CONSTANT .

    $default  reduce using rule 114 (PRIMARY_EXPRESSION)


State 71

  115 PRIMARY_EXPRESSION: STRING_LITERAL .

    $default  reduce using rule 115 (PRIMARY_EXPRESSION)


State 72

  102 UNARY_EXPRESSION: INC_OP . UNARY_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    UNARY_EXPRESSION    go to state 142
    POSTFIX_EXPRESSION  go to state 109
    PRIMARY_EXPRESSION  go to state 110
    UNARY_OPERATOR      go to state 111


State 73

  103 UNARY_EXPRESSION: DEC_OP . UNARY_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    UNARY_EXPRESSION    go to state 143
    POSTFIX_EXPRESSION  go to state 109
    PRIMARY_EXPRESSION  go to state 110
    UNARY_OPERATOR      go to state 111


State 74

  119 UNARY_OPERATOR: PLUS .

    $default  reduce using rule 119 (UNARY_OPERATOR)


State 75

  120 UNARY_OPERATOR: MINUS .

    $default  reduce using rule 120 (UNARY_OPERATOR)


State 76

  118 UNARY_OPERATOR: MULTIPLY .

    $default  reduce using rule 118 (UNARY_OPERATOR)


State 77

  137 LABELED_STATEMENT: CASE . CONSTANT_EXPRESSION ':' STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CONSTANT_EXPRESSION        go to state 144
    CONDITIONAL_EXPRESSION     go to state 128
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 78

  138 LABELED_STATEMENT: DEFAULT . ':' STATEMENT

    ':'  shift, and go to state 145


State 79

  149 SELECTION_STATEMENT: IF . '(' EXPRESSION ')' STATEMENT
  150                    | IF . '(' EXPRESSION ')' STATEMENT ELSE STATEMENT

    '('  shift, and go to state 146


State 80

  151 SELECTION_STATEMENT: SWITCH . '(' EXPRESSION ')' STATEMENT

    '('  shift, and go to state 147


State 81

  152 ITERATION_STATEMENT: WHILE . '(' EXPRESSION ')' STATEMENT

    '('  shift, and go to state 148


State 82

  153 ITERATION_STATEMENT: DO . STATEMENT WHILE '(' EXPRESSION ')' ';'

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 149
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 83

  154 ITERATION_STATEMENT: FOR . '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  155                    | FOR . '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    '('  shift, and go to state 150


State 84

  156 JUMP_STATEMENT: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 151


State 85

  157 JUMP_STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 152


State 86

  158 JUMP_STATEMENT: BREAK . ';'

    ';'  shift, and go to state 153


State 87

  159 JUMP_STATEMENT: RETURN . ';'
  160               | RETURN . EXPRESSION ';'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    ';'             shift, and go to state 154
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 155
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 88

  117 UNARY_OPERATOR: '&' .

    $default  reduce using rule 117 (UNARY_OPERATOR)


State 89

  121 UNARY_OPERATOR: '~' .

    $default  reduce using rule 121 (UNARY_OPERATOR)


State 90

  122 UNARY_OPERATOR: '!' .

    $default  reduce using rule 122 (UNARY_OPERATOR)


State 91

  139 COMPOUND_STATEMENT: '{' '}' .

    $default  reduce using rule 139 (COMPOUND_STATEMENT)


State 92

  147 EXPRESSION_STATEMENT: ';' .

    $default  reduce using rule 147 (EXPRESSION_STATEMENT)


State 93

  116 PRIMARY_EXPRESSION: '(' . EXPRESSION ')'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 156
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 94

   51 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 51 (EXPRESSION)


State 95

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  148 EXPRESSION_STATEMENT: EXPRESSION . ';'

    ','  shift, and go to state 157
    ';'  shift, and go to state 158


State 96

   49 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 49 (ASSIGNMENT_EXPRESSION)


State 97

   64 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION .
   65                       | LOGICAL_OR_EXPRESSION . '?' EXPRESSION ':' CONDITIONAL_EXPRESSION
   73 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION . OR_OP LOGICAL_AND_EXPRESSION

    OR_OP  shift, and go to state 159
    '?'    shift, and go to state 160

    $default  reduce using rule 64 (CONDITIONAL_EXPRESSION)


State 98

   72 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION .
   75 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . AND_OP INCLUSIVE_OR_EXPRESSION

    AND_OP  shift, and go to state 161

    $default  reduce using rule 72 (LOGICAL_OR_EXPRESSION)


State 99

   74 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .
   77 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . '|' EXCLUSIVE_OR_EXPRESSION

    '|'  shift, and go to state 162

    $default  reduce using rule 74 (LOGICAL_AND_EXPRESSION)


State 100

   76 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .
   79 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . '^' AND_EXPRESSION

    '^'  shift, and go to state 163

    $default  reduce using rule 76 (INCLUSIVE_OR_EXPRESSION)


State 101

   78 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .
   81 AND_EXPRESSION: AND_EXPRESSION . '&' EQUALITY_EXPRESSION

    '&'  shift, and go to state 164

    $default  reduce using rule 78 (EXCLUSIVE_OR_EXPRESSION)


State 102

   80 AND_EXPRESSION: EQUALITY_EXPRESSION .
   83 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQ_OP RELATIONAL_EXPRESSION
   84                    | EQUALITY_EXPRESSION . NE_OP RELATIONAL_EXPRESSION

    EQ_OP  shift, and go to state 165
    NE_OP  shift, and go to state 166

    $default  reduce using rule 80 (AND_EXPRESSION)


State 103

   82 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .
   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   88                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   89                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION

    LE_OP  shift, and go to state 167
    GE_OP  shift, and go to state 168
    GT     shift, and go to state 169
    LT     shift, and go to state 170

    $default  reduce using rule 82 (EQUALITY_EXPRESSION)


State 104

   85 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 171
    RIGHT_OP  shift, and go to state 172

    $default  reduce using rule 85 (RELATIONAL_EXPRESSION)


State 105

   90 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .
   94 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   95                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION

    PLUS   shift, and go to state 173
    MINUS  shift, and go to state 174

    $default  reduce using rule 90 (SHIFT_EXPRESSION)


State 106

   93 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .
   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   98                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   99                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION

    MULTIPLY  shift, and go to state 175
    MODULO    shift, and go to state 176
    DIVIDE    shift, and go to state 177

    $default  reduce using rule 93 (ADDITIVE_EXPRESSION)


State 107

   96 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 96 (MULTIPLICATIVE_EXPRESSION)


State 108

   50 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION
  100 CAST_EXPRESSION: UNARY_EXPRESSION .

    MUL_ASSIGN    shift, and go to state 178
    DIV_ASSIGN    shift, and go to state 179
    MOD_ASSIGN    shift, and go to state 180
    ADD_ASSIGN    shift, and go to state 181
    SUB_ASSIGN    shift, and go to state 182
    LEFT_ASSIGN   shift, and go to state 183
    RIGHT_ASSIGN  shift, and go to state 184
    AND_ASSIGN    shift, and go to state 185
    XOR_ASSIGN    shift, and go to state 186
    OR_ASSIGN     shift, and go to state 187
    '='           shift, and go to state 188

    $default  reduce using rule 100 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 189


State 109

  101 UNARY_EXPRESSION: POSTFIX_EXPRESSION .
  106 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . '[' EXPRESSION ']'
  107                   | POSTFIX_EXPRESSION . '(' ')'
  108                   | POSTFIX_EXPRESSION . '(' ARGUMENT_EXPRESSION_LIST ')'
  109                   | POSTFIX_EXPRESSION . '.' IDENTIFIER
  110                   | POSTFIX_EXPRESSION . PTR_OP IDENTIFIER
  111                   | POSTFIX_EXPRESSION . INC_OP
  112                   | POSTFIX_EXPRESSION . DEC_OP

    PTR_OP  shift, and go to state 190
    INC_OP  shift, and go to state 191
    DEC_OP  shift, and go to state 192
    '.'     shift, and go to state 193
    '('     shift, and go to state 194
    '['     shift, and go to state 195

    $default  reduce using rule 101 (UNARY_EXPRESSION)


State 110

  105 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 105 (POSTFIX_EXPRESSION)


State 111

  104 UNARY_EXPRESSION: UNARY_OPERATOR . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CAST_EXPRESSION     go to state 196
    UNARY_EXPRESSION    go to state 129
    POSTFIX_EXPRESSION  go to state 109
    PRIMARY_EXPRESSION  go to state 110
    UNARY_OPERATOR      go to state 111


State 112

  145 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 145 (STATEMENT_LIST)


State 113

  130 STATEMENT: LABELED_STATEMENT .

    $default  reduce using rule 130 (STATEMENT)


State 114

  131 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 131 (STATEMENT)


State 115

  141 COMPOUND_STATEMENT: '{' DECLARATION_LIST . '}'
  142                   | '{' DECLARATION_LIST . STATEMENT_LIST '}'
  144 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    TYPEDEF         shift, and go to state 2
    EXTERN          shift, and go to state 3
    STATIC          shift, and go to state 4
    AUTO            shift, and go to state 5
    REGISTER        shift, and go to state 6
    CHAR            shift, and go to state 7
    SHORT           shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    CONST           shift, and go to state 15
    VOLATILE        shift, and go to state 16
    VOID            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    '}'             shift, and go to state 197
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    IDENTIFIER  [reduce using rule 161 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 161 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 161 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 161 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 161 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 161 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 161 (ENUM_SPECIFIER)]
    '('         [reduce using rule 161 (ENUM_SPECIFIER)]
    $default    reduce using rule 161 (ENUM_SPECIFIER)

    DECLARATION                go to state 122
    DECLARATION_SPECIFIERS     go to state 53
    STORAGE_CLASS_SPECIFIERS   go to state 27
    TYPE_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 112
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    STATEMENT_LIST             go to state 198
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35


State 116

  140 COMPOUND_STATEMENT: '{' STATEMENT_LIST . '}'
  146 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    '}'             shift, and go to state 199
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 200
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 117

  132 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 132 (STATEMENT)


State 118

  133 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 133 (STATEMENT)


State 119

  134 STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 134 (STATEMENT)


State 120

  135 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 135 (STATEMENT)


State 121

   39 INIT_DECLARATOR: DECLARATOR .
   40                | DECLARATOR . '=' INITIALIZER

    '='  shift, and go to state 66

    $default  reduce using rule 39 (INIT_DECLARATOR)


State 122

  144 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 144 (DECLARATION_LIST)


State 123

    9 FUNCTION_DEFINITION: DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT .

    $default  reduce using rule 9 (FUNCTION_DEFINITION)


State 124

   47 DIRECT_DECLARATOR: DIRECT_DECLARATOR '(' ')' .

    $default  reduce using rule 47 (DIRECT_DECLARATOR)


State 125

  113 PRIMARY_EXPRESSION: IDENTIFIER .

    $default  reduce using rule 113 (PRIMARY_EXPRESSION)


State 126

   46 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' ']' .

    $default  reduce using rule 46 (DIRECT_DECLARATOR)


State 127

   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION . ']'

    ']'  shift, and go to state 201


State 128

   48 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 48 (CONSTANT_EXPRESSION)


State 129

  100 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 100 (CAST_EXPRESSION)


State 130

  162 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' . STRUCT_DECLARATION_LIST '}'

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 131
    TYPE_QUALIFIER             go to state 132
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION_LIST    go to state 202
    STRUCT_DECLARATION         go to state 134
    SPECIFIER_QUALIFIER_LIST   go to state 135


State 131

  170 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER . SPECIFIER_QUALIFIER_LIST
  171                         | TYPE_SPECIFIER .

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    IDENTIFIER  reduce using rule 161 (ENUM_SPECIFIER)
    IDENTIFIER  [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ':'         reduce using rule 161 (ENUM_SPECIFIER)
    ':'         [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    '('         reduce using rule 161 (ENUM_SPECIFIER)
    '('         [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    '*'         reduce using rule 161 (ENUM_SPECIFIER)
    '*'         [reduce using rule 171 (SPECIFIER_QUALIFIER_LIST)]
    $default    reduce using rule 161 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 131
    TYPE_QUALIFIER             go to state 132
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    SPECIFIER_QUALIFIER_LIST   go to state 203


State 132

  172 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER . SPECIFIER_QUALIFIER_LIST
  173                         | TYPE_QUALIFIER .

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    IDENTIFIER  reduce using rule 161 (ENUM_SPECIFIER)
    IDENTIFIER  [reduce using rule 173 (SPECIFIER_QUALIFIER_LIST)]
    CHAR        [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 161 (ENUM_SPECIFIER)]
    INT         [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 161 (ENUM_SPECIFIER)]
    ':'         reduce using rule 161 (ENUM_SPECIFIER)
    ':'         [reduce using rule 173 (SPECIFIER_QUALIFIER_LIST)]
    '('         reduce using rule 161 (ENUM_SPECIFIER)
    '('         [reduce using rule 173 (SPECIFIER_QUALIFIER_LIST)]
    '*'         reduce using rule 161 (ENUM_SPECIFIER)
    '*'         [reduce using rule 173 (SPECIFIER_QUALIFIER_LIST)]
    $default    reduce using rule 161 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 131
    TYPE_QUALIFIER             go to state 132
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    SPECIFIER_QUALIFIER_LIST   go to state 204


State 133

  163 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST . '}'
  168 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST . STRUCT_DECLARATION

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '}'       shift, and go to state 205

    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 131
    TYPE_QUALIFIER             go to state 132
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION         go to state 206
    SPECIFIER_QUALIFIER_LIST   go to state 135


State 134

  167 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION .

    $default  reduce using rule 167 (STRUCT_DECLARATION_LIST)


State 135

  169 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST . STRUCT_DECLARATOR_LIST ';'

    IDENTIFIER  shift, and go to state 1
    ':'         shift, and go to state 207
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR              go to state 208
    DIRECT_DECLARATOR       go to state 31
    POINTER                 go to state 32
    STRUCT_DECLARATOR_LIST  go to state 209
    STRUCT_DECLARATOR       go to state 210


State 136

   38 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST ',' INIT_DECLARATOR .

    $default  reduce using rule 38 (INIT_DECLARATOR_LIST)


State 137

  126 INITIALIZER: '{' . INITIALIZER_LIST '}'
  127            | '{' . INITIALIZER_LIST ',' '}'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 137
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 138
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    INITIALIZER                go to state 211
    INITIALIZER_LIST           go to state 212


State 138

  125 INITIALIZER: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 125 (INITIALIZER)


State 139

   40 INIT_DECLARATOR: DECLARATOR '=' INITIALIZER .

    $default  reduce using rule 40 (INIT_DECLARATOR)


State 140

    7 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT .

    $default  reduce using rule 7 (FUNCTION_DEFINITION)


State 141

  136 LABELED_STATEMENT: IDENTIFIER ':' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 213
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 142

  102 UNARY_EXPRESSION: INC_OP UNARY_EXPRESSION .

    $default  reduce using rule 102 (UNARY_EXPRESSION)


State 143

  103 UNARY_EXPRESSION: DEC_OP UNARY_EXPRESSION .

    $default  reduce using rule 103 (UNARY_EXPRESSION)


State 144

  137 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION . ':' STATEMENT

    ':'  shift, and go to state 214


State 145

  138 LABELED_STATEMENT: DEFAULT ':' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 215
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 146

  149 SELECTION_STATEMENT: IF '(' . EXPRESSION ')' STATEMENT
  150                    | IF '(' . EXPRESSION ')' STATEMENT ELSE STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 216
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 147

  151 SELECTION_STATEMENT: SWITCH '(' . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 217
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 148

  152 ITERATION_STATEMENT: WHILE '(' . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 218
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 149

  153 ITERATION_STATEMENT: DO STATEMENT . WHILE '(' EXPRESSION ')' ';'

    WHILE  shift, and go to state 219


State 150

  154 ITERATION_STATEMENT: FOR '(' . EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  155                    | FOR '(' . EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    EXPRESSION_STATEMENT       go to state 220


State 151

  156 JUMP_STATEMENT: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 221


State 152

  157 JUMP_STATEMENT: CONTINUE ';' .

    $default  reduce using rule 157 (JUMP_STATEMENT)


State 153

  158 JUMP_STATEMENT: BREAK ';' .

    $default  reduce using rule 158 (JUMP_STATEMENT)


State 154

  159 JUMP_STATEMENT: RETURN ';' .

    $default  reduce using rule 159 (JUMP_STATEMENT)


State 155

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  160 JUMP_STATEMENT: RETURN EXPRESSION . ';'

    ','  shift, and go to state 157
    ';'  shift, and go to state 222


State 156

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  116 PRIMARY_EXPRESSION: '(' EXPRESSION . ')'

    ','  shift, and go to state 157
    ')'  shift, and go to state 223


State 157

   52 EXPRESSION: EXPRESSION ',' . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 224
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 158

  148 EXPRESSION_STATEMENT: EXPRESSION ';' .

    $default  reduce using rule 148 (EXPRESSION_STATEMENT)


State 159

   73 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION OR_OP . LOGICAL_AND_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    LOGICAL_AND_EXPRESSION     go to state 225
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 160

   65 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' . EXPRESSION ':' CONDITIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 226
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 161

   75 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION AND_OP . INCLUSIVE_OR_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    INCLUSIVE_OR_EXPRESSION    go to state 227
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 162

   77 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION '|' . EXCLUSIVE_OR_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    EXCLUSIVE_OR_EXPRESSION    go to state 228
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 163

   79 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION '^' . AND_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    AND_EXPRESSION             go to state 229
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 164

   81 AND_EXPRESSION: AND_EXPRESSION '&' . EQUALITY_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    EQUALITY_EXPRESSION        go to state 230
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 165

   83 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQ_OP . RELATIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    RELATIONAL_EXPRESSION      go to state 231
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 166

   84 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NE_OP . RELATIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    RELATIONAL_EXPRESSION      go to state 232
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 167

   88 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LE_OP . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    SHIFT_EXPRESSION           go to state 233
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 168

   89 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GE_OP . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    SHIFT_EXPRESSION           go to state 234
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 169

   87 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GT . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    SHIFT_EXPRESSION           go to state 235
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 170

   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LT . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    SHIFT_EXPRESSION           go to state 236
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 171

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION LEFT_OP . ADDITIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ADDITIVE_EXPRESSION        go to state 237
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 172

   92 SHIFT_EXPRESSION: SHIFT_EXPRESSION RIGHT_OP . ADDITIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ADDITIVE_EXPRESSION        go to state 238
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 173

   94 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS . MULTIPLICATIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    MULTIPLICATIVE_EXPRESSION  go to state 239
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 174

   95 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS . MULTIPLICATIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    MULTIPLICATIVE_EXPRESSION  go to state 240
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 175

   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLY . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CAST_EXPRESSION     go to state 241
    UNARY_EXPRESSION    go to state 129
    POSTFIX_EXPRESSION  go to state 109
    PRIMARY_EXPRESSION  go to state 110
    UNARY_OPERATOR      go to state 111


State 176

   99 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MODULO . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CAST_EXPRESSION     go to state 242
    UNARY_EXPRESSION    go to state 129
    POSTFIX_EXPRESSION  go to state 109
    PRIMARY_EXPRESSION  go to state 110
    UNARY_OPERATOR      go to state 111


State 177

   98 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CAST_EXPRESSION     go to state 243
    UNARY_EXPRESSION    go to state 129
    POSTFIX_EXPRESSION  go to state 109
    PRIMARY_EXPRESSION  go to state 110
    UNARY_OPERATOR      go to state 111


State 178

   54 ASSIGNMENT_OPERATOR: MUL_ASSIGN .

    $default  reduce using rule 54 (ASSIGNMENT_OPERATOR)


State 179

   55 ASSIGNMENT_OPERATOR: DIV_ASSIGN .

    $default  reduce using rule 55 (ASSIGNMENT_OPERATOR)


State 180

   56 ASSIGNMENT_OPERATOR: MOD_ASSIGN .

    $default  reduce using rule 56 (ASSIGNMENT_OPERATOR)


State 181

   57 ASSIGNMENT_OPERATOR: ADD_ASSIGN .

    $default  reduce using rule 57 (ASSIGNMENT_OPERATOR)


State 182

   58 ASSIGNMENT_OPERATOR: SUB_ASSIGN .

    $default  reduce using rule 58 (ASSIGNMENT_OPERATOR)


State 183

   59 ASSIGNMENT_OPERATOR: LEFT_ASSIGN .

    $default  reduce using rule 59 (ASSIGNMENT_OPERATOR)


State 184

   60 ASSIGNMENT_OPERATOR: RIGHT_ASSIGN .

    $default  reduce using rule 60 (ASSIGNMENT_OPERATOR)


State 185

   61 ASSIGNMENT_OPERATOR: AND_ASSIGN .

    $default  reduce using rule 61 (ASSIGNMENT_OPERATOR)


State 186

   62 ASSIGNMENT_OPERATOR: XOR_ASSIGN .

    $default  reduce using rule 62 (ASSIGNMENT_OPERATOR)


State 187

   63 ASSIGNMENT_OPERATOR: OR_ASSIGN .

    $default  reduce using rule 63 (ASSIGNMENT_OPERATOR)


State 188

   53 ASSIGNMENT_OPERATOR: '=' .

    $default  reduce using rule 53 (ASSIGNMENT_OPERATOR)


State 189

   50 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 244
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 190

  110 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 245


State 191

  111 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION INC_OP .

    $default  reduce using rule 111 (POSTFIX_EXPRESSION)


State 192

  112 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION DEC_OP .

    $default  reduce using rule 112 (POSTFIX_EXPRESSION)


State 193

  109 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 246


State 194

  107 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' . ')'
  108                   | POSTFIX_EXPRESSION '(' . ARGUMENT_EXPRESSION_LIST ')'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93
    ')'             shift, and go to state 247

    ASSIGNMENT_EXPRESSION      go to state 248
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    ARGUMENT_EXPRESSION_LIST   go to state 249


State 195

  106 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' . EXPRESSION ']'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 250
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 196

  104 UNARY_EXPRESSION: UNARY_OPERATOR CAST_EXPRESSION .

    $default  reduce using rule 104 (UNARY_EXPRESSION)


State 197

  141 COMPOUND_STATEMENT: '{' DECLARATION_LIST '}' .

    $default  reduce using rule 141 (COMPOUND_STATEMENT)


State 198

  142 COMPOUND_STATEMENT: '{' DECLARATION_LIST STATEMENT_LIST . '}'
  146 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    '}'             shift, and go to state 251
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 200
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 199

  140 COMPOUND_STATEMENT: '{' STATEMENT_LIST '}' .

    $default  reduce using rule 140 (COMPOUND_STATEMENT)


State 200

  146 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 146 (STATEMENT_LIST)


State 201

   45 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION ']' .

    $default  reduce using rule 45 (DIRECT_DECLARATOR)


State 202

  162 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST . '}'
  168 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST . STRUCT_DECLARATION

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '}'       shift, and go to state 252

    CHAR      [reduce using rule 161 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 161 (ENUM_SPECIFIER)]
    INT       [reduce using rule 161 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 161 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 161 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 161 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 161 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 161 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 161 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 161 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 161 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 161 (ENUM_SPECIFIER)]
    $default  reduce using rule 161 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 131
    TYPE_QUALIFIER             go to state 132
    ENUM_SPECIFIER             go to state 33
    STRUCT_OR_UNION_SPECIFIER  go to state 34
    STRUCT_OR_UNION            go to state 35
    STRUCT_DECLARATION         go to state 206
    SPECIFIER_QUALIFIER_LIST   go to state 135


State 203

  170 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST .

    $default  reduce using rule 170 (SPECIFIER_QUALIFIER_LIST)


State 204

  172 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST .

    $default  reduce using rule 172 (SPECIFIER_QUALIFIER_LIST)


State 205

  163 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST '}' .

    $default  reduce using rule 163 (STRUCT_OR_UNION_SPECIFIER)


State 206

  168 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST STRUCT_DECLARATION .

    $default  reduce using rule 168 (STRUCT_DECLARATION_LIST)


State 207

  177 STRUCT_DECLARATOR: ':' . CONSTANT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CONSTANT_EXPRESSION        go to state 253
    CONDITIONAL_EXPRESSION     go to state 128
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 208

  176 STRUCT_DECLARATOR: DECLARATOR .
  178                  | DECLARATOR . ':' CONSTANT_EXPRESSION

    ':'  shift, and go to state 254

    $default  reduce using rule 176 (STRUCT_DECLARATOR)


State 209

  169 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST . ';'
  175 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST . ',' STRUCT_DECLARATOR

    ','  shift, and go to state 255
    ';'  shift, and go to state 256


State 210

  174 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR .

    $default  reduce using rule 174 (STRUCT_DECLARATOR_LIST)


State 211

  128 INITIALIZER_LIST: INITIALIZER .

    $default  reduce using rule 128 (INITIALIZER_LIST)


State 212

  126 INITIALIZER: '{' INITIALIZER_LIST . '}'
  127            | '{' INITIALIZER_LIST . ',' '}'
  129 INITIALIZER_LIST: INITIALIZER_LIST . ',' INITIALIZER

    '}'  shift, and go to state 257
    ','  shift, and go to state 258


State 213

  136 LABELED_STATEMENT: IDENTIFIER ':' STATEMENT .

    $default  reduce using rule 136 (LABELED_STATEMENT)


State 214

  137 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION ':' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 259
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 215

  138 LABELED_STATEMENT: DEFAULT ':' STATEMENT .

    $default  reduce using rule 138 (LABELED_STATEMENT)


State 216

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  149 SELECTION_STATEMENT: IF '(' EXPRESSION . ')' STATEMENT
  150                    | IF '(' EXPRESSION . ')' STATEMENT ELSE STATEMENT

    ','  shift, and go to state 157
    ')'  shift, and go to state 260


State 217

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  151 SELECTION_STATEMENT: SWITCH '(' EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 157
    ')'  shift, and go to state 261


State 218

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  152 ITERATION_STATEMENT: WHILE '(' EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 157
    ')'  shift, and go to state 262


State 219

  153 ITERATION_STATEMENT: DO STATEMENT WHILE . '(' EXPRESSION ')' ';'

    '('  shift, and go to state 263


State 220

  154 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT . EXPRESSION_STATEMENT ')' STATEMENT
  155                    | FOR '(' EXPRESSION_STATEMENT . EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    EXPRESSION_STATEMENT       go to state 264


State 221

  156 JUMP_STATEMENT: GOTO IDENTIFIER ';' .

    $default  reduce using rule 156 (JUMP_STATEMENT)


State 222

  160 JUMP_STATEMENT: RETURN EXPRESSION ';' .

    $default  reduce using rule 160 (JUMP_STATEMENT)


State 223

  116 PRIMARY_EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 116 (PRIMARY_EXPRESSION)


State 224

   52 EXPRESSION: EXPRESSION ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 52 (EXPRESSION)


State 225

   73 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION OR_OP LOGICAL_AND_EXPRESSION .
   75 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . AND_OP INCLUSIVE_OR_EXPRESSION

    AND_OP  shift, and go to state 161

    $default  reduce using rule 73 (LOGICAL_OR_EXPRESSION)


State 226

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
   65 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION . ':' CONDITIONAL_EXPRESSION

    ':'  shift, and go to state 265
    ','  shift, and go to state 157


State 227

   75 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION AND_OP INCLUSIVE_OR_EXPRESSION .
   77 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . '|' EXCLUSIVE_OR_EXPRESSION

    '|'  shift, and go to state 162

    $default  reduce using rule 75 (LOGICAL_AND_EXPRESSION)


State 228

   77 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION '|' EXCLUSIVE_OR_EXPRESSION .
   79 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . '^' AND_EXPRESSION

    '^'  shift, and go to state 163

    $default  reduce using rule 77 (INCLUSIVE_OR_EXPRESSION)


State 229

   79 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION '^' AND_EXPRESSION .
   81 AND_EXPRESSION: AND_EXPRESSION . '&' EQUALITY_EXPRESSION

    '&'  shift, and go to state 164

    $default  reduce using rule 79 (EXCLUSIVE_OR_EXPRESSION)


State 230

   81 AND_EXPRESSION: AND_EXPRESSION '&' EQUALITY_EXPRESSION .
   83 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQ_OP RELATIONAL_EXPRESSION
   84                    | EQUALITY_EXPRESSION . NE_OP RELATIONAL_EXPRESSION

    EQ_OP  shift, and go to state 165
    NE_OP  shift, and go to state 166

    $default  reduce using rule 81 (AND_EXPRESSION)


State 231

   83 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQ_OP RELATIONAL_EXPRESSION .
   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   88                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   89                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION

    LE_OP  shift, and go to state 167
    GE_OP  shift, and go to state 168
    GT     shift, and go to state 169
    LT     shift, and go to state 170

    $default  reduce using rule 83 (EQUALITY_EXPRESSION)


State 232

   84 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NE_OP RELATIONAL_EXPRESSION .
   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   87                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   88                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   89                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION

    LE_OP  shift, and go to state 167
    GE_OP  shift, and go to state 168
    GT     shift, and go to state 169
    LT     shift, and go to state 170

    $default  reduce using rule 84 (EQUALITY_EXPRESSION)


State 233

   88 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LE_OP SHIFT_EXPRESSION .
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 171
    RIGHT_OP  shift, and go to state 172

    $default  reduce using rule 88 (RELATIONAL_EXPRESSION)


State 234

   89 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GE_OP SHIFT_EXPRESSION .
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 171
    RIGHT_OP  shift, and go to state 172

    $default  reduce using rule 89 (RELATIONAL_EXPRESSION)


State 235

   87 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GT SHIFT_EXPRESSION .
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 171
    RIGHT_OP  shift, and go to state 172

    $default  reduce using rule 87 (RELATIONAL_EXPRESSION)


State 236

   86 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LT SHIFT_EXPRESSION .
   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   92                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION

    LEFT_OP   shift, and go to state 171
    RIGHT_OP  shift, and go to state 172

    $default  reduce using rule 86 (RELATIONAL_EXPRESSION)


State 237

   91 SHIFT_EXPRESSION: SHIFT_EXPRESSION LEFT_OP ADDITIVE_EXPRESSION .
   94 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   95                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION

    PLUS   shift, and go to state 173
    MINUS  shift, and go to state 174

    $default  reduce using rule 91 (SHIFT_EXPRESSION)


State 238

   92 SHIFT_EXPRESSION: SHIFT_EXPRESSION RIGHT_OP ADDITIVE_EXPRESSION .
   94 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   95                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION

    PLUS   shift, and go to state 173
    MINUS  shift, and go to state 174

    $default  reduce using rule 92 (SHIFT_EXPRESSION)


State 239

   94 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS MULTIPLICATIVE_EXPRESSION .
   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   98                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   99                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION

    MULTIPLY  shift, and go to state 175
    MODULO    shift, and go to state 176
    DIVIDE    shift, and go to state 177

    $default  reduce using rule 94 (ADDITIVE_EXPRESSION)


State 240

   95 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS MULTIPLICATIVE_EXPRESSION .
   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   98                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   99                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION

    MULTIPLY  shift, and go to state 175
    MODULO    shift, and go to state 176
    DIVIDE    shift, and go to state 177

    $default  reduce using rule 95 (ADDITIVE_EXPRESSION)


State 241

   97 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLY CAST_EXPRESSION .

    $default  reduce using rule 97 (MULTIPLICATIVE_EXPRESSION)


State 242

   99 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MODULO CAST_EXPRESSION .

    $default  reduce using rule 99 (MULTIPLICATIVE_EXPRESSION)


State 243

   98 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE CAST_EXPRESSION .

    $default  reduce using rule 98 (MULTIPLICATIVE_EXPRESSION)


State 244

   50 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 50 (ASSIGNMENT_EXPRESSION)


State 245

  110 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PTR_OP IDENTIFIER .

    $default  reduce using rule 110 (POSTFIX_EXPRESSION)


State 246

  109 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' IDENTIFIER .

    $default  reduce using rule 109 (POSTFIX_EXPRESSION)


State 247

  107 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ')' .

    $default  reduce using rule 107 (POSTFIX_EXPRESSION)


State 248

  123 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 123 (ARGUMENT_EXPRESSION_LIST)


State 249

  108 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST . ')'
  124 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST . ',' ASSIGNMENT_EXPRESSION

    ','  shift, and go to state 266
    ')'  shift, and go to state 267


State 250

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  106 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION . ']'

    ','  shift, and go to state 157
    ']'  shift, and go to state 268


State 251

  142 COMPOUND_STATEMENT: '{' DECLARATION_LIST STATEMENT_LIST '}' .

    $default  reduce using rule 142 (COMPOUND_STATEMENT)


State 252

  162 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST '}' .

    $default  reduce using rule 162 (STRUCT_OR_UNION_SPECIFIER)


State 253

  177 STRUCT_DECLARATOR: ':' CONSTANT_EXPRESSION .

    $default  reduce using rule 177 (STRUCT_DECLARATOR)


State 254

  178 STRUCT_DECLARATOR: DECLARATOR ':' . CONSTANT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CONSTANT_EXPRESSION        go to state 269
    CONDITIONAL_EXPRESSION     go to state 128
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 255

  175 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST ',' . STRUCT_DECLARATOR

    IDENTIFIER  shift, and go to state 1
    ':'         shift, and go to state 207
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR         go to state 208
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32
    STRUCT_DECLARATOR  go to state 270


State 256

  169 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST ';' .

    $default  reduce using rule 169 (STRUCT_DECLARATION)


State 257

  126 INITIALIZER: '{' INITIALIZER_LIST '}' .

    $default  reduce using rule 126 (INITIALIZER)


State 258

  127 INITIALIZER: '{' INITIALIZER_LIST ',' . '}'
  129 INITIALIZER_LIST: INITIALIZER_LIST ',' . INITIALIZER

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 137
    '}'             shift, and go to state 271
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 138
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    INITIALIZER                go to state 272


State 259

  137 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION ':' STATEMENT .

    $default  reduce using rule 137 (LABELED_STATEMENT)


State 260

  149 SELECTION_STATEMENT: IF '(' EXPRESSION ')' . STATEMENT
  150                    | IF '(' EXPRESSION ')' . STATEMENT ELSE STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 273
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 261

  151 SELECTION_STATEMENT: SWITCH '(' EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 274
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 262

  152 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 275
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 263

  153 ITERATION_STATEMENT: DO STATEMENT WHILE '(' . EXPRESSION ')' ';'

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 276
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 264

  154 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT . ')' STATEMENT
  155                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93
    ')'             shift, and go to state 277

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 278
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 265

   65 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' . CONDITIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    CONDITIONAL_EXPRESSION     go to state 279
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 129
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 266

  124 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 125
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 280
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111


State 267

  108 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')' .

    $default  reduce using rule 108 (POSTFIX_EXPRESSION)


State 268

  106 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION ']' .

    $default  reduce using rule 106 (POSTFIX_EXPRESSION)


State 269

  178 STRUCT_DECLARATOR: DECLARATOR ':' CONSTANT_EXPRESSION .

    $default  reduce using rule 178 (STRUCT_DECLARATOR)


State 270

  175 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST ',' STRUCT_DECLARATOR .

    $default  reduce using rule 175 (STRUCT_DECLARATOR_LIST)


State 271

  127 INITIALIZER: '{' INITIALIZER_LIST ',' '}' .

    $default  reduce using rule 127 (INITIALIZER)


State 272

  129 INITIALIZER_LIST: INITIALIZER_LIST ',' INITIALIZER .

    $default  reduce using rule 129 (INITIALIZER_LIST)


State 273

  149 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT .
  150                    | IF '(' EXPRESSION ')' STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 281

    ELSE      [reduce using rule 149 (SELECTION_STATEMENT)]
    $default  reduce using rule 149 (SELECTION_STATEMENT)


State 274

  151 SELECTION_STATEMENT: SWITCH '(' EXPRESSION ')' STATEMENT .

    $default  reduce using rule 151 (SELECTION_STATEMENT)


State 275

  152 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' STATEMENT .

    $default  reduce using rule 152 (ITERATION_STATEMENT)


State 276

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  153 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION . ')' ';'

    ','  shift, and go to state 157
    ')'  shift, and go to state 282


State 277

  154 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 283
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 278

   52 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  155 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 157
    ')'  shift, and go to state 284


State 279

   65 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' CONDITIONAL_EXPRESSION .

    $default  reduce using rule 65 (CONDITIONAL_EXPRESSION)


State 280

  124 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 124 (ARGUMENT_EXPRESSION_LIST)


State 281

  150 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT ELSE . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 285
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 282

  153 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION ')' . ';'

    ';'  shift, and go to state 286


State 283

  154 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT .

    $default  reduce using rule 154 (ITERATION_STATEMENT)


State 284

  155 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 69
    CONSTANT        shift, and go to state 70
    STRING_LITERAL  shift, and go to state 71
    INC_OP          shift, and go to state 72
    DEC_OP          shift, and go to state 73
    PLUS            shift, and go to state 74
    MINUS           shift, and go to state 75
    MULTIPLY        shift, and go to state 76
    CASE            shift, and go to state 77
    DEFAULT         shift, and go to state 78
    IF              shift, and go to state 79
    SWITCH          shift, and go to state 80
    WHILE           shift, and go to state 81
    DO              shift, and go to state 82
    FOR             shift, and go to state 83
    GOTO            shift, and go to state 84
    CONTINUE        shift, and go to state 85
    BREAK           shift, and go to state 86
    RETURN          shift, and go to state 87
    '&'             shift, and go to state 88
    '~'             shift, and go to state 89
    '!'             shift, and go to state 90
    '{'             shift, and go to state 51
    ';'             shift, and go to state 92
    '('             shift, and go to state 93

    ASSIGNMENT_EXPRESSION      go to state 94
    EXPRESSION                 go to state 95
    CONDITIONAL_EXPRESSION     go to state 96
    LOGICAL_OR_EXPRESSION      go to state 97
    LOGICAL_AND_EXPRESSION     go to state 98
    INCLUSIVE_OR_EXPRESSION    go to state 99
    EXCLUSIVE_OR_EXPRESSION    go to state 100
    AND_EXPRESSION             go to state 101
    EQUALITY_EXPRESSION        go to state 102
    RELATIONAL_EXPRESSION      go to state 103
    SHIFT_EXPRESSION           go to state 104
    ADDITIVE_EXPRESSION        go to state 105
    MULTIPLICATIVE_EXPRESSION  go to state 106
    CAST_EXPRESSION            go to state 107
    UNARY_EXPRESSION           go to state 108
    POSTFIX_EXPRESSION         go to state 109
    PRIMARY_EXPRESSION         go to state 110
    UNARY_OPERATOR             go to state 111
    STATEMENT                  go to state 287
    LABELED_STATEMENT          go to state 113
    COMPOUND_STATEMENT         go to state 114
    EXPRESSION_STATEMENT       go to state 117
    SELECTION_STATEMENT        go to state 118
    ITERATION_STATEMENT        go to state 119
    JUMP_STATEMENT             go to state 120


State 285

  150 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT ELSE STATEMENT .

    $default  reduce using rule 150 (SELECTION_STATEMENT)


State 286

  153 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION ')' ';' .

    $default  reduce using rule 153 (ITERATION_STATEMENT)


State 287

  155 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT .

    $default  reduce using rule 155 (ITERATION_STATEMENT)

Nonterminals useless in grammar

   ENUMERATOR_LIST
   ENUMERATOR
   PARAMETER_TYPE_LIST
   PARAMETER_LIST
   PARAMETER_DECLARATION
   IDENTIFIER_LIST
   TYPE_NAME
   ABSTRACT_DECLARATOR
   DIRECT_ABSTRACT_DECLARATOR


Terminals unused in grammar

   SIZEOF
   ENUM
   ELLIPSIS


Rules useless in grammar

  177 ENUMERATOR_LIST: ENUMERATOR
  178                | ENUMERATOR_LIST ',' ENUMERATOR

  179 ENUMERATOR: IDENTIFIER
  180           | IDENTIFIER '=' CONSTANT_EXPRESSION

  181 PARAMETER_TYPE_LIST: PARAMETER_LIST
  182                    | PARAMETER_LIST ',' ELLIPSIS

  183 PARAMETER_LIST: PARAMETER_DECLARATION
  184               | PARAMETER_LIST ',' PARAMETER_DECLARATION

  185 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR
  186                      | DECLARATION_SPECIFIERS ABSTRACT_DECLARATOR
  187                      | DECLARATION_SPECIFIERS

  188 IDENTIFIER_LIST: IDENTIFIER
  189                | IDENTIFIER_LIST ',' IDENTIFIER

  190 TYPE_NAME: SPECIFIER_QUALIFIER_LIST
  191          | SPECIFIER_QUALIFIER_LIST ABSTRACT_DECLARATOR

  192 ABSTRACT_DECLARATOR: POINTER
  193                    | DIRECT_ABSTRACT_DECLARATOR
  194                    | POINTER DIRECT_ABSTRACT_DECLARATOR

  195 DIRECT_ABSTRACT_DECLARATOR: '(' ABSTRACT_DECLARATOR ')'
  196                           | '[' ']'
  197                           | '[' CONSTANT_EXPRESSION ']'
  198                           | DIRECT_ABSTRACT_DECLARATOR '[' ']'
  199                           | DIRECT_ABSTRACT_DECLARATOR '[' CONSTANT_EXPRESSION ']'
  200                           | '(' ')'
  201                           | '(' PARAMETER_TYPE_LIST ')'
  202                           | DIRECT_ABSTRACT_DECLARATOR '(' ')'
  203                           | DIRECT_ABSTRACT_DECLARATOR '(' PARAMETER_TYPE_LIST ')'


State 0 conflicts: 21 shift/reduce
State 23 conflicts: 22 shift/reduce
State 30 conflicts: 18 shift/reduce
State 31 conflicts: 1 shift/reduce
State 33 conflicts: 21 shift/reduce
State 46 conflicts: 18 shift/reduce, 1 reduce/reduce
State 48 conflicts: 13 shift/reduce
State 49 conflicts: 21 shift/reduce
State 51 conflicts: 22 shift/reduce
State 53 conflicts: 18 shift/reduce
State 56 conflicts: 1 shift/reduce
State 66 conflicts: 18 shift/reduce
State 67 conflicts: 13 shift/reduce
State 68 conflicts: 13 shift/reduce, 4 reduce/reduce
State 69 conflicts: 13 shift/reduce
State 72 conflicts: 13 shift/reduce, 4 reduce/reduce
State 119 conflicts: 21 shift/reduce
State 139 conflicts: 13 shift/reduce
State 271 conflicts: 1 shift/reduce


Grammar

    0 $accept: TRANSLATION_UNIT $end

    1 PRIMARY_EXPRESSION: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | '(' EXPRESSION ')'

    5 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
    6                   | POSTFIX_EXPRESSION '[' EXPRESSION ']'
    7                   | POSTFIX_EXPRESSION '(' ')'
    8                   | POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')'
    9                   | POSTFIX_EXPRESSION '.' IDENTIFIER
   10                   | POSTFIX_EXPRESSION PTR_OP IDENTIFIER
   11                   | POSTFIX_EXPRESSION INC_OP
   12                   | POSTFIX_EXPRESSION DEC_OP

   13 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
   14                         | ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION

   15 UNARY_EXPRESSION: POSTFIX_EXPRESSION
   16                 | INC_OP UNARY_EXPRESSION
   17                 | DEC_OP UNARY_EXPRESSION
   18                 | UNARY_OPERATOR CAST_EXPRESSION

   19 UNARY_OPERATOR: '&'
   20               | MULTIPLY
   21               | PLUS
   22               | MINUS
   23               | '~'
   24               | '!'

   25 CAST_EXPRESSION: UNARY_EXPRESSION

   26 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   27                          | MULTIPLICATIVE_EXPRESSION MULTIPLY CAST_EXPRESSION
   28                          | MULTIPLICATIVE_EXPRESSION DIVIDE CAST_EXPRESSION
   29                          | MULTIPLICATIVE_EXPRESSION MODULO CAST_EXPRESSION

   30 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   31                    | ADDITIVE_EXPRESSION PLUS MULTIPLICATIVE_EXPRESSION
   32                    | ADDITIVE_EXPRESSION MINUS MULTIPLICATIVE_EXPRESSION

   33 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
   34                 | SHIFT_EXPRESSION LEFT_OP ADDITIVE_EXPRESSION
   35                 | SHIFT_EXPRESSION RIGHT_OP ADDITIVE_EXPRESSION

   36 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
   37                      | RELATIONAL_EXPRESSION LT SHIFT_EXPRESSION
   38                      | RELATIONAL_EXPRESSION GT SHIFT_EXPRESSION
   39                      | RELATIONAL_EXPRESSION LE_OP SHIFT_EXPRESSION
   40                      | RELATIONAL_EXPRESSION GE_OP SHIFT_EXPRESSION

   41 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
   42                    | EQUALITY_EXPRESSION EQ_OP RELATIONAL_EXPRESSION
   43                    | EQUALITY_EXPRESSION NE_OP RELATIONAL_EXPRESSION

   44 AND_EXPRESSION: EQUALITY_EXPRESSION
   45               | AND_EXPRESSION '&' EQUALITY_EXPRESSION

   46 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
   47                        | EXCLUSIVE_OR_EXPRESSION '^' AND_EXPRESSION

   48 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
   49                        | INCLUSIVE_OR_EXPRESSION '|' EXCLUSIVE_OR_EXPRESSION

   50 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION
   51                       | LOGICAL_AND_EXPRESSION AND_OP INCLUSIVE_OR_EXPRESSION

   52 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION
   53                      | LOGICAL_OR_EXPRESSION OR_OP LOGICAL_AND_EXPRESSION

   54 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION
   55                       | LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' CONDITIONAL_EXPRESSION

   56 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
   57                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

   58 ASSIGNMENT_OPERATOR: '='
   59                    | MUL_ASSIGN
   60                    | DIV_ASSIGN
   61                    | MOD_ASSIGN
   62                    | ADD_ASSIGN
   63                    | SUB_ASSIGN
   64                    | LEFT_ASSIGN
   65                    | RIGHT_ASSIGN
   66                    | AND_ASSIGN
   67                    | XOR_ASSIGN
   68                    | OR_ASSIGN

   69 EXPRESSION: ASSIGNMENT_EXPRESSION
   70           | EXPRESSION ',' ASSIGNMENT_EXPRESSION

   71 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION

   72 DECLARATION: DECLARATION_SPECIFIERS ';'
   73            | DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST ';'

   74 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIERS
   75                       | DECLARATION_SPECIFIERS STORAGE_CLASS_SPECIFIERS
   76                       | TYPE_SPECIFIER
   77                       | DECLARATION_SPECIFIERS TYPE_SPECIFIER
   78                       | TYPE_QUALIFIER
   79                       | DECLARATION_SPECIFIERS TYPE_QUALIFIER

   80 INIT_DECLARATOR_LIST: INIT_DECLARATOR
   81                     | INIT_DECLARATOR_LIST ',' INIT_DECLARATOR

   82 INIT_DECLARATOR: DECLARATOR
   83                | DECLARATOR '=' INITIALIZER

   84 STORAGE_CLASS_SPECIFIERS: TYPEDEF
   85                         | EXTERN
   86                         | STATIC
   87                         | AUTO
   88                         | REGISTER

   89 TYPE_SPECIFIER: VOID
   90               | CHAR
   91               | SHORT
   92               | INT
   93               | LONG
   94               | FLOAT
   95               | DOUBLE
   96               | SIGNED
   97               | UNSIGNED
   98               | STRUCT_OR_UNION_SPECIFIER
   99               | ENUM_SPECIFIER

  100 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST '}'
  101                          | STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST '}'
  102                          | STRUCT_OR_UNION IDENTIFIER

  103 STRUCT_OR_UNION: STRUCT
  104                | UNION

  105 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION
  106                        | STRUCT_DECLARATION_LIST STRUCT_DECLARATION

  107 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST ';'

  108 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST
  109                         | TYPE_SPECIFIER
  110                         | TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST
  111                         | TYPE_QUALIFIER

  112 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR
  113                       | STRUCT_DECLARATOR_LIST ',' STRUCT_DECLARATOR

  114 STRUCT_DECLARATOR: DECLARATOR
  115                  | ':' CONSTANT_EXPRESSION
  116                  | DECLARATOR ':' CONSTANT_EXPRESSION

  117 ENUM_SPECIFIER: %empty

  118 TYPE_QUALIFIER: CONST
  119               | VOLATILE

  120 DECLARATOR: POINTER DIRECT_DECLARATOR
  121           | DIRECT_DECLARATOR
  122           | '(' DECLARATOR ')'

  123 DIRECT_DECLARATOR: IDENTIFIER
  124                  | DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION ']'
  125                  | DIRECT_DECLARATOR '[' ']'
  126                  | DIRECT_DECLARATOR '(' ')'

  127 POINTER: '*'
  128        | '*' TYPE_QUALIFIER_LIST
  129        | '*' POINTER
  130        | '*' TYPE_QUALIFIER_LIST POINTER

  131 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER
  132                    | TYPE_QUALIFIER_LIST TYPE_QUALIFIER

  133 INITIALIZER: ASSIGNMENT_EXPRESSION
  134            | '{' INITIALIZER_LIST '}'
  135            | '{' INITIALIZER_LIST ',' '}'

  136 INITIALIZER_LIST: INITIALIZER
  137                 | INITIALIZER_LIST ',' INITIALIZER

  138 STATEMENT: LABELED_STATEMENT
  139          | COMPOUND_STATEMENT
  140          | EXPRESSION_STATEMENT
  141          | SELECTION_STATEMENT
  142          | ITERATION_STATEMENT
  143          | JUMP_STATEMENT

  144 LABELED_STATEMENT: IDENTIFIER ':' STATEMENT
  145                  | CASE CONSTANT_EXPRESSION ':' STATEMENT
  146                  | DEFAULT ':' STATEMENT

  147 COMPOUND_STATEMENT: '{' '}'
  148                   | '{' STATEMENT_LIST '}'
  149                   | '{' DECLARATION_LIST '}'
  150                   | '{' DECLARATION_LIST STATEMENT_LIST '}'

  151 DECLARATION_LIST: DECLARATION
  152                 | DECLARATION_LIST DECLARATION

  153 STATEMENT_LIST: STATEMENT
  154               | STATEMENT_LIST STATEMENT

  155 EXPRESSION_STATEMENT: ';'
  156                     | EXPRESSION ';'

  157 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT
  158                    | IF '(' EXPRESSION ')' STATEMENT ELSE STATEMENT
  159                    | SWITCH '(' EXPRESSION ')' STATEMENT

  160 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' STATEMENT
  161                    | DO STATEMENT WHILE '(' EXPRESSION ')' ';'
  162                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  163                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

  164 JUMP_STATEMENT: GOTO IDENTIFIER ';'
  165               | CONTINUE ';'
  166               | BREAK ';'
  167               | RETURN ';'
  168               | RETURN EXPRESSION ';'

  169 TRANSLATION_UNIT: EXTERNAL_DECLARATION
  170                 | TRANSLATION_UNIT EXTERNAL_DECLARATION

  171 EXTERNAL_DECLARATION: FUNCTION_DEFINITION
  172                     | DECLARATION

  173 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
  174                    | DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT
  175                    | DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
  176                    | DECLARATOR COMPOUND_STATEMENT


Terminals, with rules where they appear

$end (0) 0
'!' (33) 24
'&' (38) 19 45
'(' (40) 4 7 8 122 126 157 158 159 160 161 162 163
')' (41) 4 7 8 122 126 157 158 159 160 161 162 163
'*' (42) 127 128 129 130
',' (44) 14 70 81 113 135 137
'.' (46) 9
':' (58) 55 115 116 144 145 146
';' (59) 72 73 107 155 156 161 164 165 166 167 168
'=' (61) 58 83
'?' (63) 55
'[' (91) 6 124 125
']' (93) 6 124 125
'^' (94) 47
'{' (123) 100 101 134 135 147 148 149 150
'|' (124) 49
'}' (125) 100 101 134 135 147 148 149 150
'~' (126) 23
error (256)
IDENTIFIER (258) 1 9 10 100 102 123 144 164
CONSTANT (259) 2
STRING_LITERAL (260) 3
SIZEOF (261)
PTR_OP (262) 10
INC_OP (263) 11 16
DEC_OP (264) 12 17
LEFT_OP (265) 34
RIGHT_OP (266) 35
LE_OP (267) 39
GE_OP (268) 40
EQ_OP (269) 42
NE_OP (270) 43
AND_OP (271) 51
OR_OP (272) 53
MUL_ASSIGN (273) 59
DIV_ASSIGN (274) 60
MOD_ASSIGN (275) 61
ADD_ASSIGN (276) 62
SUB_ASSIGN (277) 63
LEFT_ASSIGN (278) 64
RIGHT_ASSIGN (279) 65
AND_ASSIGN (280) 66
XOR_ASSIGN (281) 67
OR_ASSIGN (282) 68
GT (283) 38
LT (284) 37
PLUS (285) 21 31
MINUS (286) 22 32
MULTIPLY (287) 20 27
MODULO (288) 29
DIVIDE (289) 28
TYPEDEF (290) 84
EXTERN (291) 85
STATIC (292) 86
AUTO (293) 87
REGISTER (294) 88
CHAR (295) 90
SHORT (296) 91
INT (297) 92
LONG (298) 93
SIGNED (299) 96
UNSIGNED (300) 97
FLOAT (301) 94
DOUBLE (302) 95
CONST (303) 118
VOLATILE (304) 119
VOID (305) 89
STRUCT (306) 103
UNION (307) 104
ENUM (308)
ELLIPSIS (309)
CASE (310) 145
DEFAULT (311) 146
IF (312) 157 158
ELSE (313) 158
SWITCH (314) 159
WHILE (315) 160 161
DO (316) 161
FOR (317) 162 163
GOTO (318) 164
CONTINUE (319) 165
BREAK (320) 166
RETURN (321) 167 168


Nonterminals, with rules where they appear

$accept (85)
    on left: 0
PRIMARY_EXPRESSION (86)
    on left: 1 2 3 4, on right: 5
POSTFIX_EXPRESSION (87)
    on left: 5 6 7 8 9 10 11 12, on right: 6 7 8 9 10 11 12 15
ARGUMENT_EXPRESSION_LIST (88)
    on left: 13 14, on right: 8 14
UNARY_EXPRESSION (89)
    on left: 15 16 17 18, on right: 16 17 25 57
UNARY_OPERATOR (90)
    on left: 19 20 21 22 23 24, on right: 18
CAST_EXPRESSION (91)
    on left: 25, on right: 18 26 27 28 29
MULTIPLICATIVE_EXPRESSION (92)
    on left: 26 27 28 29, on right: 27 28 29 30 31 32
ADDITIVE_EXPRESSION (93)
    on left: 30 31 32, on right: 31 32 33 34 35
SHIFT_EXPRESSION (94)
    on left: 33 34 35, on right: 34 35 36 37 38 39 40
RELATIONAL_EXPRESSION (95)
    on left: 36 37 38 39 40, on right: 37 38 39 40 41 42 43
EQUALITY_EXPRESSION (96)
    on left: 41 42 43, on right: 42 43 44 45
AND_EXPRESSION (97)
    on left: 44 45, on right: 45 46 47
EXCLUSIVE_OR_EXPRESSION (98)
    on left: 46 47, on right: 47 48 49
INCLUSIVE_OR_EXPRESSION (99)
    on left: 48 49, on right: 49 50 51
LOGICAL_AND_EXPRESSION (100)
    on left: 50 51, on right: 51 52 53
LOGICAL_OR_EXPRESSION (101)
    on left: 52 53, on right: 53 54 55
CONDITIONAL_EXPRESSION (102)
    on left: 54 55, on right: 55 56 71
ASSIGNMENT_EXPRESSION (103)
    on left: 56 57, on right: 13 14 57 69 70 133
ASSIGNMENT_OPERATOR (104)
    on left: 58 59 60 61 62 63 64 65 66 67 68, on right: 57
EXPRESSION (105)
    on left: 69 70, on right: 4 6 55 70 156 157 158 159 160 161 163
    168
CONSTANT_EXPRESSION (106)
    on left: 71, on right: 115 116 124 145
DECLARATION (107)
    on left: 72 73, on right: 151 152 172
DECLARATION_SPECIFIERS (108)
    on left: 74 75 76 77 78 79, on right: 72 73 75 77 79 173 174
INIT_DECLARATOR_LIST (109)
    on left: 80 81, on right: 73 81
INIT_DECLARATOR (110)
    on left: 82 83, on right: 80 81
STORAGE_CLASS_SPECIFIERS (111)
    on left: 84 85 86 87 88, on right: 74 75
TYPE_SPECIFIER (112)
    on left: 89 90 91 92 93 94 95 96 97 98 99, on right: 76 77 108
    109
STRUCT_OR_UNION_SPECIFIER (113)
    on left: 100 101 102, on right: 98
STRUCT_OR_UNION (114)
    on left: 103 104, on right: 100 101 102
STRUCT_DECLARATION_LIST (115)
    on left: 105 106, on right: 100 101 106
STRUCT_DECLARATION (116)
    on left: 107, on right: 105 106
SPECIFIER_QUALIFIER_LIST (117)
    on left: 108 109 110 111, on right: 107 108 110
STRUCT_DECLARATOR_LIST (118)
    on left: 112 113, on right: 107 113
STRUCT_DECLARATOR (119)
    on left: 114 115 116, on right: 112 113
ENUM_SPECIFIER (120)
    on left: 117, on right: 99
TYPE_QUALIFIER (121)
    on left: 118 119, on right: 78 79 110 111 131 132
DECLARATOR (122)
    on left: 120 121 122, on right: 82 83 114 116 122 173 174 175 176
DIRECT_DECLARATOR (123)
    on left: 123 124 125 126, on right: 120 121 124 125 126
POINTER (124)
    on left: 127 128 129 130, on right: 120 129 130
TYPE_QUALIFIER_LIST (125)
    on left: 131 132, on right: 128 130 132
INITIALIZER (126)
    on left: 133 134 135, on right: 83 136 137
INITIALIZER_LIST (127)
    on left: 136 137, on right: 134 135 137
STATEMENT (128)
    on left: 138 139 140 141 142 143, on right: 144 145 146 153 154
    157 158 159 160 161 162 163
LABELED_STATEMENT (129)
    on left: 144 145 146, on right: 138
COMPOUND_STATEMENT (130)
    on left: 147 148 149 150, on right: 139 173 174 175 176
DECLARATION_LIST (131)
    on left: 151 152, on right: 149 150 152 173 175
STATEMENT_LIST (132)
    on left: 153 154, on right: 148 150 154
EXPRESSION_STATEMENT (133)
    on left: 155 156, on right: 140 162 163
SELECTION_STATEMENT (134)
    on left: 157 158 159, on right: 141
ITERATION_STATEMENT (135)
    on left: 160 161 162 163, on right: 142
JUMP_STATEMENT (136)
    on left: 164 165 166 167 168, on right: 143
TRANSLATION_UNIT (137)
    on left: 169 170, on right: 0 170
EXTERNAL_DECLARATION (138)
    on left: 171 172, on right: 169 170
FUNCTION_DEFINITION (139)
    on left: 173 174 175 176, on right: 171


State 0

    0 $accept: . TRANSLATION_UNIT $end

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 117 (ENUM_SPECIFIER)]
    $default    reduce using rule 117 (ENUM_SPECIFIER)

    DECLARATION                go to state 22
    DECLARATION_SPECIFIERS     go to state 23
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    TRANSLATION_UNIT           go to state 33
    EXTERNAL_DECLARATION       go to state 34
    FUNCTION_DEFINITION        go to state 35


State 1

  123 DIRECT_DECLARATOR: IDENTIFIER .

    $default  reduce using rule 123 (DIRECT_DECLARATOR)


State 2

   84 STORAGE_CLASS_SPECIFIERS: TYPEDEF .

    $default  reduce using rule 84 (STORAGE_CLASS_SPECIFIERS)


State 3

   85 STORAGE_CLASS_SPECIFIERS: EXTERN .

    $default  reduce using rule 85 (STORAGE_CLASS_SPECIFIERS)


State 4

   86 STORAGE_CLASS_SPECIFIERS: STATIC .

    $default  reduce using rule 86 (STORAGE_CLASS_SPECIFIERS)


State 5

   87 STORAGE_CLASS_SPECIFIERS: AUTO .

    $default  reduce using rule 87 (STORAGE_CLASS_SPECIFIERS)


State 6

   88 STORAGE_CLASS_SPECIFIERS: REGISTER .

    $default  reduce using rule 88 (STORAGE_CLASS_SPECIFIERS)


State 7

   90 TYPE_SPECIFIER: CHAR .

    $default  reduce using rule 90 (TYPE_SPECIFIER)


State 8

   91 TYPE_SPECIFIER: SHORT .

    $default  reduce using rule 91 (TYPE_SPECIFIER)


State 9

   92 TYPE_SPECIFIER: INT .

    $default  reduce using rule 92 (TYPE_SPECIFIER)


State 10

   93 TYPE_SPECIFIER: LONG .

    $default  reduce using rule 93 (TYPE_SPECIFIER)


State 11

   96 TYPE_SPECIFIER: SIGNED .

    $default  reduce using rule 96 (TYPE_SPECIFIER)


State 12

   97 TYPE_SPECIFIER: UNSIGNED .

    $default  reduce using rule 97 (TYPE_SPECIFIER)


State 13

   94 TYPE_SPECIFIER: FLOAT .

    $default  reduce using rule 94 (TYPE_SPECIFIER)


State 14

   95 TYPE_SPECIFIER: DOUBLE .

    $default  reduce using rule 95 (TYPE_SPECIFIER)


State 15

  118 TYPE_QUALIFIER: CONST .

    $default  reduce using rule 118 (TYPE_QUALIFIER)


State 16

  119 TYPE_QUALIFIER: VOLATILE .

    $default  reduce using rule 119 (TYPE_QUALIFIER)


State 17

   89 TYPE_SPECIFIER: VOID .

    $default  reduce using rule 89 (TYPE_SPECIFIER)


State 18

  103 STRUCT_OR_UNION: STRUCT .

    $default  reduce using rule 103 (STRUCT_OR_UNION)


State 19

  104 STRUCT_OR_UNION: UNION .

    $default  reduce using rule 104 (STRUCT_OR_UNION)


State 20

  122 DECLARATOR: '(' . DECLARATOR ')'

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    DECLARATOR         go to state 36
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 21

  127 POINTER: '*' .
  128        | '*' . TYPE_QUALIFIER_LIST
  129        | '*' . POINTER
  130        | '*' . TYPE_QUALIFIER_LIST POINTER

    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    '*'       shift, and go to state 21

    $default  reduce using rule 127 (POINTER)

    TYPE_QUALIFIER       go to state 37
    POINTER              go to state 38
    TYPE_QUALIFIER_LIST  go to state 39


State 22

  172 EXTERNAL_DECLARATION: DECLARATION .

    $default  reduce using rule 172 (EXTERNAL_DECLARATION)


State 23

   72 DECLARATION: DECLARATION_SPECIFIERS . ';'
   73            | DECLARATION_SPECIFIERS . INIT_DECLARATOR_LIST ';'
   75 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS . STORAGE_CLASS_SPECIFIERS
   77                       | DECLARATION_SPECIFIERS . TYPE_SPECIFIER
   79                       | DECLARATION_SPECIFIERS . TYPE_QUALIFIER
  173 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS . DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT
  174                    | DECLARATION_SPECIFIERS . DECLARATOR COMPOUND_STATEMENT

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 40
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 117 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 117 (ENUM_SPECIFIER)]

    INIT_DECLARATOR_LIST       go to state 41
    INIT_DECLARATOR            go to state 42
    STORAGE_CLASS_SPECIFIERS   go to state 43
    TYPE_SPECIFIER             go to state 44
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 45
    DECLARATOR                 go to state 46
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32


State 24

   74 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIERS .

    $default  reduce using rule 74 (DECLARATION_SPECIFIERS)


State 25

   76 DECLARATION_SPECIFIERS: TYPE_SPECIFIER .

    $default  reduce using rule 76 (DECLARATION_SPECIFIERS)


State 26

   98 TYPE_SPECIFIER: STRUCT_OR_UNION_SPECIFIER .

    $default  reduce using rule 98 (TYPE_SPECIFIER)


State 27

  100 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION . IDENTIFIER '{' STRUCT_DECLARATION_LIST '}'
  101                          | STRUCT_OR_UNION . '{' STRUCT_DECLARATION_LIST '}'
  102                          | STRUCT_OR_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 47
    '{'         shift, and go to state 48


State 28

   99 TYPE_SPECIFIER: ENUM_SPECIFIER .

    $default  reduce using rule 99 (TYPE_SPECIFIER)


State 29

   78 DECLARATION_SPECIFIERS: TYPE_QUALIFIER .

    $default  reduce using rule 78 (DECLARATION_SPECIFIERS)


State 30

  175 FUNCTION_DEFINITION: DECLARATOR . DECLARATION_LIST COMPOUND_STATEMENT
  176                    | DECLARATOR . COMPOUND_STATEMENT

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    DECLARATION                go to state 50
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 52
    DECLARATION_LIST           go to state 53


State 31

  121 DECLARATOR: DIRECT_DECLARATOR .
  124 DIRECT_DECLARATOR: DIRECT_DECLARATOR . '[' CONSTANT_EXPRESSION ']'
  125                  | DIRECT_DECLARATOR . '[' ']'
  126                  | DIRECT_DECLARATOR . '(' ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    '('       [reduce using rule 121 (DECLARATOR)]
    $default  reduce using rule 121 (DECLARATOR)


State 32

  120 DECLARATOR: POINTER . DIRECT_DECLARATOR

    IDENTIFIER  shift, and go to state 1

    DIRECT_DECLARATOR  go to state 56


State 33

    0 $accept: TRANSLATION_UNIT . $end
  170 TRANSLATION_UNIT: TRANSLATION_UNIT . EXTERNAL_DECLARATION

    $end        shift, and go to state 57
    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 117 (ENUM_SPECIFIER)]
    $default    reduce using rule 117 (ENUM_SPECIFIER)

    DECLARATION                go to state 22
    DECLARATION_SPECIFIERS     go to state 23
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    DECLARATOR                 go to state 30
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32
    EXTERNAL_DECLARATION       go to state 58
    FUNCTION_DEFINITION        go to state 35


State 34

  169 TRANSLATION_UNIT: EXTERNAL_DECLARATION .

    $default  reduce using rule 169 (TRANSLATION_UNIT)


State 35

  171 EXTERNAL_DECLARATION: FUNCTION_DEFINITION .

    $default  reduce using rule 171 (EXTERNAL_DECLARATION)


State 36

  122 DECLARATOR: '(' DECLARATOR . ')'

    ')'  shift, and go to state 59


State 37

  131 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER .

    $default  reduce using rule 131 (TYPE_QUALIFIER_LIST)


State 38

  129 POINTER: '*' POINTER .

    $default  reduce using rule 129 (POINTER)


State 39

  128 POINTER: '*' TYPE_QUALIFIER_LIST .
  130        | '*' TYPE_QUALIFIER_LIST . POINTER
  132 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST . TYPE_QUALIFIER

    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    '*'       shift, and go to state 21

    $default  reduce using rule 128 (POINTER)

    TYPE_QUALIFIER  go to state 60
    POINTER         go to state 61


State 40

   72 DECLARATION: DECLARATION_SPECIFIERS ';' .

    $default  reduce using rule 72 (DECLARATION)


State 41

   73 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST . ';'
   81 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST . ',' INIT_DECLARATOR

    ','  shift, and go to state 62
    ';'  shift, and go to state 63


State 42

   80 INIT_DECLARATOR_LIST: INIT_DECLARATOR .

    $default  reduce using rule 80 (INIT_DECLARATOR_LIST)


State 43

   75 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS STORAGE_CLASS_SPECIFIERS .

    $default  reduce using rule 75 (DECLARATION_SPECIFIERS)


State 44

   77 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS TYPE_SPECIFIER .

    $default  reduce using rule 77 (DECLARATION_SPECIFIERS)


State 45

   79 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS TYPE_QUALIFIER .

    $default  reduce using rule 79 (DECLARATION_SPECIFIERS)


State 46

   82 INIT_DECLARATOR: DECLARATOR .
   83                | DECLARATOR . '=' INITIALIZER
  173 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR . DECLARATION_LIST COMPOUND_STATEMENT
  174                    | DECLARATION_SPECIFIERS DECLARATOR . COMPOUND_STATEMENT

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '='       shift, and go to state 64
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    ','       reduce using rule 82 (INIT_DECLARATOR)
    ';'       reduce using rule 82 (INIT_DECLARATOR)
    ';'       [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    DECLARATION                go to state 50
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 65
    DECLARATION_LIST           go to state 66


State 47

  100 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER . '{' STRUCT_DECLARATION_LIST '}'
  102                          | STRUCT_OR_UNION IDENTIFIER .

    '{'  shift, and go to state 67

    $default  reduce using rule 102 (STRUCT_OR_UNION_SPECIFIER)


State 48

  101 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' . STRUCT_DECLARATION_LIST '}'

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 68
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    STRUCT_DECLARATION_LIST    go to state 69
    STRUCT_DECLARATION         go to state 70
    SPECIFIER_QUALIFIER_LIST   go to state 71
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 72


State 49

  147 COMPOUND_STATEMENT: '{' . '}'
  148                   | '{' . STATEMENT_LIST '}'
  149                   | '{' . DECLARATION_LIST '}'
  150                   | '{' . DECLARATION_LIST STATEMENT_LIST '}'

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    TYPEDEF         shift, and go to state 2
    EXTERN          shift, and go to state 3
    STATIC          shift, and go to state 4
    AUTO            shift, and go to state 5
    REGISTER        shift, and go to state 6
    CHAR            shift, and go to state 7
    SHORT           shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    CONST           shift, and go to state 15
    VOLATILE        shift, and go to state 16
    VOID            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '}'             shift, and go to state 95
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 117 (ENUM_SPECIFIER)]
    $default    reduce using rule 117 (ENUM_SPECIFIER)

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    DECLARATION                go to state 50
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    STATEMENT                  go to state 116
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    DECLARATION_LIST           go to state 119
    STATEMENT_LIST             go to state 120
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 50

  151 DECLARATION_LIST: DECLARATION .

    $default  reduce using rule 151 (DECLARATION_LIST)


State 51

   72 DECLARATION: DECLARATION_SPECIFIERS . ';'
   73            | DECLARATION_SPECIFIERS . INIT_DECLARATOR_LIST ';'
   75 DECLARATION_SPECIFIERS: DECLARATION_SPECIFIERS . STORAGE_CLASS_SPECIFIERS
   77                       | DECLARATION_SPECIFIERS . TYPE_SPECIFIER
   79                       | DECLARATION_SPECIFIERS . TYPE_QUALIFIER

    IDENTIFIER  shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    EXTERN      shift, and go to state 3
    STATIC      shift, and go to state 4
    AUTO        shift, and go to state 5
    REGISTER    shift, and go to state 6
    CHAR        shift, and go to state 7
    SHORT       shift, and go to state 8
    INT         shift, and go to state 9
    LONG        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 12
    FLOAT       shift, and go to state 13
    DOUBLE      shift, and go to state 14
    CONST       shift, and go to state 15
    VOLATILE    shift, and go to state 16
    VOID        shift, and go to state 17
    STRUCT      shift, and go to state 18
    UNION       shift, and go to state 19
    '('         shift, and go to state 20
    ';'         shift, and go to state 40
    '*'         shift, and go to state 21

    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 117 (ENUM_SPECIFIER)]
    '*'         [reduce using rule 117 (ENUM_SPECIFIER)]

    INIT_DECLARATOR_LIST       go to state 41
    INIT_DECLARATOR            go to state 42
    STORAGE_CLASS_SPECIFIERS   go to state 43
    TYPE_SPECIFIER             go to state 44
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 45
    DECLARATOR                 go to state 125
    DIRECT_DECLARATOR          go to state 31
    POINTER                    go to state 32


State 52

  176 FUNCTION_DEFINITION: DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 176 (FUNCTION_DEFINITION)


State 53

  152 DECLARATION_LIST: DECLARATION_LIST . DECLARATION
  175 FUNCTION_DEFINITION: DECLARATOR DECLARATION_LIST . COMPOUND_STATEMENT

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    DECLARATION                go to state 126
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 127


State 54

  126 DIRECT_DECLARATOR: DIRECT_DECLARATOR '(' . ')'

    ')'  shift, and go to state 128


State 55

  124 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' . CONSTANT_EXPRESSION ']'
  125                  | DIRECT_DECLARATOR '[' . ']'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96
    ']'             shift, and go to state 130

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 132
    CONSTANT_EXPRESSION        go to state 133


State 56

  120 DECLARATOR: POINTER DIRECT_DECLARATOR .
  124 DIRECT_DECLARATOR: DIRECT_DECLARATOR . '[' CONSTANT_EXPRESSION ']'
  125                  | DIRECT_DECLARATOR . '[' ']'
  126                  | DIRECT_DECLARATOR . '(' ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    '('       [reduce using rule 120 (DECLARATOR)]
    $default  reduce using rule 120 (DECLARATOR)


State 57

    0 $accept: TRANSLATION_UNIT $end .

    $default  accept


State 58

  170 TRANSLATION_UNIT: TRANSLATION_UNIT EXTERNAL_DECLARATION .

    $default  reduce using rule 170 (TRANSLATION_UNIT)


State 59

  122 DECLARATOR: '(' DECLARATOR ')' .

    $default  reduce using rule 122 (DECLARATOR)


State 60

  132 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST TYPE_QUALIFIER .

    $default  reduce using rule 132 (TYPE_QUALIFIER_LIST)


State 61

  130 POINTER: '*' TYPE_QUALIFIER_LIST POINTER .

    $default  reduce using rule 130 (POINTER)


State 62

   81 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST ',' . INIT_DECLARATOR

    IDENTIFIER  shift, and go to state 1
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    INIT_DECLARATOR    go to state 134
    DECLARATOR         go to state 125
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 63

   73 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST ';' .

    $default  reduce using rule 73 (DECLARATION)


State 64

   83 INIT_DECLARATOR: DECLARATOR '=' . INITIALIZER

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 135
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 136
    INITIALIZER                go to state 137


State 65

  174 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR COMPOUND_STATEMENT .

    $default  reduce using rule 174 (FUNCTION_DEFINITION)


State 66

  152 DECLARATION_LIST: DECLARATION_LIST . DECLARATION
  173 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST . COMPOUND_STATEMENT

    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    STATIC    shift, and go to state 4
    AUTO      shift, and go to state 5
    REGISTER  shift, and go to state 6
    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '{'       shift, and go to state 49

    TYPEDEF   [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN    [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC    [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO      [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER  [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    DECLARATION                go to state 126
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    COMPOUND_STATEMENT         go to state 138


State 67

  100 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' . STRUCT_DECLARATION_LIST '}'

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 68
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    STRUCT_DECLARATION_LIST    go to state 139
    STRUCT_DECLARATION         go to state 70
    SPECIFIER_QUALIFIER_LIST   go to state 71
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 72


State 68

  108 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER . SPECIFIER_QUALIFIER_LIST
  109                         | TYPE_SPECIFIER .

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    IDENTIFIER  reduce using rule 109 (SPECIFIER_QUALIFIER_LIST)
    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    ':'         reduce using rule 109 (SPECIFIER_QUALIFIER_LIST)
    ':'         [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         reduce using rule 109 (SPECIFIER_QUALIFIER_LIST)
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    '*'         reduce using rule 109 (SPECIFIER_QUALIFIER_LIST)
    '*'         [reduce using rule 117 (ENUM_SPECIFIER)]
    $default    reduce using rule 109 (SPECIFIER_QUALIFIER_LIST)

    TYPE_SPECIFIER             go to state 68
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    SPECIFIER_QUALIFIER_LIST   go to state 140
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 72


State 69

  101 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST . '}'
  106 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST . STRUCT_DECLARATION

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '}'       shift, and go to state 141

    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 68
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    STRUCT_DECLARATION         go to state 142
    SPECIFIER_QUALIFIER_LIST   go to state 71
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 72


State 70

  105 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION .

    $default  reduce using rule 105 (STRUCT_DECLARATION_LIST)


State 71

  107 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST . STRUCT_DECLARATOR_LIST ';'

    IDENTIFIER  shift, and go to state 1
    ':'         shift, and go to state 143
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    STRUCT_DECLARATOR_LIST  go to state 144
    STRUCT_DECLARATOR       go to state 145
    DECLARATOR              go to state 146
    DIRECT_DECLARATOR       go to state 31
    POINTER                 go to state 32


State 72

  110 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER . SPECIFIER_QUALIFIER_LIST
  111                         | TYPE_QUALIFIER .

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19

    IDENTIFIER  reduce using rule 111 (SPECIFIER_QUALIFIER_LIST)
    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    ':'         reduce using rule 111 (SPECIFIER_QUALIFIER_LIST)
    ':'         [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         reduce using rule 111 (SPECIFIER_QUALIFIER_LIST)
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    '*'         reduce using rule 111 (SPECIFIER_QUALIFIER_LIST)
    '*'         [reduce using rule 117 (ENUM_SPECIFIER)]
    $default    reduce using rule 111 (SPECIFIER_QUALIFIER_LIST)

    TYPE_SPECIFIER             go to state 68
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    SPECIFIER_QUALIFIER_LIST   go to state 147
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 72


State 73

    1 PRIMARY_EXPRESSION: IDENTIFIER .
  144 LABELED_STATEMENT: IDENTIFIER . ':' STATEMENT

    ':'  shift, and go to state 148

    $default  reduce using rule 1 (PRIMARY_EXPRESSION)


State 74

    2 PRIMARY_EXPRESSION: CONSTANT .

    $default  reduce using rule 2 (PRIMARY_EXPRESSION)


State 75

    3 PRIMARY_EXPRESSION: STRING_LITERAL .

    $default  reduce using rule 3 (PRIMARY_EXPRESSION)


State 76

   16 UNARY_EXPRESSION: INC_OP . UNARY_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 149
    UNARY_OPERATOR      go to state 101


State 77

   17 UNARY_EXPRESSION: DEC_OP . UNARY_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 150
    UNARY_OPERATOR      go to state 101


State 78

   21 UNARY_OPERATOR: PLUS .

    $default  reduce using rule 21 (UNARY_OPERATOR)


State 79

   22 UNARY_OPERATOR: MINUS .

    $default  reduce using rule 22 (UNARY_OPERATOR)


State 80

   20 UNARY_OPERATOR: MULTIPLY .

    $default  reduce using rule 20 (UNARY_OPERATOR)


State 81

  145 LABELED_STATEMENT: CASE . CONSTANT_EXPRESSION ':' STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 132
    CONSTANT_EXPRESSION        go to state 151


State 82

  146 LABELED_STATEMENT: DEFAULT . ':' STATEMENT

    ':'  shift, and go to state 152


State 83

  157 SELECTION_STATEMENT: IF . '(' EXPRESSION ')' STATEMENT
  158                    | IF . '(' EXPRESSION ')' STATEMENT ELSE STATEMENT

    '('  shift, and go to state 153


State 84

  159 SELECTION_STATEMENT: SWITCH . '(' EXPRESSION ')' STATEMENT

    '('  shift, and go to state 154


State 85

  160 ITERATION_STATEMENT: WHILE . '(' EXPRESSION ')' STATEMENT

    '('  shift, and go to state 155


State 86

  161 ITERATION_STATEMENT: DO . STATEMENT WHILE '(' EXPRESSION ')' ';'

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 156
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 87

  162 ITERATION_STATEMENT: FOR . '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  163                    | FOR . '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    '('  shift, and go to state 157


State 88

  164 JUMP_STATEMENT: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 158


State 89

  165 JUMP_STATEMENT: CONTINUE . ';'

    ';'  shift, and go to state 159


State 90

  166 JUMP_STATEMENT: BREAK . ';'

    ';'  shift, and go to state 160


State 91

  167 JUMP_STATEMENT: RETURN . ';'
  168               | RETURN . EXPRESSION ';'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96
    ';'             shift, and go to state 161

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 162


State 92

   19 UNARY_OPERATOR: '&' .

    $default  reduce using rule 19 (UNARY_OPERATOR)


State 93

   23 UNARY_OPERATOR: '~' .

    $default  reduce using rule 23 (UNARY_OPERATOR)


State 94

   24 UNARY_OPERATOR: '!' .

    $default  reduce using rule 24 (UNARY_OPERATOR)


State 95

  147 COMPOUND_STATEMENT: '{' '}' .

    $default  reduce using rule 147 (COMPOUND_STATEMENT)


State 96

    4 PRIMARY_EXPRESSION: '(' . EXPRESSION ')'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 163


State 97

  155 EXPRESSION_STATEMENT: ';' .

    $default  reduce using rule 155 (EXPRESSION_STATEMENT)


State 98

    5 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION .

    $default  reduce using rule 5 (POSTFIX_EXPRESSION)


State 99

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION . '[' EXPRESSION ']'
    7                   | POSTFIX_EXPRESSION . '(' ')'
    8                   | POSTFIX_EXPRESSION . '(' ARGUMENT_EXPRESSION_LIST ')'
    9                   | POSTFIX_EXPRESSION . '.' IDENTIFIER
   10                   | POSTFIX_EXPRESSION . PTR_OP IDENTIFIER
   11                   | POSTFIX_EXPRESSION . INC_OP
   12                   | POSTFIX_EXPRESSION . DEC_OP
   15 UNARY_EXPRESSION: POSTFIX_EXPRESSION .

    PTR_OP  shift, and go to state 164
    INC_OP  shift, and go to state 165
    DEC_OP  shift, and go to state 166
    '.'     shift, and go to state 167
    '('     shift, and go to state 168
    '['     shift, and go to state 169

    $default  reduce using rule 15 (UNARY_EXPRESSION)


State 100

   25 CAST_EXPRESSION: UNARY_EXPRESSION .
   57 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION . ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    MUL_ASSIGN    shift, and go to state 170
    DIV_ASSIGN    shift, and go to state 171
    MOD_ASSIGN    shift, and go to state 172
    ADD_ASSIGN    shift, and go to state 173
    SUB_ASSIGN    shift, and go to state 174
    LEFT_ASSIGN   shift, and go to state 175
    RIGHT_ASSIGN  shift, and go to state 176
    AND_ASSIGN    shift, and go to state 177
    XOR_ASSIGN    shift, and go to state 178
    OR_ASSIGN     shift, and go to state 179
    '='           shift, and go to state 180

    $default  reduce using rule 25 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 181


State 101

   18 UNARY_EXPRESSION: UNARY_OPERATOR . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 131
    UNARY_OPERATOR      go to state 101
    CAST_EXPRESSION     go to state 182


State 102

   26 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION .

    $default  reduce using rule 26 (MULTIPLICATIVE_EXPRESSION)


State 103

   27 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   28                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   29                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION
   30 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION .

    MULTIPLY  shift, and go to state 183
    MODULO    shift, and go to state 184
    DIVIDE    shift, and go to state 185

    $default  reduce using rule 30 (ADDITIVE_EXPRESSION)


State 104

   31 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   32                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION
   33 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION .

    PLUS   shift, and go to state 186
    MINUS  shift, and go to state 187

    $default  reduce using rule 33 (SHIFT_EXPRESSION)


State 105

   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   35                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION
   36 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION .

    LEFT_OP   shift, and go to state 188
    RIGHT_OP  shift, and go to state 189

    $default  reduce using rule 36 (RELATIONAL_EXPRESSION)


State 106

   37 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   38                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   39                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   40                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION
   41 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION .

    LE_OP  shift, and go to state 190
    GE_OP  shift, and go to state 191
    GT     shift, and go to state 192
    LT     shift, and go to state 193

    $default  reduce using rule 41 (EQUALITY_EXPRESSION)


State 107

   42 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQ_OP RELATIONAL_EXPRESSION
   43                    | EQUALITY_EXPRESSION . NE_OP RELATIONAL_EXPRESSION
   44 AND_EXPRESSION: EQUALITY_EXPRESSION .

    EQ_OP  shift, and go to state 194
    NE_OP  shift, and go to state 195

    $default  reduce using rule 44 (AND_EXPRESSION)


State 108

   45 AND_EXPRESSION: AND_EXPRESSION . '&' EQUALITY_EXPRESSION
   46 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION .

    '&'  shift, and go to state 196

    $default  reduce using rule 46 (EXCLUSIVE_OR_EXPRESSION)


State 109

   47 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . '^' AND_EXPRESSION
   48 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION .

    '^'  shift, and go to state 197

    $default  reduce using rule 48 (INCLUSIVE_OR_EXPRESSION)


State 110

   49 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . '|' EXCLUSIVE_OR_EXPRESSION
   50 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION .

    '|'  shift, and go to state 198

    $default  reduce using rule 50 (LOGICAL_AND_EXPRESSION)


State 111

   51 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . AND_OP INCLUSIVE_OR_EXPRESSION
   52 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION .

    AND_OP  shift, and go to state 199

    $default  reduce using rule 52 (LOGICAL_OR_EXPRESSION)


State 112

   53 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION . OR_OP LOGICAL_AND_EXPRESSION
   54 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION .
   55                       | LOGICAL_OR_EXPRESSION . '?' EXPRESSION ':' CONDITIONAL_EXPRESSION

    OR_OP  shift, and go to state 200
    '?'    shift, and go to state 201

    $default  reduce using rule 54 (CONDITIONAL_EXPRESSION)


State 113

   56 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 56 (ASSIGNMENT_EXPRESSION)


State 114

   69 EXPRESSION: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 69 (EXPRESSION)


State 115

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  156 EXPRESSION_STATEMENT: EXPRESSION . ';'

    ','  shift, and go to state 202
    ';'  shift, and go to state 203


State 116

  153 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 153 (STATEMENT_LIST)


State 117

  138 STATEMENT: LABELED_STATEMENT .

    $default  reduce using rule 138 (STATEMENT)


State 118

  139 STATEMENT: COMPOUND_STATEMENT .

    $default  reduce using rule 139 (STATEMENT)


State 119

  149 COMPOUND_STATEMENT: '{' DECLARATION_LIST . '}'
  150                   | '{' DECLARATION_LIST . STATEMENT_LIST '}'
  152 DECLARATION_LIST: DECLARATION_LIST . DECLARATION

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    TYPEDEF         shift, and go to state 2
    EXTERN          shift, and go to state 3
    STATIC          shift, and go to state 4
    AUTO            shift, and go to state 5
    REGISTER        shift, and go to state 6
    CHAR            shift, and go to state 7
    SHORT           shift, and go to state 8
    INT             shift, and go to state 9
    LONG            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 12
    FLOAT           shift, and go to state 13
    DOUBLE          shift, and go to state 14
    CONST           shift, and go to state 15
    VOLATILE        shift, and go to state 16
    VOID            shift, and go to state 17
    STRUCT          shift, and go to state 18
    UNION           shift, and go to state 19
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '}'             shift, and go to state 204
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    IDENTIFIER  [reduce using rule 117 (ENUM_SPECIFIER)]
    TYPEDEF     [reduce using rule 117 (ENUM_SPECIFIER)]
    EXTERN      [reduce using rule 117 (ENUM_SPECIFIER)]
    STATIC      [reduce using rule 117 (ENUM_SPECIFIER)]
    AUTO        [reduce using rule 117 (ENUM_SPECIFIER)]
    REGISTER    [reduce using rule 117 (ENUM_SPECIFIER)]
    CHAR        [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT       [reduce using rule 117 (ENUM_SPECIFIER)]
    INT         [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG        [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT       [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE      [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST       [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE    [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID        [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT      [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION       [reduce using rule 117 (ENUM_SPECIFIER)]
    '('         [reduce using rule 117 (ENUM_SPECIFIER)]
    ';'         [reduce using rule 117 (ENUM_SPECIFIER)]
    $default    reduce using rule 117 (ENUM_SPECIFIER)

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    DECLARATION                go to state 126
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIERS   go to state 24
    TYPE_SPECIFIER             go to state 25
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 29
    STATEMENT                  go to state 116
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    STATEMENT_LIST             go to state 205
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 120

  148 COMPOUND_STATEMENT: '{' STATEMENT_LIST . '}'
  154 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '}'             shift, and go to state 206
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 207
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 121

  140 STATEMENT: EXPRESSION_STATEMENT .

    $default  reduce using rule 140 (STATEMENT)


State 122

  141 STATEMENT: SELECTION_STATEMENT .

    $default  reduce using rule 141 (STATEMENT)


State 123

  142 STATEMENT: ITERATION_STATEMENT .

    $default  reduce using rule 142 (STATEMENT)


State 124

  143 STATEMENT: JUMP_STATEMENT .

    $default  reduce using rule 143 (STATEMENT)


State 125

   82 INIT_DECLARATOR: DECLARATOR .
   83                | DECLARATOR . '=' INITIALIZER

    '='  shift, and go to state 64

    $default  reduce using rule 82 (INIT_DECLARATOR)


State 126

  152 DECLARATION_LIST: DECLARATION_LIST DECLARATION .

    $default  reduce using rule 152 (DECLARATION_LIST)


State 127

  175 FUNCTION_DEFINITION: DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT .

    $default  reduce using rule 175 (FUNCTION_DEFINITION)


State 128

  126 DIRECT_DECLARATOR: DIRECT_DECLARATOR '(' ')' .

    $default  reduce using rule 126 (DIRECT_DECLARATOR)


State 129

    1 PRIMARY_EXPRESSION: IDENTIFIER .

    $default  reduce using rule 1 (PRIMARY_EXPRESSION)


State 130

  125 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' ']' .

    $default  reduce using rule 125 (DIRECT_DECLARATOR)


State 131

   25 CAST_EXPRESSION: UNARY_EXPRESSION .

    $default  reduce using rule 25 (CAST_EXPRESSION)


State 132

   71 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION .

    $default  reduce using rule 71 (CONSTANT_EXPRESSION)


State 133

  124 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION . ']'

    ']'  shift, and go to state 208


State 134

   81 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST ',' INIT_DECLARATOR .

    $default  reduce using rule 81 (INIT_DECLARATOR_LIST)


State 135

  134 INITIALIZER: '{' . INITIALIZER_LIST '}'
  135            | '{' . INITIALIZER_LIST ',' '}'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 135
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 136
    INITIALIZER                go to state 209
    INITIALIZER_LIST           go to state 210


State 136

  133 INITIALIZER: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 133 (INITIALIZER)


State 137

   83 INIT_DECLARATOR: DECLARATOR '=' INITIALIZER .

    $default  reduce using rule 83 (INIT_DECLARATOR)


State 138

  173 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST COMPOUND_STATEMENT .

    $default  reduce using rule 173 (FUNCTION_DEFINITION)


State 139

  100 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST . '}'
  106 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST . STRUCT_DECLARATION

    CHAR      shift, and go to state 7
    SHORT     shift, and go to state 8
    INT       shift, and go to state 9
    LONG      shift, and go to state 10
    SIGNED    shift, and go to state 11
    UNSIGNED  shift, and go to state 12
    FLOAT     shift, and go to state 13
    DOUBLE    shift, and go to state 14
    CONST     shift, and go to state 15
    VOLATILE  shift, and go to state 16
    VOID      shift, and go to state 17
    STRUCT    shift, and go to state 18
    UNION     shift, and go to state 19
    '}'       shift, and go to state 211

    CHAR      [reduce using rule 117 (ENUM_SPECIFIER)]
    SHORT     [reduce using rule 117 (ENUM_SPECIFIER)]
    INT       [reduce using rule 117 (ENUM_SPECIFIER)]
    LONG      [reduce using rule 117 (ENUM_SPECIFIER)]
    SIGNED    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNSIGNED  [reduce using rule 117 (ENUM_SPECIFIER)]
    FLOAT     [reduce using rule 117 (ENUM_SPECIFIER)]
    DOUBLE    [reduce using rule 117 (ENUM_SPECIFIER)]
    CONST     [reduce using rule 117 (ENUM_SPECIFIER)]
    VOLATILE  [reduce using rule 117 (ENUM_SPECIFIER)]
    VOID      [reduce using rule 117 (ENUM_SPECIFIER)]
    STRUCT    [reduce using rule 117 (ENUM_SPECIFIER)]
    UNION     [reduce using rule 117 (ENUM_SPECIFIER)]
    $default  reduce using rule 117 (ENUM_SPECIFIER)

    TYPE_SPECIFIER             go to state 68
    STRUCT_OR_UNION_SPECIFIER  go to state 26
    STRUCT_OR_UNION            go to state 27
    STRUCT_DECLARATION         go to state 142
    SPECIFIER_QUALIFIER_LIST   go to state 71
    ENUM_SPECIFIER             go to state 28
    TYPE_QUALIFIER             go to state 72


State 140

  108 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST .

    $default  reduce using rule 108 (SPECIFIER_QUALIFIER_LIST)


State 141

  101 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION '{' STRUCT_DECLARATION_LIST '}' .

    $default  reduce using rule 101 (STRUCT_OR_UNION_SPECIFIER)


State 142

  106 STRUCT_DECLARATION_LIST: STRUCT_DECLARATION_LIST STRUCT_DECLARATION .

    $default  reduce using rule 106 (STRUCT_DECLARATION_LIST)


State 143

  115 STRUCT_DECLARATOR: ':' . CONSTANT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 132
    CONSTANT_EXPRESSION        go to state 212


State 144

  107 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST . ';'
  113 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST . ',' STRUCT_DECLARATOR

    ','  shift, and go to state 213
    ';'  shift, and go to state 214


State 145

  112 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR .

    $default  reduce using rule 112 (STRUCT_DECLARATOR_LIST)


State 146

  114 STRUCT_DECLARATOR: DECLARATOR .
  116                  | DECLARATOR . ':' CONSTANT_EXPRESSION

    ':'  shift, and go to state 215

    $default  reduce using rule 114 (STRUCT_DECLARATOR)


State 147

  110 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST .

    $default  reduce using rule 110 (SPECIFIER_QUALIFIER_LIST)


State 148

  144 LABELED_STATEMENT: IDENTIFIER ':' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 216
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 149

   16 UNARY_EXPRESSION: INC_OP UNARY_EXPRESSION .

    $default  reduce using rule 16 (UNARY_EXPRESSION)


State 150

   17 UNARY_EXPRESSION: DEC_OP UNARY_EXPRESSION .

    $default  reduce using rule 17 (UNARY_EXPRESSION)


State 151

  145 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION . ':' STATEMENT

    ':'  shift, and go to state 217


State 152

  146 LABELED_STATEMENT: DEFAULT ':' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 218
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 153

  157 SELECTION_STATEMENT: IF '(' . EXPRESSION ')' STATEMENT
  158                    | IF '(' . EXPRESSION ')' STATEMENT ELSE STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 219


State 154

  159 SELECTION_STATEMENT: SWITCH '(' . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 220


State 155

  160 ITERATION_STATEMENT: WHILE '(' . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 221


State 156

  161 ITERATION_STATEMENT: DO STATEMENT . WHILE '(' EXPRESSION ')' ';'

    WHILE  shift, and go to state 222


State 157

  162 ITERATION_STATEMENT: FOR '(' . EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT
  163                    | FOR '(' . EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    EXPRESSION_STATEMENT       go to state 223


State 158

  164 JUMP_STATEMENT: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 224


State 159

  165 JUMP_STATEMENT: CONTINUE ';' .

    $default  reduce using rule 165 (JUMP_STATEMENT)


State 160

  166 JUMP_STATEMENT: BREAK ';' .

    $default  reduce using rule 166 (JUMP_STATEMENT)


State 161

  167 JUMP_STATEMENT: RETURN ';' .

    $default  reduce using rule 167 (JUMP_STATEMENT)


State 162

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  168 JUMP_STATEMENT: RETURN EXPRESSION . ';'

    ','  shift, and go to state 202
    ';'  shift, and go to state 225


State 163

    4 PRIMARY_EXPRESSION: '(' EXPRESSION . ')'
   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION

    ','  shift, and go to state 202
    ')'  shift, and go to state 226


State 164

   10 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PTR_OP . IDENTIFIER

    IDENTIFIER  shift, and go to state 227


State 165

   11 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION INC_OP .

    $default  reduce using rule 11 (POSTFIX_EXPRESSION)


State 166

   12 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION DEC_OP .

    $default  reduce using rule 12 (POSTFIX_EXPRESSION)


State 167

    9 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 168

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' . ')'
    8                   | POSTFIX_EXPRESSION '(' . ARGUMENT_EXPRESSION_LIST ')'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96
    ')'             shift, and go to state 229

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    ARGUMENT_EXPRESSION_LIST   go to state 230
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 231


State 169

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' . EXPRESSION ']'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 232


State 170

   59 ASSIGNMENT_OPERATOR: MUL_ASSIGN .

    $default  reduce using rule 59 (ASSIGNMENT_OPERATOR)


State 171

   60 ASSIGNMENT_OPERATOR: DIV_ASSIGN .

    $default  reduce using rule 60 (ASSIGNMENT_OPERATOR)


State 172

   61 ASSIGNMENT_OPERATOR: MOD_ASSIGN .

    $default  reduce using rule 61 (ASSIGNMENT_OPERATOR)


State 173

   62 ASSIGNMENT_OPERATOR: ADD_ASSIGN .

    $default  reduce using rule 62 (ASSIGNMENT_OPERATOR)


State 174

   63 ASSIGNMENT_OPERATOR: SUB_ASSIGN .

    $default  reduce using rule 63 (ASSIGNMENT_OPERATOR)


State 175

   64 ASSIGNMENT_OPERATOR: LEFT_ASSIGN .

    $default  reduce using rule 64 (ASSIGNMENT_OPERATOR)


State 176

   65 ASSIGNMENT_OPERATOR: RIGHT_ASSIGN .

    $default  reduce using rule 65 (ASSIGNMENT_OPERATOR)


State 177

   66 ASSIGNMENT_OPERATOR: AND_ASSIGN .

    $default  reduce using rule 66 (ASSIGNMENT_OPERATOR)


State 178

   67 ASSIGNMENT_OPERATOR: XOR_ASSIGN .

    $default  reduce using rule 67 (ASSIGNMENT_OPERATOR)


State 179

   68 ASSIGNMENT_OPERATOR: OR_ASSIGN .

    $default  reduce using rule 68 (ASSIGNMENT_OPERATOR)


State 180

   58 ASSIGNMENT_OPERATOR: '=' .

    $default  reduce using rule 58 (ASSIGNMENT_OPERATOR)


State 181

   57 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 233


State 182

   18 UNARY_EXPRESSION: UNARY_OPERATOR CAST_EXPRESSION .

    $default  reduce using rule 18 (UNARY_EXPRESSION)


State 183

   27 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLY . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 131
    UNARY_OPERATOR      go to state 101
    CAST_EXPRESSION     go to state 234


State 184

   29 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MODULO . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 131
    UNARY_OPERATOR      go to state 101
    CAST_EXPRESSION     go to state 235


State 185

   28 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE . CAST_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION  go to state 98
    POSTFIX_EXPRESSION  go to state 99
    UNARY_EXPRESSION    go to state 131
    UNARY_OPERATOR      go to state 101
    CAST_EXPRESSION     go to state 236


State 186

   31 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS . MULTIPLICATIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 237


State 187

   32 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS . MULTIPLICATIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 238


State 188

   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION LEFT_OP . ADDITIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 239


State 189

   35 SHIFT_EXPRESSION: SHIFT_EXPRESSION RIGHT_OP . ADDITIVE_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 240


State 190

   39 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LE_OP . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 241


State 191

   40 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GE_OP . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 242


State 192

   38 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GT . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 243


State 193

   37 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LT . SHIFT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 244


State 194

   42 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQ_OP . RELATIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 245


State 195

   43 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NE_OP . RELATIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 246


State 196

   45 AND_EXPRESSION: AND_EXPRESSION '&' . EQUALITY_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 247


State 197

   47 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION '^' . AND_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 248


State 198

   49 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION '|' . EXCLUSIVE_OR_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 249


State 199

   51 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION AND_OP . INCLUSIVE_OR_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 250


State 200

   53 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION OR_OP . LOGICAL_AND_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 251


State 201

   55 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' . EXPRESSION ':' CONDITIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 252


State 202

   70 EXPRESSION: EXPRESSION ',' . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 253


State 203

  156 EXPRESSION_STATEMENT: EXPRESSION ';' .

    $default  reduce using rule 156 (EXPRESSION_STATEMENT)


State 204

  149 COMPOUND_STATEMENT: '{' DECLARATION_LIST '}' .

    $default  reduce using rule 149 (COMPOUND_STATEMENT)


State 205

  150 COMPOUND_STATEMENT: '{' DECLARATION_LIST STATEMENT_LIST . '}'
  154 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '}'             shift, and go to state 254
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 207
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 206

  148 COMPOUND_STATEMENT: '{' STATEMENT_LIST '}' .

    $default  reduce using rule 148 (COMPOUND_STATEMENT)


State 207

  154 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 154 (STATEMENT_LIST)


State 208

  124 DIRECT_DECLARATOR: DIRECT_DECLARATOR '[' CONSTANT_EXPRESSION ']' .

    $default  reduce using rule 124 (DIRECT_DECLARATOR)


State 209

  136 INITIALIZER_LIST: INITIALIZER .

    $default  reduce using rule 136 (INITIALIZER_LIST)


State 210

  134 INITIALIZER: '{' INITIALIZER_LIST . '}'
  135            | '{' INITIALIZER_LIST . ',' '}'
  137 INITIALIZER_LIST: INITIALIZER_LIST . ',' INITIALIZER

    '}'  shift, and go to state 255
    ','  shift, and go to state 256


State 211

  100 STRUCT_OR_UNION_SPECIFIER: STRUCT_OR_UNION IDENTIFIER '{' STRUCT_DECLARATION_LIST '}' .

    $default  reduce using rule 100 (STRUCT_OR_UNION_SPECIFIER)


State 212

  115 STRUCT_DECLARATOR: ':' CONSTANT_EXPRESSION .

    $default  reduce using rule 115 (STRUCT_DECLARATOR)


State 213

  113 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST ',' . STRUCT_DECLARATOR

    IDENTIFIER  shift, and go to state 1
    ':'         shift, and go to state 143
    '('         shift, and go to state 20
    '*'         shift, and go to state 21

    STRUCT_DECLARATOR  go to state 257
    DECLARATOR         go to state 146
    DIRECT_DECLARATOR  go to state 31
    POINTER            go to state 32


State 214

  107 STRUCT_DECLARATION: SPECIFIER_QUALIFIER_LIST STRUCT_DECLARATOR_LIST ';' .

    $default  reduce using rule 107 (STRUCT_DECLARATION)


State 215

  116 STRUCT_DECLARATOR: DECLARATOR ':' . CONSTANT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 132
    CONSTANT_EXPRESSION        go to state 258


State 216

  144 LABELED_STATEMENT: IDENTIFIER ':' STATEMENT .

    $default  reduce using rule 144 (LABELED_STATEMENT)


State 217

  145 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION ':' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 259
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 218

  146 LABELED_STATEMENT: DEFAULT ':' STATEMENT .

    $default  reduce using rule 146 (LABELED_STATEMENT)


State 219

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  157 SELECTION_STATEMENT: IF '(' EXPRESSION . ')' STATEMENT
  158                    | IF '(' EXPRESSION . ')' STATEMENT ELSE STATEMENT

    ','  shift, and go to state 202
    ')'  shift, and go to state 260


State 220

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  159 SELECTION_STATEMENT: SWITCH '(' EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 202
    ')'  shift, and go to state 261


State 221

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  160 ITERATION_STATEMENT: WHILE '(' EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 202
    ')'  shift, and go to state 262


State 222

  161 ITERATION_STATEMENT: DO STATEMENT WHILE . '(' EXPRESSION ')' ';'

    '('  shift, and go to state 263


State 223

  162 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT . EXPRESSION_STATEMENT ')' STATEMENT
  163                    | FOR '(' EXPRESSION_STATEMENT . EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    EXPRESSION_STATEMENT       go to state 264


State 224

  164 JUMP_STATEMENT: GOTO IDENTIFIER ';' .

    $default  reduce using rule 164 (JUMP_STATEMENT)


State 225

  168 JUMP_STATEMENT: RETURN EXPRESSION ';' .

    $default  reduce using rule 168 (JUMP_STATEMENT)


State 226

    4 PRIMARY_EXPRESSION: '(' EXPRESSION ')' .

    $default  reduce using rule 4 (PRIMARY_EXPRESSION)


State 227

   10 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION PTR_OP IDENTIFIER .

    $default  reduce using rule 10 (POSTFIX_EXPRESSION)


State 228

    9 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '.' IDENTIFIER .

    $default  reduce using rule 9 (POSTFIX_EXPRESSION)


State 229

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ')' .

    $default  reduce using rule 7 (POSTFIX_EXPRESSION)


State 230

    8 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST . ')'
   14 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST . ',' ASSIGNMENT_EXPRESSION

    ','  shift, and go to state 265
    ')'  shift, and go to state 266


State 231

   13 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 13 (ARGUMENT_EXPRESSION_LIST)


State 232

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION . ']'
   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION

    ','  shift, and go to state 202
    ']'  shift, and go to state 267


State 233

   57 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 57 (ASSIGNMENT_EXPRESSION)


State 234

   27 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLY CAST_EXPRESSION .

    $default  reduce using rule 27 (MULTIPLICATIVE_EXPRESSION)


State 235

   29 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MODULO CAST_EXPRESSION .

    $default  reduce using rule 29 (MULTIPLICATIVE_EXPRESSION)


State 236

   28 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE CAST_EXPRESSION .

    $default  reduce using rule 28 (MULTIPLICATIVE_EXPRESSION)


State 237

   27 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   28                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   29                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION
   31 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION PLUS MULTIPLICATIVE_EXPRESSION .

    MULTIPLY  shift, and go to state 183
    MODULO    shift, and go to state 184
    DIVIDE    shift, and go to state 185

    $default  reduce using rule 31 (ADDITIVE_EXPRESSION)


State 238

   27 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION . MULTIPLY CAST_EXPRESSION
   28                          | MULTIPLICATIVE_EXPRESSION . DIVIDE CAST_EXPRESSION
   29                          | MULTIPLICATIVE_EXPRESSION . MODULO CAST_EXPRESSION
   32 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION MINUS MULTIPLICATIVE_EXPRESSION .

    MULTIPLY  shift, and go to state 183
    MODULO    shift, and go to state 184
    DIVIDE    shift, and go to state 185

    $default  reduce using rule 32 (ADDITIVE_EXPRESSION)


State 239

   31 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   32                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION
   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION LEFT_OP ADDITIVE_EXPRESSION .

    PLUS   shift, and go to state 186
    MINUS  shift, and go to state 187

    $default  reduce using rule 34 (SHIFT_EXPRESSION)


State 240

   31 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION . PLUS MULTIPLICATIVE_EXPRESSION
   32                    | ADDITIVE_EXPRESSION . MINUS MULTIPLICATIVE_EXPRESSION
   35 SHIFT_EXPRESSION: SHIFT_EXPRESSION RIGHT_OP ADDITIVE_EXPRESSION .

    PLUS   shift, and go to state 186
    MINUS  shift, and go to state 187

    $default  reduce using rule 35 (SHIFT_EXPRESSION)


State 241

   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   35                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION
   39 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LE_OP SHIFT_EXPRESSION .

    LEFT_OP   shift, and go to state 188
    RIGHT_OP  shift, and go to state 189

    $default  reduce using rule 39 (RELATIONAL_EXPRESSION)


State 242

   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   35                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION
   40 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GE_OP SHIFT_EXPRESSION .

    LEFT_OP   shift, and go to state 188
    RIGHT_OP  shift, and go to state 189

    $default  reduce using rule 40 (RELATIONAL_EXPRESSION)


State 243

   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   35                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION
   38 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GT SHIFT_EXPRESSION .

    LEFT_OP   shift, and go to state 188
    RIGHT_OP  shift, and go to state 189

    $default  reduce using rule 38 (RELATIONAL_EXPRESSION)


State 244

   34 SHIFT_EXPRESSION: SHIFT_EXPRESSION . LEFT_OP ADDITIVE_EXPRESSION
   35                 | SHIFT_EXPRESSION . RIGHT_OP ADDITIVE_EXPRESSION
   37 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LT SHIFT_EXPRESSION .

    LEFT_OP   shift, and go to state 188
    RIGHT_OP  shift, and go to state 189

    $default  reduce using rule 37 (RELATIONAL_EXPRESSION)


State 245

   37 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   38                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   39                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   40                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION
   42 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQ_OP RELATIONAL_EXPRESSION .

    LE_OP  shift, and go to state 190
    GE_OP  shift, and go to state 191
    GT     shift, and go to state 192
    LT     shift, and go to state 193

    $default  reduce using rule 42 (EQUALITY_EXPRESSION)


State 246

   37 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION . LT SHIFT_EXPRESSION
   38                      | RELATIONAL_EXPRESSION . GT SHIFT_EXPRESSION
   39                      | RELATIONAL_EXPRESSION . LE_OP SHIFT_EXPRESSION
   40                      | RELATIONAL_EXPRESSION . GE_OP SHIFT_EXPRESSION
   43 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NE_OP RELATIONAL_EXPRESSION .

    LE_OP  shift, and go to state 190
    GE_OP  shift, and go to state 191
    GT     shift, and go to state 192
    LT     shift, and go to state 193

    $default  reduce using rule 43 (EQUALITY_EXPRESSION)


State 247

   42 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION . EQ_OP RELATIONAL_EXPRESSION
   43                    | EQUALITY_EXPRESSION . NE_OP RELATIONAL_EXPRESSION
   45 AND_EXPRESSION: AND_EXPRESSION '&' EQUALITY_EXPRESSION .

    EQ_OP  shift, and go to state 194
    NE_OP  shift, and go to state 195

    $default  reduce using rule 45 (AND_EXPRESSION)


State 248

   45 AND_EXPRESSION: AND_EXPRESSION . '&' EQUALITY_EXPRESSION
   47 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION '^' AND_EXPRESSION .

    '&'  shift, and go to state 196

    $default  reduce using rule 47 (EXCLUSIVE_OR_EXPRESSION)


State 249

   47 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION . '^' AND_EXPRESSION
   49 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION '|' EXCLUSIVE_OR_EXPRESSION .

    '^'  shift, and go to state 197

    $default  reduce using rule 49 (INCLUSIVE_OR_EXPRESSION)


State 250

   49 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION . '|' EXCLUSIVE_OR_EXPRESSION
   51 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION AND_OP INCLUSIVE_OR_EXPRESSION .

    '|'  shift, and go to state 198

    $default  reduce using rule 51 (LOGICAL_AND_EXPRESSION)


State 251

   51 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION . AND_OP INCLUSIVE_OR_EXPRESSION
   53 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION OR_OP LOGICAL_AND_EXPRESSION .

    AND_OP  shift, and go to state 199

    $default  reduce using rule 53 (LOGICAL_OR_EXPRESSION)


State 252

   55 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION . ':' CONDITIONAL_EXPRESSION
   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION

    ':'  shift, and go to state 268
    ','  shift, and go to state 202


State 253

   70 EXPRESSION: EXPRESSION ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 70 (EXPRESSION)


State 254

  150 COMPOUND_STATEMENT: '{' DECLARATION_LIST STATEMENT_LIST '}' .

    $default  reduce using rule 150 (COMPOUND_STATEMENT)


State 255

  134 INITIALIZER: '{' INITIALIZER_LIST '}' .

    $default  reduce using rule 134 (INITIALIZER)


State 256

  135 INITIALIZER: '{' INITIALIZER_LIST ',' . '}'
  137 INITIALIZER_LIST: INITIALIZER_LIST ',' . INITIALIZER

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 135
    '}'             shift, and go to state 269
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 136
    INITIALIZER                go to state 270


State 257

  113 STRUCT_DECLARATOR_LIST: STRUCT_DECLARATOR_LIST ',' STRUCT_DECLARATOR .

    $default  reduce using rule 113 (STRUCT_DECLARATOR_LIST)


State 258

  116 STRUCT_DECLARATOR: DECLARATOR ':' CONSTANT_EXPRESSION .

    $default  reduce using rule 116 (STRUCT_DECLARATOR)


State 259

  145 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION ':' STATEMENT .

    $default  reduce using rule 145 (LABELED_STATEMENT)


State 260

  157 SELECTION_STATEMENT: IF '(' EXPRESSION ')' . STATEMENT
  158                    | IF '(' EXPRESSION ')' . STATEMENT ELSE STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 271
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 261

  159 SELECTION_STATEMENT: SWITCH '(' EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 272
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 262

  160 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 273
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 263

  161 ITERATION_STATEMENT: DO STATEMENT WHILE '(' . EXPRESSION ')' ';'

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 274


State 264

  162 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT . ')' STATEMENT
  163                    | FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT . EXPRESSION ')' STATEMENT

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96
    ')'             shift, and go to state 275

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 276


State 265

   14 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' . ASSIGNMENT_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 277


State 266

    8 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '(' ARGUMENT_EXPRESSION_LIST ')' .

    $default  reduce using rule 8 (POSTFIX_EXPRESSION)


State 267

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION '[' EXPRESSION ']' .

    $default  reduce using rule 6 (POSTFIX_EXPRESSION)


State 268

   55 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' . CONDITIONAL_EXPRESSION

    IDENTIFIER      shift, and go to state 129
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '('             shift, and go to state 96

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 131
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 278


State 269

  135 INITIALIZER: '{' INITIALIZER_LIST ',' '}' .

    $default  reduce using rule 135 (INITIALIZER)


State 270

  137 INITIALIZER_LIST: INITIALIZER_LIST ',' INITIALIZER .

    $default  reduce using rule 137 (INITIALIZER_LIST)


State 271

  157 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT .
  158                    | IF '(' EXPRESSION ')' STATEMENT . ELSE STATEMENT

    ELSE  shift, and go to state 279

    ELSE      [reduce using rule 157 (SELECTION_STATEMENT)]
    $default  reduce using rule 157 (SELECTION_STATEMENT)


State 272

  159 SELECTION_STATEMENT: SWITCH '(' EXPRESSION ')' STATEMENT .

    $default  reduce using rule 159 (SELECTION_STATEMENT)


State 273

  160 ITERATION_STATEMENT: WHILE '(' EXPRESSION ')' STATEMENT .

    $default  reduce using rule 160 (ITERATION_STATEMENT)


State 274

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  161 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION . ')' ';'

    ','  shift, and go to state 202
    ')'  shift, and go to state 280


State 275

  162 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 281
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 276

   70 EXPRESSION: EXPRESSION . ',' ASSIGNMENT_EXPRESSION
  163 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION . ')' STATEMENT

    ','  shift, and go to state 202
    ')'  shift, and go to state 282


State 277

   14 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST ',' ASSIGNMENT_EXPRESSION .

    $default  reduce using rule 14 (ARGUMENT_EXPRESSION_LIST)


State 278

   55 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION '?' EXPRESSION ':' CONDITIONAL_EXPRESSION .

    $default  reduce using rule 55 (CONDITIONAL_EXPRESSION)


State 279

  158 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT ELSE . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 283
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 280

  161 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION ')' . ';'

    ';'  shift, and go to state 284


State 281

  162 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT ')' STATEMENT .

    $default  reduce using rule 162 (ITERATION_STATEMENT)


State 282

  163 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' . STATEMENT

    IDENTIFIER      shift, and go to state 73
    CONSTANT        shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    INC_OP          shift, and go to state 76
    DEC_OP          shift, and go to state 77
    PLUS            shift, and go to state 78
    MINUS           shift, and go to state 79
    MULTIPLY        shift, and go to state 80
    CASE            shift, and go to state 81
    DEFAULT         shift, and go to state 82
    IF              shift, and go to state 83
    SWITCH          shift, and go to state 84
    WHILE           shift, and go to state 85
    DO              shift, and go to state 86
    FOR             shift, and go to state 87
    GOTO            shift, and go to state 88
    CONTINUE        shift, and go to state 89
    BREAK           shift, and go to state 90
    RETURN          shift, and go to state 91
    '&'             shift, and go to state 92
    '~'             shift, and go to state 93
    '!'             shift, and go to state 94
    '{'             shift, and go to state 49
    '('             shift, and go to state 96
    ';'             shift, and go to state 97

    PRIMARY_EXPRESSION         go to state 98
    POSTFIX_EXPRESSION         go to state 99
    UNARY_EXPRESSION           go to state 100
    UNARY_OPERATOR             go to state 101
    CAST_EXPRESSION            go to state 102
    MULTIPLICATIVE_EXPRESSION  go to state 103
    ADDITIVE_EXPRESSION        go to state 104
    SHIFT_EXPRESSION           go to state 105
    RELATIONAL_EXPRESSION      go to state 106
    EQUALITY_EXPRESSION        go to state 107
    AND_EXPRESSION             go to state 108
    EXCLUSIVE_OR_EXPRESSION    go to state 109
    INCLUSIVE_OR_EXPRESSION    go to state 110
    LOGICAL_AND_EXPRESSION     go to state 111
    LOGICAL_OR_EXPRESSION      go to state 112
    CONDITIONAL_EXPRESSION     go to state 113
    ASSIGNMENT_EXPRESSION      go to state 114
    EXPRESSION                 go to state 115
    STATEMENT                  go to state 285
    LABELED_STATEMENT          go to state 117
    COMPOUND_STATEMENT         go to state 118
    EXPRESSION_STATEMENT       go to state 121
    SELECTION_STATEMENT        go to state 122
    ITERATION_STATEMENT        go to state 123
    JUMP_STATEMENT             go to state 124


State 283

  158 SELECTION_STATEMENT: IF '(' EXPRESSION ')' STATEMENT ELSE STATEMENT .

    $default  reduce using rule 158 (SELECTION_STATEMENT)


State 284

  161 ITERATION_STATEMENT: DO STATEMENT WHILE '(' EXPRESSION ')' ';' .

    $default  reduce using rule 161 (ITERATION_STATEMENT)


State 285

  163 ITERATION_STATEMENT: FOR '(' EXPRESSION_STATEMENT EXPRESSION_STATEMENT EXPRESSION ')' STATEMENT .

    $default  reduce using rule 163 (ITERATION_STATEMENT)
